{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExactInputSingleDAItoBUSD",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExactInputSingleDAItoUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMakeABUSDSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMakeAUSDCSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526007805460ff191660011790556200001b62000032565b6008553480156200002b57600080fd5b5062001282565b6040805160a08101825260056060820181815264105b9d9a5b60da1b60808401528252617a6960208084019190915283518085018552601581527f687474703a2f2f3132372e302e302e313a3835343500000000000000000000008183015283850152835164185b9d9a5b60da1b8152600992810192909252925190819003602501902081518051600094620000cd92849291019062000ef7565b50602082810151600183015560408301518051620000f2926002850192019062000ef7565b50506040805160a0810182526007606082018181526612185c991a185d60ca1b60808401528252617a6960208084019190915283518085018552601581527f687474703a2f2f3132372e302e302e313a38353435000000000000000000000081830152838501528351661a185c991a185d60ca1b81526009928101929092529251908190036027019020815180519294509092620001969284929091019062000ef7565b50602082810151600183015560408301518051620001bb926002850192019062000ef7565b5090505060405180606001604052806040518060400160405280600781526020016613585a5b9b995d60ca1b8152508152602001600181526020016040518060600160405280603d8152602001620027c8603d9139905260408051661b585a5b9b995d60ca1b8152600960078201529051908190036027019020815180516200024d9183916020919091019062000ef7565b5060208281015160018301556040830151805162000272926002850192019062000ef7565b50905050604051806060016040528060405180604001604052806006815260200165476f65726c6960d01b8152508152602001600581526020016040518060600160405280603c815260200162002805603c913990526040805165676f65726c6960d01b815260096006820152905190819003602601902081518051620003029183916020919091019062000ef7565b5060208281015160018301556040830151805162000327926002850192019062000ef7565b50506040805160a081018252600760608201818152665365706f6c696160c81b6080840152825262aa36a760208084019190915283518085018552601781527f68747470733a2f2f7270632e7365706f6c69612e64657600000000000000000081830152838501528351667365706f6c696160c81b81526009928101929092529251908190036027019020815180519294509092620003cc9284929091019062000ef7565b50602082810151600183015560408301518051620003f1926002850192019062000ef7565b50506040805160a081018252600860608201818152674f7074696d69736d60c01b60808401528252600a60208084019190915283518085018552601b81527f68747470733a2f2f6d61696e6e65742e6f7074696d69736d2e696f000000000081830152838501528351676f7074696d69736d60c01b81526009928101929092529251908190036028019020815180519294509092620004969284929091019062000ef7565b50602082810151600183015560408301518051620004bb926002850192019062000ef7565b50506040805160a081018252600f606082018181526e4f7074696d69736d20476f65726c6960881b608084015282526101a460208084019190915283518085018552601a81527f68747470733a2f2f676f65726c692e6f7074696d69736d2e696f000000000000818301528385015283516e6f7074696d69736d5f676f65726c6960881b8152600992810192909252925190819003602f0190208151805192945090926200056f9284929091019062000ef7565b5060208281015160018301556040830151805162000594926002850192019062000ef7565b50506040805160a081018252600c606082018181526b417262697472756d204f6e6560a01b6080840152825261a4b160208084019190915283518085018552601c81527f68747470733a2f2f617262312e617262697472756d2e696f2f72706300000000818301528385015283516b617262697472756d5f6f6e6560a01b8152600992810192909252925190819003602c019020815180519294509092620006429284929091019062000ef7565b5060208281015160018301556040830151805162000667926002850192019062000ef7565b5090505060405180606001604052806040518060400160405280601381526020017f417262697472756d204f6e6520476f65726c6900000000000000000000000000815250815260200162066eed815260200160405180606001604052806025815260200162002841602591399052604080517f617262697472756d5f6f6e655f676f65726c6900000000000000000000000000815260096013820152905190819003603301902081518051620007279183916020919091019062000ef7565b506020828101516001830155604083015180516200074c926002850192019062000ef7565b50506040805160a081018252600d606082018181526c417262697472756d204e6f766160981b6080840152825261a4ba60208084019190915283518085018552601c81527f68747470733a2f2f6e6f76612e617262697472756d2e696f2f72706300000000818301528385015283516c617262697472756d5f6e6f766160981b8152600992810192909252925190819003602d019020815180519294509092620007fc9284929091019062000ef7565b5060208281015160018301556040830151805162000821926002850192019062000ef7565b50506040805160a081018252600760608201818152662837b63cb3b7b760c91b60808401528252608960208084019190915283518085018552601781527f68747470733a2f2f706f6c79676f6e2d7270632e636f6d00000000000000000081830152838501528351663837b63cb3b7b760c91b81526009928101929092529251908190036027019020815180519294509092620008c49284929091019062000ef7565b50602082810151600183015560408301518051620008e9926002850192019062000ef7565b50506040805160a081018252600e606082018181526d506f6c79676f6e204d756d62616960901b608084015282526201388160208084019190915283518085018552601e81527f68747470733a2f2f7270632d6d756d6261692e6d617469632e746f6461790000818301528385015283516d706f6c79676f6e5f6d756d62616960901b8152600992810192909252925190819003602e0190208151805192945090926200099c9284929091019062000ef7565b50602082810151600183015560408301518051620009c1926002850192019062000ef7565b509050506040518060600160405280604051806040016040528060098152602001684176616c616e63686560b81b815250815260200161a86a8152602001604051806060016040528060258152602001620027a360259139905260408051686176616c616e63686560b81b815260098082015290519081900360290190208151805162000a579183916020919091019062000ef7565b5060208281015160018301556040830151805162000a7c926002850192019062000ef7565b5090505060405180606001604052806040518060400160405280600e81526020016d4176616c616e6368652046756a6960901b815250815260200161a86981526020016040518060600160405280602a815260200162002866602a91399052604080516d6176616c616e6368655f66756a6960901b81526009600e820152905190819003602e0190208151805162000b1d9183916020919091019062000ef7565b5060208281015160018301556040830151805162000b42926002850192019062000ef7565b5090505060405180606001604052806040518060400160405280600f81526020016e2127211029b6b0b93a1021b430b4b760891b81525081526020016038815260200160405180606001604052806021815260200162002890602191399052604080516e3137312fb9b6b0b93a2fb1b430b4b760891b81526009600f820152905190819003602f0190208151805162000be49183916020919091019062000ef7565b5060208281015160018301556040830151805162000c09926002850192019062000ef7565b5090505060405180606001604052806040518060400160405280601781526020017f424e4220536d61727420436861696e20546573746e65740000000000000000008152508152602001606181526020016040518060600160405280602e815260200162002775602e91399052604080517f626e625f736d6172745f636861696e5f746573746e657400000000000000000081526009601782015290519081900360370190208151805162000cc79183916020919091019062000ef7565b5060208281015160018301556040830151805162000cec926002850192019062000ef7565b50506040805160a081018252600c606082018181526b23b737b9b4b99021b430b4b760a11b60808401528252606460208084019190915283518085018552601b81527f68747470733a2f2f7270632e676e6f736973636861696e2e636f6d0000000000818301528385015283516b33b737b9b4b9afb1b430b4b760a11b8152600992810192909252925190819003602c01902081518051929450909262000d999284929091019062000ef7565b5060208281015160018301556040830151805162000dbe926002850192019062000ef7565b5090505060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316639d2ad72a6040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000e26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000e509190810190620010b8565b905060005b815181101562000eee5781818151811062000e745762000e74620011ea565b602002602001015160200151600983838151811062000e975762000e97620011ea565b60200260200101516000015160405162000eb2919062001200565b9081526020016040518091039020600201908051906020019062000ed892919062000ef7565b508062000ee5816200121e565b91505062000e55565b50600091505090565b82805462000f059062001246565b90600052602060002090601f01602090048101928262000f29576000855562000f74565b82601f1062000f4457805160ff191683800117855562000f74565b8280016001018555821562000f74579182015b8281111562000f7457825182559160200191906001019062000f57565b5062000f8292915062000f86565b5090565b5b8082111562000f82576000815560010162000f87565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171562000fd85762000fd862000f9d565b60405290565b604051601f8201601f191681016001600160401b038111828210171562001009576200100962000f9d565b604052919050565b60005b838110156200102e57818101518382015260200162001014565b838111156200103e576000848401525b50505050565b600082601f8301126200105657600080fd5b81516001600160401b0381111562001072576200107262000f9d565b62001087601f8201601f191660200162000fde565b8181528460208386010111156200109d57600080fd5b620010b082602083016020870162001011565b949350505050565b60006020808385031215620010cc57600080fd5b82516001600160401b0380821115620010e457600080fd5b818501915085601f830112620010f957600080fd5b8151818111156200110e576200110e62000f9d565b8060051b6200111f85820162000fde565b91825283810185019185810190898411156200113a57600080fd5b86860192505b83831015620011dd578251858111156200115a5760008081fd5b86016040818c03601f1901811315620011735760008081fd5b6200117d62000fb3565b8983015188811115620011905760008081fd5b620011a08e8c8387010162001044565b825250908201519087821115620011b75760008081fd5b620011c78d8b8486010162001044565b818b015284525050918601919086019062001140565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600082516200121481846020870162001011565b9190910192915050565b6000600182016200123f57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200125b57607f821691505b6020821081036200127c57634e487b7160e01b600052602260045260246000fd5b50919050565b6114e380620012926000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806359d2a6b51161005b57806359d2a6b51461009c5780637b0982f8146100a4578063ba414fa6146100ac578063fa7626d4146100c857600080fd5b80630a9254e4146100825780630c9d72a01461008c5780631c92c97b14610094575b600080fd5b61008a6100d5565b005b61008a610120565b61008a6102f7565b61008a610574565b61008a6106e2565b6100b4610935565b604051901515815260200160405180910390f35b6007546100b49060ff1681565b6040516100e190610f43565b604051809103906000f0801580156100fd573d6000803e3d6000fd5b50601180546001600160a01b0319166001600160a01b0392909216919091179055565b601154604051632559cf2d60e11b8152736b175474e89094c44da98b954eedeac495271d0f600482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48602482015273e592427a0aece92de3edee1f18e0157c0586156460448201526064808201526000916001600160a01b031690634ab39e5a906084016020604051808303816000875af11580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd9190610f50565b90506101eb60008211610a62565b60008051602061148e83398151915261020382610ad9565b6040516020016102139190610f99565b60408051601f198184030181529082905261022d91610ff6565b60405180910390a16040516370a0823160e01b815230600482015260008051602061148e833981519152906102c29073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48906370a08231906024015b602060405180830381865afa158015610299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bd9190610f50565b610ad9565b6040516020016102d29190611009565b60408051601f19818403018152908290526102ec91610ff6565b60405180910390a150565b61031473dfd5293d8e347dfe59e90efd55b2956a1343963d610af6565b6040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486020820152610bb8818301523360608201526305f5e0ff6080820152606460a0820152600060c0820181905260e082018190529151829173e592427a0aece92de3edee1f18e0157c05861564916103a5919060240161103f565b60408051601f198184030181529181526020820180516001600160e01b031663252deb5160e21b179052516103da91906110a8565b6000604051808303816000865af19150503d8060008114610417576040519150601f19603f3d011682016040523d82523d6000602084013e61041c565b606091505b50915091506104558260405180604001604052806012815260200171149bdd5d195c8818d85b1b0819985a5b195960721b815250610bdd565b60008051602061148e833981519152816040516104729190610ff6565b60405180910390a160405130602482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb489060440160408051601f198184030181529181526020820180516001600160e01b03166370a0823160e01b179052516104d191906110a8565b6000604051808303816000865af19150503d806000811461050e576040519150601f19603f3d011682016040523d82523d6000602084013e610513565b606091505b5060408051808201909152601081526f1554d110c818d85b1b0819985a5b195960821b6020820152919350915061054b908390610bdd565b60008051602061148e833981519152816040516105689190610ff6565b60405180910390a15050565b601154604051632559cf2d60e11b8152736b175474e89094c44da98b954eedeac495271d0f600482015273dfd5293d8e347dfe59e90efd55b2956a1343963d602482015273e592427a0aece92de3edee1f18e0157c0586156460448201526064808201526000916001600160a01b031690634ab39e5a906084016020604051808303816000875af115801561060d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106319190610f50565b905061063d6001610a62565b60008051602061148e83398151915261065582610ad9565b6040516020016106659190610f99565b60408051601f198184030181529082905261067f91610ff6565b60405180910390a16040516370a0823160e01b815230600482015260008051602061148e833981519152906106d29073dfd5293d8e347dfe59e90efd55b2956a1343963d906370a082319060240161027c565b6040516020016102d291906110c4565b6106ff73dfd5293d8e347dfe59e90efd55b2956a1343963d610af6565b6040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273dfd5293d8e347dfe59e90efd55b2956a1343963d6020820152610bb8818301523360608201526305f5e0ff6080820152606460a0820152600060c0820181905260e082018190529151829173e592427a0aece92de3edee1f18e0157c0586156491610790919060240161103f565b60408051601f198184030181529181526020820180516001600160e01b031663252deb5160e21b179052516107c591906110a8565b6000604051808303816000865af19150503d8060008114610802576040519150601f19603f3d011682016040523d82523d6000602084013e610807565b606091505b50915091506108408260405180604001604052806012815260200171149bdd5d195c8818d85b1b0819985a5b195960721b815250610bdd565b60008051602061148e8339815191528160405161085d9190610ff6565b60405180910390a1604051306024820152736b175474e89094c44da98b954eedeac495271d0f9060440160408051601f198184030181529181526020820180516001600160e01b03166370a0823160e01b179052516108bc91906110a8565b6000604051808303816000865af19150503d80600081146108f9576040519150601f19603f3d011682016040523d82523d6000602084013e6108fe565b606091505b5060408051808201909152600f81526e1110524818d85b1b0819985a5b1959608a1b6020820152919350915061054b908390610bdd565b600754600090610100900460ff16156109575750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610a5d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916109e5917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016110ed565b60408051601f19818403018152908290526109ff916110a8565b6000604051808303816000865af19150503d8060008114610a3c576040519150601f19603f3d011682016040523d82523d6000602084013e610a41565b606091505b5091505080806020019051810190610a59919061111e565b9150505b919050565b80610ad6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610ac69060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1610ad6610c26565b50565b6060610af082610ae884610d32565b600101610d9c565b92915050565b60405163c88a5e6d60e01b81526001600160a01b0382166004820152600160801b6024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610b5557600080fd5b505af1158015610b69573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b158015610bc257600080fd5b505af1158015610bd6573d6000803e3d6000fd5b5050505050565b81610c22577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610c119190611140565b60405180910390a1610c2282610a62565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610d215760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610cc092916020016110ed565b60408051601f1981840301815290829052610cda916110a8565b6000604051808303816000865af19150503d8060008114610d17576040519150601f19603f3d011682016040523d82523d6000602084013e610d1c565b606091505b505050505b6007805461ff001916610100179055565b600080608083901c15610d4a5760809290921c916010015b604083901c15610d5f5760409290921c916008015b602083901c15610d745760209290921c916004015b601083901c15610d895760109290921c916002015b600883901c15610af05760010192915050565b60606000610dab836002611185565b610db69060026111a4565b67ffffffffffffffff811115610dce57610dce6111bc565b6040519080825280601f01601f191660200182016040528015610df8576020820181803683370190505b509050600360fc1b81600081518110610e1357610e136111d2565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e4257610e426111d2565b60200101906001600160f81b031916908160001a9053506000610e66846002611185565b610e719060016111a4565b90505b6001811115610ee9576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610ea557610ea56111d2565b1a60f81b828281518110610ebb57610ebb6111d2565b60200101906001600160f81b031916908160001a90535060049490941c93610ee2816111e8565b9050610e74565b508315610f3c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b61028e8061120083390190565b600060208284031215610f6257600080fd5b5051919050565b60005b83811015610f84578181015183820152602001610f6c565b83811115610f93576000848401525b50505050565b68029bbb0b83832b21d160bd1b815260008251610fbd816009850160208701610f69565b9190910160090192915050565b60008151808452610fe2816020860160208601610f69565b601f01601f19169290920160200192915050565b602081526000610f3c6020830184610fca565b6d02aa9a221902130b630b731b29d160951b81526000825161103281600e850160208701610f69565b91909101600e0192915050565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b600082516110ba818460208701610f69565b9190910192915050565b6d0212aa9a2102130b630b731b29d160951b81526000825161103281600e850160208701610f69565b6001600160e01b0319831681528151600090611110816004850160208701610f69565b919091016004019392505050565b60006020828403121561113057600080fd5b81518015158114610f3c57600080fd5b60408152600560408201526422b93937b960d91b6060820152608060208201526000610f3c6080830184610fca565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561119f5761119f61116f565b500290565b600082198211156111b7576111b761116f565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816111f7576111f761116f565b50600019019056fe608060405234801561001057600080fd5b5061026e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634ab39e5a14610030575b600080fd5b61004361003e3660046101b2565b610055565b60405190815260200160405180910390f35b6000826001600160a01b031663414bf389604051806101000160405280886001600160a01b03168152602001876001600160a01b03168152602001610bb862ffffff168152602001336001600160a01b031681526020016305f5e0ff8152602001858152602001600a866100c991906101fd565b815260006020918201526040805160e085811b6001600160e01b031916825284516001600160a01b03908116600484015293850151841660248301529184015162ffffff1660448201526060840151831660648201526080840151608482015260a084015160a482015260c084015160c48201529201511660e4820152610104016020604051808303816000875af1158015610169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018d919061021f565b95945050505050565b80356001600160a01b03811681146101ad57600080fd5b919050565b600080600080608085870312156101c857600080fd5b6101d185610196565b93506101df60208601610196565b92506101ed60408601610196565b9396929550929360600135925050565b60008261021a57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561023157600080fd5b505191905056fea26469706673582212209bdf447e3e3d545d4df41833bfb0257ddaf3f0a05d0e1eedff655dc0ecb821aa64736f6c634300080d003323b62ad0584d24a75f0bf3560391ef5659ec6db1269c56e11aa241d637f19b20a26469706673582212205e0b1a7ce3ac4ec95c4387932ad3aa6e54b68d271b4c0a4f79e61a3bd6df389064736f6c634300080d003368747470733a2f2f646174612d736565642d7072656273632d312d73312e62696e616e63652e6f72673a3835343568747470733a2f2f6170692e617661782e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6d61696e6e65742e696e667572612e696f2f76332f363737303435346263366561343263353861616331323937383533316239336668747470733a2f2f676f65726c692e696e667572612e696f2f76332f363737303435346263366561343263353861616331323937383533316239336668747470733a2f2f676f65726c692d726f6c6c75702e617262697472756d2e696f2f72706368747470733a2f2f6170692e617661782d746573742e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6273632d6461746173656564312e62696e616e63652e6f7267",
    "sourceMap": "489:3222:22:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;650:14:4;:12;:14::i;:::-;620:44;;489:3222:22;;;;;;;;;;;;5868:2125:4;6002:46;;;;;;;;;;;;;;;-1:-1:-1;;;6002:46:4;;;;;;6017:5;6002:46;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6002:46:4;5981:18;;-1:-1:-1;;;216:20:23;;5981:9:4;252:11:23;;;5981:18:4;;;;;;;;;;;;;;:67;;;;-1:-1:-1;;5981:67:4;;:18;;:67;;;;:::i;:::-;-1:-1:-1;5981:67:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6081:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;6081:48:4;;;;;;6098:5;6081:48;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6081:48:4;6058:20;;-1:-1:-1;;;476:22:23;;6058:9:4;514:11:23;;;6058:20:4;;;;;;;;;;;;;;:71;;;;6081:48;;-1:-1:-1;6058:20:4;;:71;;:20;;:71;;;;;:::i;:::-;-1:-1:-1;6058:71:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6162:84;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6162:84:4;;;;;;;6179:1;6162:84;;;;;;;;;;;;;;;;;;;;;;;6139:20;;;-1:-1:-1;;;738:22:23;;6139:9:4;785:1:23;776:11;;6139:20:4;;;;;;;;;;;:107;;;;;;:20;;;:107;;;;;;:::i;:::-;-1:-1:-1;6139:107:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6278:82;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6278:82:4;;;;;;;6294:1;6278:82;;;;;;;;;;;;;;;;;;;;;;;6256:19;;;-1:-1:-1;;;1000:21:23;;6256:9:4;1046:1:23;1037:11;;6256:19:4;;;;;;;;;;;:104;;;;;;:19;;;:104;;;;;;:::i;:::-;-1:-1:-1;6256:104:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6393:53:4;;;;;;;;;;;;;;;-1:-1:-1;;;6393:53:4;;;;;;6410:8;6393:53;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6393:53:4;6370:20;;-1:-1:-1;;;1261:22:23;;6370:9:4;1299:11:23;;;6370:20:4;;;;;;;;;;;;;;:76;;;;6393:53;;-1:-1:-1;6370:20:4;;:76;;:20;;:76;;;;;:::i;:::-;-1:-1:-1;6370:76:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6480:52:4;;;;;;;;;;;;;;;-1:-1:-1;;;6480:52:4;;;;;;6498:2;6480:52;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6480:52:4;6456:21;;-1:-1:-1;;;1523:23:23;;6456:9:4;1562:11:23;;;6456:21:4;;;;;;;;;;;;;;:76;;;;6480:52;;-1:-1:-1;6456:21:4;;:76;;:21;;:76;;;;;:::i;:::-;-1:-1:-1;6456:76:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6573:59:4;;;;;;;;;;;;;;;-1:-1:-1;;;6573:59:4;;;;;;6598:3;6573:59;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6573:59:4;6542:28;;-1:-1:-1;;;1786:30:23;;6542:9:4;1832:12:23;;;6542:28:4;;;;;;;;;;;;;;:90;;;;6573:59;;-1:-1:-1;6542:28:4;;:90;;:28;;:90;;;;;:::i;:::-;-1:-1:-1;6542:90:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6670:60:4;;;;;;;;;;;;;;;-1:-1:-1;;;6670:60:4;;;;;;6692:5;6670:60;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6670:60:4;6642:25;;-1:-1:-1;;;2057:27:23;;6642:9:4;2100:12:23;;;6642:25:4;;;;;;;;;;;;;;:88;;;;6670:60;;-1:-1:-1;6642:25:4;;:88;;:25;;:88;;;;;:::i;:::-;-1:-1:-1;6642:88:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6775:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6804:6;6775:77;;;;;;;;;;;;;;;;;;;;;;;6740:32;;;2337:21:23;2325:34;;6740:9:4;2384:2:23;2375:12;;6740:32:4;;;;;;;;;;;:112;;;;;;:32;;;:112;;;;;;:::i;:::-;-1:-1:-1;6740:112:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6891:61:4;;;;;;;;;;;;;;;-1:-1:-1;;;6891:61:4;;;;;;6914:5;6891:61;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6891:61:4;6862:26;;-1:-1:-1;;;2600:28:23;;6862:9:4;2644:12:23;;;6862:26:4;;;;;;;;;;;;;;:90;;;;6891:61;;-1:-1:-1;6862:26:4;;:90;;:26;;:90;;;;;:::i;:::-;-1:-1:-1;6862:90:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6985:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;6985:48:4;;;;;;7002:3;6985:48;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6985:48:4;6962:20;;-1:-1:-1;;;2869:22:23;;6962:9:4;2907:11:23;;;6962:20:4;;;;;;;;;;;;;;:71;;;;6985:48;;-1:-1:-1;6962:20:4;;:71;;:20;;:71;;;;;:::i;:::-;-1:-1:-1;6962:71:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7073:64:4;;;;;;;;;;;;;;;-1:-1:-1;;;7073:64:4;;;;;;7097:5;7073:64;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7073:64:4;7043:27;;-1:-1:-1;;;3131:29:23;;7043:9:4;3176:12:23;;;7043:27:4;;;;;;;;;;;;;;:94;;;;7073:64;;-1:-1:-1;7043:27:4;;:94;;:27;;:94;;;;;:::i;:::-;-1:-1:-1;7043:94:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7172:66;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7172:66:4;;;;;;;7191:5;7172:66;;;;;;;;;;;;;;;;;;;;;;;7147:22;;;-1:-1:-1;;;3401:24:23;;7147:9:4;3441:11:23;;;7147:22:4;;;;;;;;;;;:91;;;;;;:22;;;:91;;;;;;:::i;:::-;-1:-1:-1;7147:91:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7278:76;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7278:76:4;;;;;;;7302:5;7278:76;;;;;;;;;;;;;;;;;;;;;;;7248:27;;;-1:-1:-1;;;3665:29:23;;7248:9:4;3719:2:23;3710:12;;7248:27:4;;;;;;;;;;;:106;;;;;;:27;;;:106;;;;;;:::i;:::-;-1:-1:-1;7248:106:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7395:65;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7395:65:4;;;;;;;7420:2;7395:65;;;;;;;;;;;;;;;;;;;;;;;7364:28;;;-1:-1:-1;;;3935:30:23;;7364:9:4;3990:2:23;3981:12;;7364:28:4;;;;;;;;;;;:96;;;;;;:28;;;:96;;;;;;:::i;:::-;-1:-1:-1;7364:96:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7509:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7542:2;7509:86;;;;;;;;;;;;;;;;;;;;;;;7470:36;;;4218:25:23;4206:38;;7470:9:4;4269:2:23;4260:12;;7470:36:4;;;;;;;;;;;:125;;;;;;:36;;;:125;;;;;;:::i;:::-;-1:-1:-1;7470:125:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7658:57:4;;;;;;;;;;;;;;;-1:-1:-1;;;7658:57:4;;;;;;7680:3;7658:57;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7658:57:4;7630:25;;-1:-1:-1;;;4485:27:23;;7630:9:4;4528:12:23;;;7630:25:4;;;;;;;;;;;;;;:85;;;;7658:57;;-1:-1:-1;7630:25:4;;:85;;:25;;:85;;;;;:::i;:::-;-1:-1:-1;7630:85:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7807:20;245:28;237:37;;-1:-1:-1;;;;;7830:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7830:18:4;;;;;;;;;;;;:::i;:::-;7807:41;;7863:9;7858:111;7882:4;:11;7878:1;:15;7858:111;;;7947:4;7952:1;7947:7;;;;;;;;:::i;:::-;;;;;;;:11;;;7914:9;7924:4;7929:1;7924:7;;;;;;;;:::i;:::-;;;;;;;:12;;;7914:23;;;;;;:::i;:::-;;;;;;;;;;;;;:30;;:44;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7895:3:4;;;;:::i;:::-;;;;7858:111;;;;7985:1;7978:8;;;5868:2125;:::o;489:3222:22:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;489:3222:22;;;-1:-1:-1;489:3222:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;4551:127:23;4612:10;4607:3;4603:20;4600:1;4593:31;4643:4;4640:1;4633:15;4667:4;4664:1;4657:15;4683:257;4755:4;4749:11;;;4787:17;;-1:-1:-1;;;;;4819:34:23;;4855:22;;;4816:62;4813:88;;;4881:18;;:::i;:::-;4917:4;4910:24;4683:257;:::o;4945:275::-;5016:2;5010:9;5081:2;5062:13;;-1:-1:-1;;5058:27:23;5046:40;;-1:-1:-1;;;;;5101:34:23;;5137:22;;;5098:62;5095:88;;;5163:18;;:::i;:::-;5199:2;5192:22;4945:275;;-1:-1:-1;4945:275:23:o;5225:258::-;5297:1;5307:113;5321:6;5318:1;5315:13;5307:113;;;5397:11;;;5391:18;5378:11;;;5371:39;5343:2;5336:10;5307:113;;;5438:6;5435:1;5432:13;5429:48;;;5473:1;5464:6;5459:3;5455:16;5448:27;5429:48;;5225:258;;;:::o;5488:497::-;5542:5;5595:3;5588:4;5580:6;5576:17;5572:27;5562:55;;5613:1;5610;5603:12;5562:55;5636:13;;-1:-1:-1;;;;;5661:26:23;;5658:52;;;5690:18;;:::i;:::-;5734:55;5777:2;5758:13;;-1:-1:-1;;5754:27:23;5783:4;5750:38;5734:55;:::i;:::-;5814:2;5805:7;5798:19;5860:3;5853:4;5848:2;5840:6;5836:15;5832:26;5829:35;5826:55;;;5877:1;5874;5867:12;5826:55;5890:64;5951:2;5944:4;5935:7;5931:18;5924:4;5916:6;5912:17;5890:64;:::i;:::-;5972:7;5488:497;-1:-1:-1;;;;5488:497:23:o;5990:1909::-;6106:6;6137:2;6180;6168:9;6159:7;6155:23;6151:32;6148:52;;;6196:1;6193;6186:12;6148:52;6223:16;;-1:-1:-1;;;;;6288:14:23;;;6285:34;;;6315:1;6312;6305:12;6285:34;6353:6;6342:9;6338:22;6328:32;;6398:7;6391:4;6387:2;6383:13;6379:27;6369:55;;6420:1;6417;6410:12;6369:55;6449:2;6443:9;6471:2;6467;6464:10;6461:36;;;6477:18;;:::i;:::-;6523:2;6520:1;6516:10;6546:28;6570:2;6566;6562:11;6546:28;:::i;:::-;6608:15;;;6678:11;;;6674:20;;;6639:12;;;;6706:19;;;6703:39;;;6738:1;6735;6728:12;6703:39;6770:2;6766;6762:11;6751:22;;6782:1087;6798:6;6793:3;6790:15;6782:1087;;;6877:3;6871:10;6913:2;6900:11;6897:19;6894:109;;;6957:1;6986:2;6982;6975:14;6894:109;7026:20;;7069:4;7097:16;;;-1:-1:-1;;7093:30:23;7089:39;-1:-1:-1;7086:129:23;;;7169:1;7198:2;7194;7187:14;7086:129;7241:22;;:::i;:::-;7306:2;7302;7298:11;7292:18;7339:2;7329:8;7326:16;7323:109;;;7384:1;7414:3;7409;7402:16;7323:109;7459:65;7516:7;7511:2;7500:8;7496:2;7492:17;7488:26;7459:65;:::i;:::-;7445:80;;-1:-1:-1;7560:11:23;;;7554:18;;7588:16;;;7585:109;;;7646:1;7676:3;7671;7664:16;7585:109;7730:65;7787:7;7782:2;7771:8;7767:2;7763:17;7759:26;7730:65;:::i;:::-;7714:14;;;7707:89;7809:18;;-1:-1:-1;;6815:12:23;;;;7847;;;;6782:1087;;;7888:5;5990:1909;-1:-1:-1;;;;;;;;;5990:1909:23:o;7904:127::-;7965:10;7960:3;7956:20;7953:1;7946:31;7996:4;7993:1;7986:15;8020:4;8017:1;8010:15;8036:276;8167:3;8205:6;8199:13;8221:53;8267:6;8262:3;8255:4;8247:6;8243:17;8221:53;:::i;:::-;8290:16;;;;;8036:276;-1:-1:-1;;8036:276:23:o;8317:232::-;8356:3;8377:17;;;8374:140;;8436:10;8431:3;8427:20;8424:1;8417:31;8471:4;8468:1;8461:15;8499:4;8496:1;8489:15;8374:140;-1:-1:-1;8541:1:23;8530:13;;8317:232::o;8554:380::-;8633:1;8629:12;;;;8676;;;8697:61;;8751:4;8743:6;8739:17;8729:27;;8697:61;8804:2;8796:6;8793:14;8773:18;8770:38;8767:161;;8850:10;8845:3;8841:20;8838:1;8831:31;8885:4;8882:1;8875:15;8913:4;8910:1;8903:15;8767:161;;8554:380;;;:::o;:::-;489:3222:22;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806359d2a6b51161005b57806359d2a6b51461009c5780637b0982f8146100a4578063ba414fa6146100ac578063fa7626d4146100c857600080fd5b80630a9254e4146100825780630c9d72a01461008c5780631c92c97b14610094575b600080fd5b61008a6100d5565b005b61008a610120565b61008a6102f7565b61008a610574565b61008a6106e2565b6100b4610935565b604051901515815260200160405180910390f35b6007546100b49060ff1681565b6040516100e190610f43565b604051809103906000f0801580156100fd573d6000803e3d6000fd5b50601180546001600160a01b0319166001600160a01b0392909216919091179055565b601154604051632559cf2d60e11b8152736b175474e89094c44da98b954eedeac495271d0f600482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48602482015273e592427a0aece92de3edee1f18e0157c0586156460448201526064808201526000916001600160a01b031690634ab39e5a906084016020604051808303816000875af11580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd9190610f50565b90506101eb60008211610a62565b60008051602061148e83398151915261020382610ad9565b6040516020016102139190610f99565b60408051601f198184030181529082905261022d91610ff6565b60405180910390a16040516370a0823160e01b815230600482015260008051602061148e833981519152906102c29073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48906370a08231906024015b602060405180830381865afa158015610299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bd9190610f50565b610ad9565b6040516020016102d29190611009565b60408051601f19818403018152908290526102ec91610ff6565b60405180910390a150565b61031473dfd5293d8e347dfe59e90efd55b2956a1343963d610af6565b6040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486020820152610bb8818301523360608201526305f5e0ff6080820152606460a0820152600060c0820181905260e082018190529151829173e592427a0aece92de3edee1f18e0157c05861564916103a5919060240161103f565b60408051601f198184030181529181526020820180516001600160e01b031663252deb5160e21b179052516103da91906110a8565b6000604051808303816000865af19150503d8060008114610417576040519150601f19603f3d011682016040523d82523d6000602084013e61041c565b606091505b50915091506104558260405180604001604052806012815260200171149bdd5d195c8818d85b1b0819985a5b195960721b815250610bdd565b60008051602061148e833981519152816040516104729190610ff6565b60405180910390a160405130602482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb489060440160408051601f198184030181529181526020820180516001600160e01b03166370a0823160e01b179052516104d191906110a8565b6000604051808303816000865af19150503d806000811461050e576040519150601f19603f3d011682016040523d82523d6000602084013e610513565b606091505b5060408051808201909152601081526f1554d110c818d85b1b0819985a5b195960821b6020820152919350915061054b908390610bdd565b60008051602061148e833981519152816040516105689190610ff6565b60405180910390a15050565b601154604051632559cf2d60e11b8152736b175474e89094c44da98b954eedeac495271d0f600482015273dfd5293d8e347dfe59e90efd55b2956a1343963d602482015273e592427a0aece92de3edee1f18e0157c0586156460448201526064808201526000916001600160a01b031690634ab39e5a906084016020604051808303816000875af115801561060d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106319190610f50565b905061063d6001610a62565b60008051602061148e83398151915261065582610ad9565b6040516020016106659190610f99565b60408051601f198184030181529082905261067f91610ff6565b60405180910390a16040516370a0823160e01b815230600482015260008051602061148e833981519152906106d29073dfd5293d8e347dfe59e90efd55b2956a1343963d906370a082319060240161027c565b6040516020016102d291906110c4565b6106ff73dfd5293d8e347dfe59e90efd55b2956a1343963d610af6565b6040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273dfd5293d8e347dfe59e90efd55b2956a1343963d6020820152610bb8818301523360608201526305f5e0ff6080820152606460a0820152600060c0820181905260e082018190529151829173e592427a0aece92de3edee1f18e0157c0586156491610790919060240161103f565b60408051601f198184030181529181526020820180516001600160e01b031663252deb5160e21b179052516107c591906110a8565b6000604051808303816000865af19150503d8060008114610802576040519150601f19603f3d011682016040523d82523d6000602084013e610807565b606091505b50915091506108408260405180604001604052806012815260200171149bdd5d195c8818d85b1b0819985a5b195960721b815250610bdd565b60008051602061148e8339815191528160405161085d9190610ff6565b60405180910390a1604051306024820152736b175474e89094c44da98b954eedeac495271d0f9060440160408051601f198184030181529181526020820180516001600160e01b03166370a0823160e01b179052516108bc91906110a8565b6000604051808303816000865af19150503d80600081146108f9576040519150601f19603f3d011682016040523d82523d6000602084013e6108fe565b606091505b5060408051808201909152600f81526e1110524818d85b1b0819985a5b1959608a1b6020820152919350915061054b908390610bdd565b600754600090610100900460ff16156109575750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610a5d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916109e5917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016110ed565b60408051601f19818403018152908290526109ff916110a8565b6000604051808303816000865af19150503d8060008114610a3c576040519150601f19603f3d011682016040523d82523d6000602084013e610a41565b606091505b5091505080806020019051810190610a59919061111e565b9150505b919050565b80610ad6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610ac69060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1610ad6610c26565b50565b6060610af082610ae884610d32565b600101610d9c565b92915050565b60405163c88a5e6d60e01b81526001600160a01b0382166004820152600160801b6024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610b5557600080fd5b505af1158015610b69573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b158015610bc257600080fd5b505af1158015610bd6573d6000803e3d6000fd5b5050505050565b81610c22577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610c119190611140565b60405180910390a1610c2282610a62565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610d215760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610cc092916020016110ed565b60408051601f1981840301815290829052610cda916110a8565b6000604051808303816000865af19150503d8060008114610d17576040519150601f19603f3d011682016040523d82523d6000602084013e610d1c565b606091505b505050505b6007805461ff001916610100179055565b600080608083901c15610d4a5760809290921c916010015b604083901c15610d5f5760409290921c916008015b602083901c15610d745760209290921c916004015b601083901c15610d895760109290921c916002015b600883901c15610af05760010192915050565b60606000610dab836002611185565b610db69060026111a4565b67ffffffffffffffff811115610dce57610dce6111bc565b6040519080825280601f01601f191660200182016040528015610df8576020820181803683370190505b509050600360fc1b81600081518110610e1357610e136111d2565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e4257610e426111d2565b60200101906001600160f81b031916908160001a9053506000610e66846002611185565b610e719060016111a4565b90505b6001811115610ee9576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610ea557610ea56111d2565b1a60f81b828281518110610ebb57610ebb6111d2565b60200101906001600160f81b031916908160001a90535060049490941c93610ee2816111e8565b9050610e74565b508315610f3c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b61028e8061120083390190565b600060208284031215610f6257600080fd5b5051919050565b60005b83811015610f84578181015183820152602001610f6c565b83811115610f93576000848401525b50505050565b68029bbb0b83832b21d160bd1b815260008251610fbd816009850160208701610f69565b9190910160090192915050565b60008151808452610fe2816020860160208601610f69565b601f01601f19169290920160200192915050565b602081526000610f3c6020830184610fca565b6d02aa9a221902130b630b731b29d160951b81526000825161103281600e850160208701610f69565b91909101600e0192915050565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b600082516110ba818460208701610f69565b9190910192915050565b6d0212aa9a2102130b630b731b29d160951b81526000825161103281600e850160208701610f69565b6001600160e01b0319831681528151600090611110816004850160208701610f69565b919091016004019392505050565b60006020828403121561113057600080fd5b81518015158114610f3c57600080fd5b60408152600560408201526422b93937b960d91b6060820152608060208201526000610f3c6080830184610fca565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561119f5761119f61116f565b500290565b600082198211156111b7576111b761116f565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816111f7576111f761116f565b50600019019056fe608060405234801561001057600080fd5b5061026e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634ab39e5a14610030575b600080fd5b61004361003e3660046101b2565b610055565b60405190815260200160405180910390f35b6000826001600160a01b031663414bf389604051806101000160405280886001600160a01b03168152602001876001600160a01b03168152602001610bb862ffffff168152602001336001600160a01b031681526020016305f5e0ff8152602001858152602001600a866100c991906101fd565b815260006020918201526040805160e085811b6001600160e01b031916825284516001600160a01b03908116600484015293850151841660248301529184015162ffffff1660448201526060840151831660648201526080840151608482015260a084015160a482015260c084015160c48201529201511660e4820152610104016020604051808303816000875af1158015610169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018d919061021f565b95945050505050565b80356001600160a01b03811681146101ad57600080fd5b919050565b600080600080608085870312156101c857600080fd5b6101d185610196565b93506101df60208601610196565b92506101ed60408601610196565b9396929550929360600135925050565b60008261021a57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561023157600080fd5b505191905056fea26469706673582212209bdf447e3e3d545d4df41833bfb0257ddaf3f0a05d0e1eedff655dc0ecb821aa64736f6c634300080d003323b62ad0584d24a75f0bf3560391ef5659ec6db1269c56e11aa241d637f19b20a26469706673582212205e0b1a7ce3ac4ec95c4387932ad3aa6e54b68d271b4c0a4f79e61a3bd6df389064736f6c634300080d0033",
    "sourceMap": "489:3222:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1075:71;;;:::i;:::-;;1742:416;;;:::i;2280:686::-;;;:::i;1214:522::-;;;:::i;3026:683::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;179:14:23;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;1572:26;;;;;;;;;1075:71:22;1114:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1109:2:22;:30;;-1:-1:-1;;;;;;1109:30:22;-1:-1:-1;;;;;1109:30:22;;;;;;;;;;1075:71::o;1742:416::-;1887:2;;:42;;-1:-1:-1;;;1887:42:22;;684;1887;;;485:34:23;828:42:22;535:18:23;;;528:43;613:42:22;587:18:23;;;580:43;1925:3:22;639:18:23;;;632:34;1870:14:22;;-1:-1:-1;;;;;1887:2:22;;:18;;419:19:23;;1887:42:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1870:59;;1939:22;1959:1;1950:6;:10;1939;:22::i;:::-;-1:-1:-1;;;;;;;;;;;2016:20:22;:6;:18;:20::i;:::-;1986:51;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1986:51:22;;;;;;;;;;1976:62;;;:::i;:::-;;;;;;;;2098:37;;-1:-1:-1;;;2098:37:22;;2129:4;2098:37;;;2190:51:23;-1:-1:-1;;;;;;;;;;;2053:98:22;2098:51;;828:42;;2098:22;;2163:18:23;;2098:37:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;:51::i;:::-;2063:87;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2063:87:22;;;;;;;;;;2053:98;;;:::i;:::-;;;;;;;;1778:380;1742:416::o;2280:686::-;2334:15;756:42;2334:9;:15::i;:::-;2486:190;;;;;;;;684:42;2486:190;;828:42;2486:190;;;;2569:4;2486:190;;;;2587:10;2486:190;;;;2611:8;2486:190;;;;2633:3;2486:190;;;;2356:9;2486:190;;;;;;;;;;;;2400:282;;2356:9;;613:42;;2400:282;;2486:190;2400:282;;;:::i;:::-;;;;-1:-1:-1;;2400:282:22;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:282:22;-1:-1:-1;;;2400:282:22;;;2388:295;;;2400:282;2388:295;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:328;;;;2689:38;2700:4;2689:38;;;;;;;;;;;;;-1:-1:-1;;;2689:38:22;;;:10;:38::i;:::-;-1:-1:-1;;;;;;;;;;;2748:4:22;2738:15;;;;;;:::i;:::-;;;;;;;;2830:60;;2884:4;2830:60;;;2190:51:23;828:42:22;;2163:18:23;;2830:60:22;;;-1:-1:-1;;2830:60:22;;;;;;;;;;;;;;-1:-1:-1;;;;;2830:60:22;-1:-1:-1;;;2830:60:22;;;2820:71;;;2830:60;2820:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2897:36:22;;;;;;;;;;;;-1:-1:-1;;;2897:36:22;;;;2805:86;;-1:-1:-1;2805:86:22;-1:-1:-1;2897:36:22;;2805:86;;2897:10;:36::i;:::-;-1:-1:-1;;;;;;;;;;;2954:4:22;2944:15;;;;;;:::i;:::-;;;;;;;;2328:638;;2280:686::o;1214:522::-;1464:2;;:42;;-1:-1:-1;;;1464:42:22;;684;1464;;;485:34:23;756:42:22;535:18:23;;;528:43;613:42:22;587:18:23;;;580:43;1502:3:22;639:18:23;;;632:34;1447:14:22;;-1:-1:-1;;;;;1464:2:22;;:18;;419:19:23;;1464:42:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1447:59;-1:-1:-1;1516:23:22;1527:11;1516:10;:23::i;:::-;-1:-1:-1;;;;;;;;;;;1594:20:22;:6;:18;:20::i;:::-;1564:51;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1564:51:22;;;;;;;;;;1554:62;;;:::i;:::-;;;;;;;;1676:37;;-1:-1:-1;;;1676:37:22;;1707:4;1676:37;;;2190:51:23;-1:-1:-1;;;;;;;;;;;1631:98:22;1676:51;;756:42;;1676:22;;2163:18:23;;1676:37:22;2044:203:23;1676:51:22;1641:87;;;;;;;;:::i;3026:683::-;3080:15;756:42;3080:9;:15::i;:::-;3232:190;;;;;;;;684:42;3232:190;;756:42;3232:190;;;;3315:4;3232:190;;;;3333:10;3232:190;;;;3357:8;3232:190;;;;3379:3;3232:190;;;;3102:9;3232:190;;;;;;;;;;;;3146:282;;3102:9;;613:42;;3146:282;;3232:190;3146:282;;;:::i;:::-;;;;-1:-1:-1;;3146:282:22;;;;;;;;;;;;;;-1:-1:-1;;;;;3146:282:22;-1:-1:-1;;;3146:282:22;;;3134:295;;;3146:282;3134:295;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3101:328;;;;3435:38;3446:4;3435:38;;;;;;;;;;;;;-1:-1:-1;;;3435:38:22;;;:10;:38::i;:::-;-1:-1:-1;;;;;;;;;;;3494:4:22;3484:15;;;;;;:::i;:::-;;;;;;;;3574:60;;3628:4;3574:60;;;2190:51:23;684:42:22;;2163:18:23;;3574:60:22;;;-1:-1:-1;;3574:60:22;;;;;;;;;;;;;;-1:-1:-1;;;;;3574:60:22;-1:-1:-1;;;3574:60:22;;;3565:70;;;3574:60;3565:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3641:35:22;;;;;;;;;;;;-1:-1:-1;;;3641:35:22;;;;3550:85;;-1:-1:-1;3550:85:22;-1:-1:-1;3641:35:22;;3550:85;;3641:10;:35::i;1819:584:0:-;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;4383:51:23;;;-1:-1:-1;;;4450:18:23;;;4443:34;2196:43:0;;;;;;;;;4356:18:23;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;3255:157::-;3315:9;3310:96;;3345:30;;;;;5348:2:23;5330:21;;;5387:2;5367:18;;;5360:30;5426:25;5421:2;5406:18;;5399:53;5484:2;5469:18;;5146:347;3345:30:0;;;;;;;;3389:6;:4;:6::i;:::-;3255:157;:::o;1216:174:15:-;1275:13;1331:42;1343:5;1350:18;1362:5;1350:11;:18::i;:::-;1371:1;1350:22;1331:11;:42::i;:::-;1324:49;1216:174;-1:-1:-1;;1216:174:15:o;20479:116:4:-;20538:22;;-1:-1:-1;;;20538:22:4;;-1:-1:-1;;;;;4401:32:23;;20538:22:4;;;4383:51:23;-1:-1:-1;;;4450:18:23;;;4443:34;20538:7:4;;;;4356:18:23;;20538:22:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20570:18:4;;-1:-1:-1;;;20570:18:4;;-1:-1:-1;;;;;2208:32:23;;20570:18:4;;;2190:51:23;20570:13:4;;-1:-1:-1;20570:13:4;;-1:-1:-1;2163:18:23;;20570::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20479:116;:::o;3418:191:0:-;3497:9;3492:111;;3527:30;3553:3;3527:30;;;;;;:::i;:::-;;;;;;;;3571:21;3582:9;3571:10;:21::i;:::-;3418:191;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;6475:51:23;;;-1:-1:-1;;;6542:18:23;;;6535:34;;;;2705:4:0;6585:18:23;;;6578:34;2482:11:0;;1671:64;2579:43;;6448:18:23;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;11430:663:16:-;11484:7;;11568:3;11559:12;;;:16;11555:98;;11605:3;11595:13;;;;;11636:2;11626:12;11555:98;11679:2;11670:11;;;:15;11666:95;;11715:2;11705:12;;;;;11745:1;11735:11;11666:95;11787:2;11778:11;;;:15;11774:95;;11823:2;11813:12;;;;;11853:1;11843:11;11774:95;11895:2;11886:11;;;:15;11882:95;;11931:2;11921:12;;;;;11961:1;11951:11;11882:95;12003:1;11994:10;;;:14;11990:64;;12038:1;12028:11;12080:6;11430:663;-1:-1:-1;;11430:663:16:o;1513:437:15:-;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:15;;1613:47;;-1:-1:-1;;;1670:6:15;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:15;;;;;;;;;-1:-1:-1;;;1695:6:15;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:15;;;;;;;;-1:-1:-1;1725:9:15;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:15;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:15;;;;;;;;-1:-1:-1;1836:1:15;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:15;;1857:55;;;;-1:-1:-1;;;1857:55:15;;7668:2:23;1857:55:15;;;7650:21:23;;;7687:18;;;7680:30;7746:34;7726:18;;;7719:62;7798:18;;1857:55:15;;;;;;;;1936:6;1513:437;-1:-1:-1;;;1513:437:15:o;-1:-1:-1:-;;;;;;;;:::o;677:184:23:-;747:6;800:2;788:9;779:7;775:23;771:32;768:52;;;816:1;813;806:12;768:52;-1:-1:-1;839:16:23;;677:184;-1:-1:-1;677:184:23:o;866:258::-;938:1;948:113;962:6;959:1;956:13;948:113;;;1038:11;;;1032:18;1019:11;;;1012:39;984:2;977:10;948:113;;;1079:6;1076:1;1073:13;1070:48;;;1114:1;1105:6;1100:3;1096:16;1089:27;1070:48;;866:258;;;:::o;1129:426::-;-1:-1:-1;;;1386:3:23;1379:24;1361:3;1432:6;1426:13;1448:61;1502:6;1498:1;1493:3;1489:11;1482:4;1474:6;1470:17;1448:61;:::i;:::-;1529:16;;;;1547:1;1525:24;;1129:426;-1:-1:-1;;1129:426:23:o;1560:257::-;1601:3;1639:5;1633:12;1666:6;1661:3;1654:19;1682:63;1738:6;1731:4;1726:3;1722:14;1715:4;1708:5;1704:16;1682:63;:::i;:::-;1799:2;1778:15;-1:-1:-1;;1774:29:23;1765:39;;;;1806:4;1761:50;;1560:257;-1:-1:-1;;1560:257:23:o;1822:217::-;1969:2;1958:9;1951:21;1932:4;1989:44;2029:2;2018:9;2014:18;2006:6;1989:44;:::i;2252:433::-;-1:-1:-1;;;2509:3:23;2502:29;2484:3;2560:6;2554:13;2576:62;2631:6;2626:2;2621:3;2617:12;2610:4;2602:6;2598:17;2576:62;:::i;:::-;2658:16;;;;2676:2;2654:25;;2252:433;-1:-1:-1;;2252:433:23:o;2690:797::-;2979:13;;-1:-1:-1;;;;;2975:22:23;;;2957:41;;3058:4;3046:17;;;3040:24;3036:33;;3014:20;;;3007:63;3130:4;3118:17;;;3112:24;3138:8;3108:39;3086:20;;;3079:69;3208:4;3196:17;;;3190:24;3186:33;;3164:20;;;3157:63;3276:4;3264:17;;;3258:24;3236:20;;;3229:54;2937:3;3327:17;;;3321:24;3299:20;;;3292:54;3402:4;3390:17;;;3384:24;3362:20;;;3355:54;3469:4;3457:17;;;3451:24;3447:33;3425:20;;;3418:63;;;;2906:3;2891:19;;2690:797::o;3492:274::-;3621:3;3659:6;3653:13;3675:53;3721:6;3716:3;3709:4;3701:6;3697:17;3675:53;:::i;:::-;3744:16;;;;;3492:274;-1:-1:-1;;3492:274:23:o;3771:433::-;-1:-1:-1;;;4028:3:23;4021:29;4003:3;4079:6;4073:13;4095:62;4150:6;4145:2;4140:3;4136:12;4129:4;4121:6;4117:17;4095:62;:::i;4488:371::-;-1:-1:-1;;;;;;4673:33:23;;4661:46;;4730:13;;4643:3;;4752:61;4730:13;4802:1;4793:11;;4786:4;4774:17;;4752:61;:::i;:::-;4833:16;;;;4851:1;4829:24;;4488:371;-1:-1:-1;;;4488:371:23:o;4864:277::-;4931:6;4984:2;4972:9;4963:7;4959:23;4955:32;4952:52;;;5000:1;4997;4990:12;4952:52;5032:9;5026:16;5085:5;5078:13;5071:21;5064:5;5061:32;5051:60;;5107:1;5104;5097:12;5823:445;6073:2;6062:9;6055:21;6112:1;6107:2;6096:9;6092:18;6085:29;-1:-1:-1;;;6145:2:23;6134:9;6130:18;6123:35;6196:3;6189:4;6178:9;6174:20;6167:33;6036:4;6217:45;6257:3;6246:9;6242:19;6234:6;6217:45;:::i;6623:127::-;6684:10;6679:3;6675:20;6672:1;6665:31;6715:4;6712:1;6705:15;6739:4;6736:1;6729:15;6755:168;6795:7;6861:1;6857;6853:6;6849:14;6846:1;6843:21;6838:1;6831:9;6824:17;6820:45;6817:71;;;6868:18;;:::i;:::-;-1:-1:-1;6908:9:23;;6755:168::o;6928:128::-;6968:3;6999:1;6995:6;6992:1;6989:13;6986:39;;;7005:18;;:::i;:::-;-1:-1:-1;7041:9:23;;6928:128::o;7061:127::-;7122:10;7117:3;7113:20;7110:1;7103:31;7153:4;7150:1;7143:15;7177:4;7174:1;7167:15;7193:127;7254:10;7249:3;7245:20;7242:1;7235:31;7285:4;7282:1;7275:15;7309:4;7306:1;7299:15;7325:136;7364:3;7392:5;7382:39;;7401:18;;:::i;:::-;-1:-1:-1;;;7437:18:23;;7325:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testExactInputSingleDAItoBUSD()": "7b0982f8",
    "testExactInputSingleDAItoUSDC()": "1c92c97b",
    "testMakeABUSDSwap()": "59d2a6b5",
    "testMakeAUSDCSwap()": "0c9d72a0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExactInputSingleDAItoBUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExactInputSingleDAItoUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMakeABUSDSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMakeAUSDCSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"testExactInputSingleDAItoBUSD()\":{\"details\":\"Swapping DAI to BUSD using address calls\"},\"testExactInputSingleDAItoUSDC()\":{\"details\":\"Wrote these address calls for Hw20 Swapping DAI for USDC using address calls\"},\"testMakeABUSDSwap()\":{\"details\":\"2 Unit tests for makeASingleSwap for Homework 21\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract makes calls to defined mainnet addresses and tests for 2 exactInputSingle swaps from DAI to USDC and DAI to BUSD\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BootcampHw20.t.sol\":\"UniswapTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/contracts/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/=lib/v3-core/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":v3-core/=lib/v3-core/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b\",\"dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd\",\"dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf0c5c17c4cdfd0de659cf5e58e0e1611b6ee53900d3ab8b07b871d71d0b37bc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21ffda3891e7480d5fdbf7f5e9d539f0ed76204bca69738f8ee006395ef1e23e\",\"dweb:/ipfs/Qmbhbn8zVXrCyvhvoQ5AUSj3usVGqMbMSEHYkNPdbQKBxt\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74\",\"dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf4442ded918d167635adc30ba3c451d45666c89b38e0eec2adaf0857b49a72f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4cb181bd626fe852a36f9b1cf2d79ef0fa9d2bf2cbf0ec86f33f5bf492c0b69\",\"dweb:/ipfs/QmaZKevWdZbjoTB7qtzKjP3dZhiUGymJc4Wb9qkNMewxjB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"src/BootcampHW21.sol\":{\"keccak256\":\"0xe719801195c40e70decddb4c9e7a41254157fffdc32c80ad647508f941cd0e8d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://17f807f2a768370bfce76213cce0d5dfe88cc2e66dc0d2d8aeade7e80fc3f124\",\"dweb:/ipfs/QmWkhsatGEdXN6a2wBiajFMJPzEuL8j7UbMJHZmqYKGdBk\"]},\"src/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x65738ea30b5e97e671ac17e53e08bea37655ae80285fa51a538d1da5d705f88b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c837918e86f38c75428843d7f95077922542763702bee88a55fa6ff3bff1642a\",\"dweb:/ipfs/QmZvJ892bRwBkxdkvji9bBZk1A5A9q4vLEjwoQQerypa4E\"]},\"test/BootcampHw20.t.sol\":{\"keccak256\":\"0xbaa111249ca3751001e8b9a93e9de2a45e7d50b8c95285c9e00d589f10cbbbb5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://833eed98ac703228a7e0502d04e71457cec8f3494eaad49e645b099265afad9a\",\"dweb:/ipfs/QmUUTXxWvDDvFi47TfrRzeAFv4cJaPo5BgU9V4zFhf6a4p\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExactInputSingleDAItoBUSD"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExactInputSingleDAItoUSDC"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMakeABUSDSwap"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMakeAUSDCSwap"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "testExactInputSingleDAItoBUSD()": {
            "details": "Swapping DAI to BUSD using address calls"
          },
          "testExactInputSingleDAItoUSDC()": {
            "details": "Wrote these address calls for Hw20 Swapping DAI for USDC using address calls"
          },
          "testMakeABUSDSwap()": {
            "details": "2 Unit tests for makeASingleSwap for Homework 21"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=lib/contracts/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@uniswap/=lib/v3-core/",
        ":base64-sol/=lib/base64/",
        ":base64/=lib/base64/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":v3-core/=lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/BootcampHw20.t.sol": "UniswapTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0",
        "urls": [
          "bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b",
          "dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149",
        "urls": [
          "bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd",
          "dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf0c5c17c4cdfd0de659cf5e58e0e1611b6ee53900d3ab8b07b871d71d0b37bc6",
        "urls": [
          "bzz-raw://21ffda3891e7480d5fdbf7f5e9d539f0ed76204bca69738f8ee006395ef1e23e",
          "dweb:/ipfs/Qmbhbn8zVXrCyvhvoQ5AUSj3usVGqMbMSEHYkNPdbQKBxt"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17",
        "urls": [
          "bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74",
          "dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xf4442ded918d167635adc30ba3c451d45666c89b38e0eec2adaf0857b49a72f7",
        "urls": [
          "bzz-raw://b4cb181bd626fe852a36f9b1cf2d79ef0fa9d2bf2cbf0ec86f33f5bf492c0b69",
          "dweb:/ipfs/QmaZKevWdZbjoTB7qtzKjP3dZhiUGymJc4Wb9qkNMewxjB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/BootcampHW21.sol": {
        "keccak256": "0xe719801195c40e70decddb4c9e7a41254157fffdc32c80ad647508f941cd0e8d",
        "urls": [
          "bzz-raw://17f807f2a768370bfce76213cce0d5dfe88cc2e66dc0d2d8aeade7e80fc3f124",
          "dweb:/ipfs/QmWkhsatGEdXN6a2wBiajFMJPzEuL8j7UbMJHZmqYKGdBk"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISwapRouter.sol": {
        "keccak256": "0x65738ea30b5e97e671ac17e53e08bea37655ae80285fa51a538d1da5d705f88b",
        "urls": [
          "bzz-raw://c837918e86f38c75428843d7f95077922542763702bee88a55fa6ff3bff1642a",
          "dweb:/ipfs/QmZvJ892bRwBkxdkvji9bBZk1A5A9q4vLEjwoQQerypa4E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/BootcampHw20.t.sol": {
        "keccak256": "0xbaa111249ca3751001e8b9a93e9de2a45e7d50b8c95285c9e00d589f10cbbbb5",
        "urls": [
          "bzz-raw://833eed98ac703228a7e0502d04e71457cec8f3494eaad49e645b099265afad9a",
          "dweb:/ipfs/QmUUTXxWvDDvFi47TfrRzeAFv4cJaPo5BgU9V4zFhf6a4p"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/BootcampHw20.t.sol",
    "id": 26401,
    "exportedSymbols": {
      "CommonBase": [
        1818
      ],
      "DSTest": [
        1786
      ],
      "IERC20": [
        24737
      ],
      "ISwapRouter": [
        26121
      ],
      "IUniswapV3Factory": [
        25860
      ],
      "IUniswapV3PoolState": [
        25982
      ],
      "IUniswapV3SwapCallback": [
        25874
      ],
      "InteractWithUniswap": [
        26021
      ],
      "Math": [
        25777
      ],
      "StdAssertions": [
        2644
      ],
      "StdCheats": [
        4757
      ],
      "StdStorage": [
        5662
      ],
      "StdUtils": [
        7525
      ],
      "Strings": [
        24912
      ],
      "Test": [
        7556
      ],
      "TestBase": [
        7545
      ],
      "UniswapTest": [
        26400
      ],
      "Vm": [
        8530
      ],
      "console": [
        16594
      ],
      "console2": [
        24659
      ],
      "stdError": [
        4823
      ],
      "stdJson": [
        5489
      ],
      "stdMath": [
        5631
      ],
      "stdStorage": [
        7096
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3672:22",
    "nodes": [
      {
        "id": 26123,
        "nodeType": "PragmaDirective",
        "src": "39:23:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 26124,
        "nodeType": "ImportDirective",
        "src": "64:28:22",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26401,
        "sourceUnit": 7557,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26125,
        "nodeType": "ImportDirective",
        "src": "93:51:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26401,
        "sourceUnit": 24913,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26126,
        "nodeType": "ImportDirective",
        "src": "145:40:22",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapRouter.sol",
        "file": "src/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26401,
        "sourceUnit": 26122,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26127,
        "nodeType": "ImportDirective",
        "src": "186:30:22",
        "nodes": [],
        "absolutePath": "src/BootcampHW21.sol",
        "file": "src/BootcampHW21.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26401,
        "sourceUnit": 26022,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26128,
        "nodeType": "ImportDirective",
        "src": "217:56:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26401,
        "sourceUnit": 24738,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26129,
        "nodeType": "ImportDirective",
        "src": "274:61:22",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "file": "@uniswap/contracts/interfaces/IUniswapV3Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26401,
        "sourceUnit": 25861,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26400,
        "nodeType": "ContractDefinition",
        "src": "489:3222:22",
        "nodes": [
          {
            "id": 26135,
            "nodeType": "UsingForDirective",
            "src": "524:26:22",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 26133,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24912,
              "src": "530:7:22"
            },
            "typeName": {
              "id": 26134,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "542:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 26138,
            "nodeType": "UsingForDirective",
            "src": "555:26:22",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 26136,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24912,
              "src": "561:7:22"
            },
            "typeName": {
              "id": 26137,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "573:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 26141,
            "nodeType": "VariableDeclaration",
            "src": "587:68:22",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "router",
            "nameLocation": "604:6:22",
            "scope": 26400,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26139,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "587:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
              "id": 26140,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "613:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
            },
            "visibility": "internal"
          },
          {
            "id": 26144,
            "nodeType": "VariableDeclaration",
            "src": "661:65:22",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "dai",
            "nameLocation": "678:3:22",
            "scope": 26400,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26142,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "661:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 26143,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "684:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "internal"
          },
          {
            "id": 26147,
            "nodeType": "VariableDeclaration",
            "src": "732:66:22",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "busd",
            "nameLocation": "749:4:22",
            "scope": 26400,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26145,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "732:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844466435323933443865333437644665353945393065466435356232393536613133343339363364",
              "id": 26146,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "756:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xDFd5293D8e347dFe59E90eFd55b2956a1343963d"
            },
            "visibility": "internal"
          },
          {
            "id": 26150,
            "nodeType": "VariableDeclaration",
            "src": "804:66:22",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "usdc",
            "nameLocation": "821:4:22",
            "scope": 26400,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26148,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "804:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
              "id": 26149,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "828:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
            },
            "visibility": "internal"
          },
          {
            "id": 26153,
            "nodeType": "VariableDeclaration",
            "src": "877:72:22",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "uniFactory",
            "nameLocation": "894:10:22",
            "scope": 26400,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26151,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "877:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
              "id": 26152,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "907:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
            },
            "visibility": "internal"
          },
          {
            "id": 26156,
            "nodeType": "VariableDeclaration",
            "src": "955:22:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "eg",
            "nameLocation": "975:2:22",
            "scope": 26400,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InteractWithUniswap_$26021",
              "typeString": "contract InteractWithUniswap"
            },
            "typeName": {
              "id": 26155,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26154,
                "name": "InteractWithUniswap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26021,
                "src": "955:19:22"
              },
              "referencedDeclaration": 26021,
              "src": "955:19:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InteractWithUniswap_$26021",
                "typeString": "contract InteractWithUniswap"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26167,
            "nodeType": "FunctionDefinition",
            "src": "1075:71:22",
            "nodes": [],
            "body": {
              "id": 26166,
              "nodeType": "Block",
              "src": "1099:47:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26159,
                      "name": "eg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26156,
                      "src": "1109:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InteractWithUniswap_$26021",
                        "typeString": "contract InteractWithUniswap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1114:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_InteractWithUniswap_$26021_$",
                          "typeString": "function () returns (contract InteractWithUniswap)"
                        },
                        "typeName": {
                          "id": 26161,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 26160,
                            "name": "InteractWithUniswap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 26021,
                            "src": "1118:19:22"
                          },
                          "referencedDeclaration": 26021,
                          "src": "1118:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_InteractWithUniswap_$26021",
                            "typeString": "contract InteractWithUniswap"
                          }
                        }
                      },
                      "id": 26163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1114:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InteractWithUniswap_$26021",
                        "typeString": "contract InteractWithUniswap"
                      }
                    },
                    "src": "1109:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InteractWithUniswap_$26021",
                      "typeString": "contract InteractWithUniswap"
                    }
                  },
                  "id": 26165,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:30:22"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1084:5:22",
            "parameters": {
              "id": 26157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1089:2:22"
            },
            "returnParameters": {
              "id": 26158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1099:0:22"
            },
            "scope": 26400,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26217,
            "nodeType": "FunctionDefinition",
            "src": "1214:522:22",
            "nodes": [],
            "body": {
              "id": 26216,
              "nodeType": "Block",
              "src": "1250:486:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    26173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26173,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1455:6:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26216,
                      "src": "1447:14:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1447:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip",
                  "id": 26181,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26176,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26144,
                        "src": "1483:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26177,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26147,
                        "src": "1488:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26178,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26141,
                        "src": "1494:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 26179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1502:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 26174,
                        "name": "eg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26156,
                        "src": "1464:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InteractWithUniswap_$26021",
                          "typeString": "contract InteractWithUniswap"
                        }
                      },
                      "id": 26175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeASingleSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26020,
                      "src": "1464:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 26180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1447:59:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26183,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26173,
                          "src": "1527:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 26184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1537:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1527:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26182,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "1516:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 26186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:23:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26187,
                  "nodeType": "ExpressionStatement",
                  "src": "1516:23:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "537761707065643a20",
                            "id": 26191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1581:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            "value": "Swapped: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 26192,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26173,
                                "src": "1594:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 26193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24815,
                              "src": "1594:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 26194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1594:20:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 26189,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1564:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1564:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1564:51:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26188,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1554:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:62:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26197,
                  "nodeType": "EmitStatement",
                  "src": "1549:67:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "425553442042616c616e63653a20",
                            "id": 26201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1658:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0ef62b24d079e79cd2d1cf3f058dce5defca186937fa9868302f9bbc150bf6ee",
                              "typeString": "literal_string \"BUSD Balance: \""
                            },
                            "value": "BUSD Balance: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 26208,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1707:4:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniswapTest_$26400",
                                          "typeString": "contract UniswapTest"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniswapTest_$26400",
                                          "typeString": "contract UniswapTest"
                                        }
                                      ],
                                      "id": 26207,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1699:7:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 26206,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1699:7:22",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 26209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1699:13:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 26203,
                                        "name": "busd",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26147,
                                        "src": "1683:4:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 26202,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24737,
                                      "src": "1676:6:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$24737_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 26204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1676:12:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$24737",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 26205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24694,
                                  "src": "1676:22:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 26210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1676:37:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 26211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24815,
                              "src": "1676:49:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 26212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1676:51:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_0ef62b24d079e79cd2d1cf3f058dce5defca186937fa9868302f9bbc150bf6ee",
                              "typeString": "literal_string \"BUSD Balance: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 26199,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1641:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1641:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1641:87:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26198,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1631:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1631:98:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26215,
                  "nodeType": "EmitStatement",
                  "src": "1626:103:22"
                }
              ]
            },
            "documentation": {
              "id": 26168,
              "nodeType": "StructuredDocumentation",
              "src": "1152:57:22",
              "text": "@dev 2 Unit tests for makeASingleSwap for Homework 21"
            },
            "functionSelector": "59d2a6b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMakeABUSDSwap",
            "nameLocation": "1223:17:22",
            "parameters": {
              "id": 26169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1240:2:22"
            },
            "returnParameters": {
              "id": 26170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1250:0:22"
            },
            "scope": 26400,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26265,
            "nodeType": "FunctionDefinition",
            "src": "1742:416:22",
            "nodes": [],
            "body": {
              "id": 26264,
              "nodeType": "Block",
              "src": "1778:380:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    26221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26221,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1878:6:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26264,
                      "src": "1870:14:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1870:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26229,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26224,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26144,
                        "src": "1906:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26225,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26150,
                        "src": "1911:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26226,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26141,
                        "src": "1917:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 26227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1925:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 26222,
                        "name": "eg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26156,
                        "src": "1887:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InteractWithUniswap_$26021",
                          "typeString": "contract InteractWithUniswap"
                        }
                      },
                      "id": 26223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeASingleSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26020,
                      "src": "1887:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 26228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1887:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1870:59:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26231,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26221,
                          "src": "1950:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 26232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1959:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1950:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26230,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "1939:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 26234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:22:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26235,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:22:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "537761707065643a20",
                            "id": 26239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2003:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            "value": "Swapped: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 26240,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26221,
                                "src": "2016:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 26241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24815,
                              "src": "2016:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 26242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2016:20:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 26237,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1986:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1986:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1986:51:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26236,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1976:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:62:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26245,
                  "nodeType": "EmitStatement",
                  "src": "1971:67:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "555344432042616c616e63653a20",
                            "id": 26249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2080:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ba25de04d244f3e3b2fe19081c1648b2196f33b8baf206b2cac6419b6dbe7d4",
                              "typeString": "literal_string \"USDC Balance: \""
                            },
                            "value": "USDC Balance: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 26256,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "2129:4:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniswapTest_$26400",
                                          "typeString": "contract UniswapTest"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniswapTest_$26400",
                                          "typeString": "contract UniswapTest"
                                        }
                                      ],
                                      "id": 26255,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2121:7:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 26254,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2121:7:22",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 26257,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2121:13:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 26251,
                                        "name": "usdc",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26150,
                                        "src": "2105:4:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 26250,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24737,
                                      "src": "2098:6:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$24737_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 26252,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2098:12:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$24737",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 26253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24694,
                                  "src": "2098:22:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 26258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2098:37:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 26259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24815,
                              "src": "2098:49:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 26260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2098:51:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ba25de04d244f3e3b2fe19081c1648b2196f33b8baf206b2cac6419b6dbe7d4",
                              "typeString": "literal_string \"USDC Balance: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 26247,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2063:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2063:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2063:87:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26246,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2053:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:98:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26263,
                  "nodeType": "EmitStatement",
                  "src": "2048:103:22"
                }
              ]
            },
            "functionSelector": "0c9d72a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMakeAUSDCSwap",
            "nameLocation": "1751:17:22",
            "parameters": {
              "id": 26218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:2:22"
            },
            "returnParameters": {
              "id": 26219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1778:0:22"
            },
            "scope": 26400,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26332,
            "nodeType": "FunctionDefinition",
            "src": "2280:686:22",
            "nodes": [],
            "body": {
              "id": 26331,
              "nodeType": "Block",
              "src": "2328:638:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26270,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26147,
                        "src": "2344:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26269,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4535,
                        4556,
                        4580,
                        4604
                      ],
                      "referencedDeclaration": 4535,
                      "src": "2334:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2334:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26272,
                  "nodeType": "ExpressionStatement",
                  "src": "2334:15:22"
                },
                {
                  "assignments": [
                    26274,
                    26276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26274,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "2361:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26331,
                      "src": "2356:9:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 26273,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2356:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 26276,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2380:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26331,
                      "src": "2367:17:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26275,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2367:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26296,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6578616374496e70757453696e676c65284578616374496e70757453696e676c65506172616d7329",
                            "id": 26281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2433:42:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_94b7ad44d74d57dcd93c08cbe95801d27b70d685104a25c3f9704aaac2570ea4",
                              "typeString": "literal_string \"exactInputSingle(ExactInputSingleParams)\""
                            },
                            "value": "exactInputSingle(ExactInputSingleParams)"
                          },
                          {
                            "arguments": [
                              {
                                "id": 26284,
                                "name": "dai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26144,
                                "src": "2534:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 26285,
                                "name": "usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26150,
                                "src": "2551:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "33303030",
                                "id": 26286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2569:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                "value": "3000"
                              },
                              {
                                "expression": {
                                  "id": 26287,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2587:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 26288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2587:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "3939393939393939",
                                "id": 26289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2611:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_99999999_by_1",
                                  "typeString": "int_const 99999999"
                                },
                                "value": "99999999"
                              },
                              {
                                "hexValue": "313030",
                                "id": 26290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2633:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              {
                                "hexValue": "30",
                                "id": 26291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2650:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 26292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2665:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_99999999_by_1",
                                  "typeString": "int_const 99999999"
                                },
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 26282,
                                "name": "ISwapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26121,
                                "src": "2486:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$26121_$",
                                  "typeString": "type(contract ISwapRouter)"
                                }
                              },
                              "id": 26283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ExactInputSingleParams",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26045,
                              "src": "2486:34:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$26045_storage_ptr_$",
                                "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                              }
                            },
                            "id": 26293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2486:190:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$26045_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_94b7ad44d74d57dcd93c08cbe95801d27b70d685104a25c3f9704aaac2570ea4",
                              "typeString": "literal_string \"exactInputSingle(ExactInputSingleParams)\""
                            },
                            {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$26045_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          ],
                          "expression": {
                            "id": 26279,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2400:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "2400:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 26294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2400:282:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 26277,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26141,
                        "src": "2388:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 26278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "2388:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 26295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:295:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2355:328:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26298,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26274,
                        "src": "2700:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465722063616c6c206661696c6564",
                        "id": 26299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2706:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        },
                        "value": "Router call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        }
                      ],
                      "id": 26297,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "2689:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26301,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:38:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26303,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26276,
                        "src": "2748:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26302,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2738:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26305,
                  "nodeType": "EmitStatement",
                  "src": "2733:20:22"
                },
                {
                  "documentation": "@dev Checking USDC balance post swap",
                  "expression": {
                    "id": 26320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 26306,
                          "name": "temp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26274,
                          "src": "2806:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 26307,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26276,
                          "src": "2812:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 26308,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2805:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 26313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2854:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 26316,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2884:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapTest_$26400",
                                    "typeString": "contract UniswapTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapTest_$26400",
                                    "typeString": "contract UniswapTest"
                                  }
                                ],
                                "id": 26315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2876:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 26314,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2876:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 26317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2876:13:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 26311,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2830:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 26312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "2830:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 26318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2830:60:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 26309,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26150,
                          "src": "2820:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 26310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2820:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 26319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2820:71:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "2805:86:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26321,
                  "nodeType": "ExpressionStatement",
                  "src": "2805:86:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26323,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26274,
                        "src": "2908:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "555344432063616c6c206661696c6564",
                        "id": 26324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2914:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcb10c0b735db8c592069a8f3844a3f037d90797cf4fadaf219d497a74e4a814",
                          "typeString": "literal_string \"USDC call failed\""
                        },
                        "value": "USDC call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcb10c0b735db8c592069a8f3844a3f037d90797cf4fadaf219d497a74e4a814",
                          "typeString": "literal_string \"USDC call failed\""
                        }
                      ],
                      "id": 26322,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "2897:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2897:36:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26326,
                  "nodeType": "ExpressionStatement",
                  "src": "2897:36:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26328,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26276,
                        "src": "2954:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26327,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2944:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2944:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26330,
                  "nodeType": "EmitStatement",
                  "src": "2939:20:22"
                }
              ]
            },
            "documentation": {
              "id": 26266,
              "nodeType": "StructuredDocumentation",
              "src": "2164:111:22",
              "text": "@dev Wrote these address calls for Hw20\nSwapping DAI for USDC using address calls"
            },
            "functionSelector": "1c92c97b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExactInputSingleDAItoUSDC",
            "nameLocation": "2289:29:22",
            "parameters": {
              "id": 26267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2318:2:22"
            },
            "returnParameters": {
              "id": 26268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2328:0:22"
            },
            "scope": 26400,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26399,
            "nodeType": "FunctionDefinition",
            "src": "3026:683:22",
            "nodes": [],
            "body": {
              "id": 26398,
              "nodeType": "Block",
              "src": "3074:635:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26337,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26147,
                        "src": "3090:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26336,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4535,
                        4556,
                        4580,
                        4604
                      ],
                      "referencedDeclaration": 4535,
                      "src": "3080:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3080:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26339,
                  "nodeType": "ExpressionStatement",
                  "src": "3080:15:22"
                },
                {
                  "assignments": [
                    26341,
                    26343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26341,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "3107:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26398,
                      "src": "3102:9:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 26340,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3102:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 26343,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3126:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26398,
                      "src": "3113:17:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26342,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3113:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26363,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6578616374496e70757453696e676c65284578616374496e70757453696e676c65506172616d7329",
                            "id": 26348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3179:42:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_94b7ad44d74d57dcd93c08cbe95801d27b70d685104a25c3f9704aaac2570ea4",
                              "typeString": "literal_string \"exactInputSingle(ExactInputSingleParams)\""
                            },
                            "value": "exactInputSingle(ExactInputSingleParams)"
                          },
                          {
                            "arguments": [
                              {
                                "id": 26351,
                                "name": "dai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26144,
                                "src": "3280:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 26352,
                                "name": "busd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26147,
                                "src": "3297:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "33303030",
                                "id": 26353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3315:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                "value": "3000"
                              },
                              {
                                "expression": {
                                  "id": 26354,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3333:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 26355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3333:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "3939393939393939",
                                "id": 26356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3357:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_99999999_by_1",
                                  "typeString": "int_const 99999999"
                                },
                                "value": "99999999"
                              },
                              {
                                "hexValue": "313030",
                                "id": 26357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3379:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              {
                                "hexValue": "30",
                                "id": 26358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3396:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 26359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3411:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_99999999_by_1",
                                  "typeString": "int_const 99999999"
                                },
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 26349,
                                "name": "ISwapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26121,
                                "src": "3232:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$26121_$",
                                  "typeString": "type(contract ISwapRouter)"
                                }
                              },
                              "id": 26350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ExactInputSingleParams",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26045,
                              "src": "3232:34:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$26045_storage_ptr_$",
                                "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                              }
                            },
                            "id": 26360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3232:190:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$26045_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_94b7ad44d74d57dcd93c08cbe95801d27b70d685104a25c3f9704aaac2570ea4",
                              "typeString": "literal_string \"exactInputSingle(ExactInputSingleParams)\""
                            },
                            {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$26045_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          ],
                          "expression": {
                            "id": 26346,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3146:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "3146:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 26361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3146:282:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 26344,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26141,
                        "src": "3134:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 26345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "3134:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 26362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:295:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3101:328:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26365,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26341,
                        "src": "3446:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465722063616c6c206661696c6564",
                        "id": 26366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3452:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        },
                        "value": "Router call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        }
                      ],
                      "id": 26364,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "3435:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26368,
                  "nodeType": "ExpressionStatement",
                  "src": "3435:38:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26370,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26343,
                        "src": "3494:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26369,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3484:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3484:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26372,
                  "nodeType": "EmitStatement",
                  "src": "3479:20:22"
                },
                {
                  "documentation": "@dev Checking DAI balance post swap",
                  "expression": {
                    "id": 26387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 26373,
                          "name": "temp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26341,
                          "src": "3551:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 26374,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26343,
                          "src": "3557:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 26375,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3550:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 26380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3598:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 26383,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3628:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapTest_$26400",
                                    "typeString": "contract UniswapTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapTest_$26400",
                                    "typeString": "contract UniswapTest"
                                  }
                                ],
                                "id": 26382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3620:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 26381,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3620:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 26384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3620:13:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 26378,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3574:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 26379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "3574:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 26385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3574:60:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 26376,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26144,
                          "src": "3565:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 26377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3565:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 26386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3565:70:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "3550:85:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26388,
                  "nodeType": "ExpressionStatement",
                  "src": "3550:85:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26390,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26341,
                        "src": "3652:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4441492063616c6c206661696c6564",
                        "id": 26391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3658:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c57fc6f596d8ddac4cfe230803c1f31f4c9530280f40f3e0bbec208fb29c3308",
                          "typeString": "literal_string \"DAI call failed\""
                        },
                        "value": "DAI call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c57fc6f596d8ddac4cfe230803c1f31f4c9530280f40f3e0bbec208fb29c3308",
                          "typeString": "literal_string \"DAI call failed\""
                        }
                      ],
                      "id": 26389,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "3641:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3641:35:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26393,
                  "nodeType": "ExpressionStatement",
                  "src": "3641:35:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26395,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26343,
                        "src": "3697:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26394,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3687:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3687:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26397,
                  "nodeType": "EmitStatement",
                  "src": "3682:20:22"
                }
              ]
            },
            "documentation": {
              "id": 26333,
              "nodeType": "StructuredDocumentation",
              "src": "2972:49:22",
              "text": "@dev Swapping DAI to BUSD using address calls"
            },
            "functionSelector": "7b0982f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExactInputSingleDAItoBUSD",
            "nameLocation": "3035:29:22",
            "parameters": {
              "id": 26334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3064:2:22"
            },
            "returnParameters": {
              "id": 26335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3074:0:22"
            },
            "scope": 26400,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26131,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7556,
              "src": "513:4:22"
            },
            "id": 26132,
            "nodeType": "InheritanceSpecifier",
            "src": "513:4:22"
          }
        ],
        "canonicalName": "UniswapTest",
        "contractDependencies": [
          26021
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 26130,
          "nodeType": "StructuredDocumentation",
          "src": "337:150:22",
          "text": "@notice This contract makes calls to defined mainnet addresses and tests\nfor 2 exactInputSingle swaps from DAI to USDC and DAI to BUSD"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          26400,
          7556,
          7525,
          4757,
          4368,
          2644,
          1786,
          7545,
          1818
        ],
        "name": "UniswapTest",
        "nameLocation": "498:11:22",
        "scope": 26401,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}