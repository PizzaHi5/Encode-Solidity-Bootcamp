{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExactInputSingleDAItoBUSD",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExactInputSingleDAItoUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMakeABUSDSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMakeAUSDCSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526007805460ff191660011790556200001b62000032565b6008553480156200002b57600080fd5b5062001282565b6040805160a08101825260056060820181815264105b9d9a5b60da1b60808401528252617a6960208084019190915283518085018552601581527f687474703a2f2f3132372e302e302e313a3835343500000000000000000000008183015283850152835164185b9d9a5b60da1b8152600992810192909252925190819003602501902081518051600094620000cd92849291019062000ef7565b50602082810151600183015560408301518051620000f2926002850192019062000ef7565b50506040805160a0810182526007606082018181526612185c991a185d60ca1b60808401528252617a6960208084019190915283518085018552601581527f687474703a2f2f3132372e302e302e313a38353435000000000000000000000081830152838501528351661a185c991a185d60ca1b81526009928101929092529251908190036027019020815180519294509092620001969284929091019062000ef7565b50602082810151600183015560408301518051620001bb926002850192019062000ef7565b5090505060405180606001604052806040518060400160405280600781526020016613585a5b9b995d60ca1b8152508152602001600181526020016040518060600160405280603d815260200162002a8d603d9139905260408051661b585a5b9b995d60ca1b8152600960078201529051908190036027019020815180516200024d9183916020919091019062000ef7565b5060208281015160018301556040830151805162000272926002850192019062000ef7565b50905050604051806060016040528060405180604001604052806006815260200165476f65726c6960d01b8152508152602001600581526020016040518060600160405280603c815260200162002aca603c913990526040805165676f65726c6960d01b815260096006820152905190819003602601902081518051620003029183916020919091019062000ef7565b5060208281015160018301556040830151805162000327926002850192019062000ef7565b50506040805160a081018252600760608201818152665365706f6c696160c81b6080840152825262aa36a760208084019190915283518085018552601781527f68747470733a2f2f7270632e7365706f6c69612e64657600000000000000000081830152838501528351667365706f6c696160c81b81526009928101929092529251908190036027019020815180519294509092620003cc9284929091019062000ef7565b50602082810151600183015560408301518051620003f1926002850192019062000ef7565b50506040805160a081018252600860608201818152674f7074696d69736d60c01b60808401528252600a60208084019190915283518085018552601b81527f68747470733a2f2f6d61696e6e65742e6f7074696d69736d2e696f000000000081830152838501528351676f7074696d69736d60c01b81526009928101929092529251908190036028019020815180519294509092620004969284929091019062000ef7565b50602082810151600183015560408301518051620004bb926002850192019062000ef7565b50506040805160a081018252600f606082018181526e4f7074696d69736d20476f65726c6960881b608084015282526101a460208084019190915283518085018552601a81527f68747470733a2f2f676f65726c692e6f7074696d69736d2e696f000000000000818301528385015283516e6f7074696d69736d5f676f65726c6960881b8152600992810192909252925190819003602f0190208151805192945090926200056f9284929091019062000ef7565b5060208281015160018301556040830151805162000594926002850192019062000ef7565b50506040805160a081018252600c606082018181526b417262697472756d204f6e6560a01b6080840152825261a4b160208084019190915283518085018552601c81527f68747470733a2f2f617262312e617262697472756d2e696f2f72706300000000818301528385015283516b617262697472756d5f6f6e6560a01b8152600992810192909252925190819003602c019020815180519294509092620006429284929091019062000ef7565b5060208281015160018301556040830151805162000667926002850192019062000ef7565b5090505060405180606001604052806040518060400160405280601381526020017f417262697472756d204f6e6520476f65726c6900000000000000000000000000815250815260200162066eed815260200160405180606001604052806025815260200162002b06602591399052604080517f617262697472756d5f6f6e655f676f65726c6900000000000000000000000000815260096013820152905190819003603301902081518051620007279183916020919091019062000ef7565b506020828101516001830155604083015180516200074c926002850192019062000ef7565b50506040805160a081018252600d606082018181526c417262697472756d204e6f766160981b6080840152825261a4ba60208084019190915283518085018552601c81527f68747470733a2f2f6e6f76612e617262697472756d2e696f2f72706300000000818301528385015283516c617262697472756d5f6e6f766160981b8152600992810192909252925190819003602d019020815180519294509092620007fc9284929091019062000ef7565b5060208281015160018301556040830151805162000821926002850192019062000ef7565b50506040805160a081018252600760608201818152662837b63cb3b7b760c91b60808401528252608960208084019190915283518085018552601781527f68747470733a2f2f706f6c79676f6e2d7270632e636f6d00000000000000000081830152838501528351663837b63cb3b7b760c91b81526009928101929092529251908190036027019020815180519294509092620008c49284929091019062000ef7565b50602082810151600183015560408301518051620008e9926002850192019062000ef7565b50506040805160a081018252600e606082018181526d506f6c79676f6e204d756d62616960901b608084015282526201388160208084019190915283518085018552601e81527f68747470733a2f2f7270632d6d756d6261692e6d617469632e746f6461790000818301528385015283516d706f6c79676f6e5f6d756d62616960901b8152600992810192909252925190819003602e0190208151805192945090926200099c9284929091019062000ef7565b50602082810151600183015560408301518051620009c1926002850192019062000ef7565b509050506040518060600160405280604051806040016040528060098152602001684176616c616e63686560b81b815250815260200161a86a815260200160405180606001604052806025815260200162002a6860259139905260408051686176616c616e63686560b81b815260098082015290519081900360290190208151805162000a579183916020919091019062000ef7565b5060208281015160018301556040830151805162000a7c926002850192019062000ef7565b5090505060405180606001604052806040518060400160405280600e81526020016d4176616c616e6368652046756a6960901b815250815260200161a86981526020016040518060600160405280602a815260200162002b2b602a91399052604080516d6176616c616e6368655f66756a6960901b81526009600e820152905190819003602e0190208151805162000b1d9183916020919091019062000ef7565b5060208281015160018301556040830151805162000b42926002850192019062000ef7565b5090505060405180606001604052806040518060400160405280600f81526020016e2127211029b6b0b93a1021b430b4b760891b81525081526020016038815260200160405180606001604052806021815260200162002b55602191399052604080516e3137312fb9b6b0b93a2fb1b430b4b760891b81526009600f820152905190819003602f0190208151805162000be49183916020919091019062000ef7565b5060208281015160018301556040830151805162000c09926002850192019062000ef7565b5090505060405180606001604052806040518060400160405280601781526020017f424e4220536d61727420436861696e20546573746e65740000000000000000008152508152602001606181526020016040518060600160405280602e815260200162002a3a602e91399052604080517f626e625f736d6172745f636861696e5f746573746e657400000000000000000081526009601782015290519081900360370190208151805162000cc79183916020919091019062000ef7565b5060208281015160018301556040830151805162000cec926002850192019062000ef7565b50506040805160a081018252600c606082018181526b23b737b9b4b99021b430b4b760a11b60808401528252606460208084019190915283518085018552601b81527f68747470733a2f2f7270632e676e6f736973636861696e2e636f6d0000000000818301528385015283516b33b737b9b4b9afb1b430b4b760a11b8152600992810192909252925190819003602c01902081518051929450909262000d999284929091019062000ef7565b5060208281015160018301556040830151805162000dbe926002850192019062000ef7565b5090505060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316639d2ad72a6040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000e26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000e509190810190620010b8565b905060005b815181101562000eee5781818151811062000e745762000e74620011ea565b602002602001015160200151600983838151811062000e975762000e97620011ea565b60200260200101516000015160405162000eb2919062001200565b9081526020016040518091039020600201908051906020019062000ed892919062000ef7565b508062000ee5816200121e565b91505062000e55565b50600091505090565b82805462000f059062001246565b90600052602060002090601f01602090048101928262000f29576000855562000f74565b82601f1062000f4457805160ff191683800117855562000f74565b8280016001018555821562000f74579182015b8281111562000f7457825182559160200191906001019062000f57565b5062000f8292915062000f86565b5090565b5b8082111562000f82576000815560010162000f87565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171562000fd85762000fd862000f9d565b60405290565b604051601f8201601f191681016001600160401b038111828210171562001009576200100962000f9d565b604052919050565b60005b838110156200102e57818101518382015260200162001014565b838111156200103e576000848401525b50505050565b600082601f8301126200105657600080fd5b81516001600160401b0381111562001072576200107262000f9d565b62001087601f8201601f191660200162000fde565b8181528460208386010111156200109d57600080fd5b620010b082602083016020870162001011565b949350505050565b60006020808385031215620010cc57600080fd5b82516001600160401b0380821115620010e457600080fd5b818501915085601f830112620010f957600080fd5b8151818111156200110e576200110e62000f9d565b8060051b6200111f85820162000fde565b91825283810185019185810190898411156200113a57600080fd5b86860192505b83831015620011dd578251858111156200115a5760008081fd5b86016040818c03601f1901811315620011735760008081fd5b6200117d62000fb3565b8983015188811115620011905760008081fd5b620011a08e8c8387010162001044565b825250908201519087821115620011b75760008081fd5b620011c78d8b8486010162001044565b818b015284525050918601919086019062001140565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600082516200121481846020870162001011565b9190910192915050565b6000600182016200123f57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200125b57607f821691505b6020821081036200127c57634e487b7160e01b600052602260045260246000fd5b50919050565b6117a880620012926000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806359d2a6b51161005b57806359d2a6b51461009c5780637b0982f8146100a4578063ba414fa6146100ac578063fa7626d4146100c857600080fd5b80630a9254e4146100825780630c9d72a01461008c5780631c92c97b14610094575b600080fd5b61008a6100d5565b005b61008a610120565b61008a6103ab565b61008a61061c565b61008a61083f565b6100b4610a92565b604051901515815260200160405180910390f35b6007546100b49060ff1681565b6040516100e1906110a0565b604051809103906000f0801580156100fd573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b0392909216919091179055565b601154604051630b4c774160e11b8152736b175474e89094c44da98b954eedeac495271d0f600482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486024820152610bb860448201526000916001600160a01b031690631698ee8290606401602060405180830381865afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c391906110ad565b601254604051635f729dd160e01b8152736b175474e89094c44da98b954eedeac495271d0f600482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4860248201526001600160a01b03808416604483015273e592427a0aece92de3edee1f18e0157c05861564606480840191909152608483015292935060009290911690635f729dd19060a4016020604051808303816000875af115801561026c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029091906110d6565b905061029e60008211610bbf565b6000805160206117538339815191526102b682610c36565b6040516020016102c6919061111f565b60408051601f19818403018152908290526102e09161117c565b60405180910390a16040516370a0823160e01b8152306004820152600080516020611753833981519152906103759073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48906370a08231906024015b602060405180830381865afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037091906110d6565b610c36565b604051602001610385919061118f565b60408051601f198184030181529082905261039f9161117c565b60405180910390a15050565b6103c873dfd5293d8e347dfe59e90efd55b2956a1343963d610c53565b6040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486020820152610bb8818301523360608201526305f5e0ff6080820152606460a0820152600060c0820181905260e082018190529151829173e592427a0aece92de3edee1f18e0157c058615649161045991906024016111c5565b60408051601f198184030181529181526020820180516001600160e01b031663252deb5160e21b1790525161048e919061122e565b6000604051808303816000865af19150503d80600081146104cb576040519150601f19603f3d011682016040523d82523d6000602084013e6104d0565b606091505b50915091506105098260405180604001604052806012815260200171149bdd5d195c8818d85b1b0819985a5b195960721b815250610d3a565b60008051602061175383398151915281604051610526919061117c565b60405180910390a160405130602482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb489060440160408051601f198184030181529181526020820180516001600160e01b03166370a0823160e01b17905251610585919061122e565b6000604051808303816000865af19150503d80600081146105c2576040519150601f19603f3d011682016040523d82523d6000602084013e6105c7565b606091505b5060408051808201909152601081526f1554d110c818d85b1b0819985a5b195960821b602082015291935091506105ff908390610d3a565b6000805160206117538339815191528160405161039f919061117c565b601154604051630b4c774160e11b8152736b175474e89094c44da98b954eedeac495271d0f600482015273dfd5293d8e347dfe59e90efd55b2956a1343963d6024820152610bb860448201526000916001600160a01b031690631698ee8290606401602060405180830381865afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf91906110ad565b601254604051635f729dd160e01b8152736b175474e89094c44da98b954eedeac495271d0f600482015273dfd5293d8e347dfe59e90efd55b2956a1343963d60248201526001600160a01b03808416604483015273e592427a0aece92de3edee1f18e0157c05861564606480840191909152608483015292935060009290911690635f729dd19060a4016020604051808303816000875af1158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c91906110d6565b905061079a60008211610bbf565b6000805160206117538339815191526107b282610c36565b6040516020016107c2919061111f565b60408051601f19818403018152908290526107dc9161117c565b60405180910390a16040516370a0823160e01b81523060048201526000805160206117538339815191529061082f9073dfd5293d8e347dfe59e90efd55b2956a1343963d906370a082319060240161032f565b604051602001610385919061124a565b61085c73dfd5293d8e347dfe59e90efd55b2956a1343963d610c53565b6040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273dfd5293d8e347dfe59e90efd55b2956a1343963d6020820152610bb8818301523360608201526305f5e0ff6080820152606460a0820152600060c0820181905260e082018190529151829173e592427a0aece92de3edee1f18e0157c05861564916108ed91906024016111c5565b60408051601f198184030181529181526020820180516001600160e01b031663252deb5160e21b17905251610922919061122e565b6000604051808303816000865af19150503d806000811461095f576040519150601f19603f3d011682016040523d82523d6000602084013e610964565b606091505b509150915061099d8260405180604001604052806012815260200171149bdd5d195c8818d85b1b0819985a5b195960721b815250610d3a565b600080516020611753833981519152816040516109ba919061117c565b60405180910390a1604051306024820152736b175474e89094c44da98b954eedeac495271d0f9060440160408051601f198184030181529181526020820180516001600160e01b03166370a0823160e01b17905251610a19919061122e565b6000604051808303816000865af19150503d8060008114610a56576040519150601f19603f3d011682016040523d82523d6000602084013e610a5b565b606091505b5060408051808201909152600f81526e1110524818d85b1b0819985a5b1959608a1b602082015291935091506105ff908390610d3a565b600754600090610100900460ff1615610ab45750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610bba5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610b42917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611273565b60408051601f1981840301815290829052610b5c9161122e565b6000604051808303816000865af19150503d8060008114610b99576040519150601f19603f3d011682016040523d82523d6000602084013e610b9e565b606091505b5091505080806020019051810190610bb691906112a4565b9150505b919050565b80610c33577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610c239060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1610c33610d83565b50565b6060610c4d82610c4584610e8f565b600101610ef9565b92915050565b60405163c88a5e6d60e01b81526001600160a01b0382166004820152600160801b6024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610cb257600080fd5b505af1158015610cc6573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b158015610d1f57600080fd5b505af1158015610d33573d6000803e3d6000fd5b5050505050565b81610d7f577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610d6e91906112c6565b60405180910390a1610d7f82610bbf565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e7e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610e1d9291602001611273565b60408051601f1981840301815290829052610e379161122e565b6000604051808303816000865af19150503d8060008114610e74576040519150601f19603f3d011682016040523d82523d6000602084013e610e79565b606091505b505050505b6007805461ff001916610100179055565b600080608083901c15610ea75760809290921c916010015b604083901c15610ebc5760409290921c916008015b602083901c15610ed15760209290921c916004015b601083901c15610ee65760109290921c916002015b600883901c15610c4d5760010192915050565b60606000610f0883600261130b565b610f1390600261132a565b67ffffffffffffffff811115610f2b57610f2b611342565b6040519080825280601f01601f191660200182016040528015610f55576020820181803683370190505b509050600360fc1b81600081518110610f7057610f70611358565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610f9f57610f9f611358565b60200101906001600160f81b031916908160001a9053506000610fc384600261130b565b610fce90600161132a565b90505b6001811115611046576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061100257611002611358565b1a60f81b82828151811061101857611018611358565b60200101906001600160f81b031916908160001a90535060049490941c9361103f8161136e565b9050610fd1565b5083156110995760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b6103cd8061138683390190565b6000602082840312156110bf57600080fd5b81516001600160a01b038116811461109957600080fd5b6000602082840312156110e857600080fd5b5051919050565b60005b8381101561110a5781810151838201526020016110f2565b83811115611119576000848401525b50505050565b68029bbb0b83832b21d160bd1b8152600082516111438160098501602087016110ef565b9190910160090192915050565b600081518084526111688160208601602086016110ef565b601f01601f19169290920160200192915050565b6020815260006110996020830184611150565b6d02aa9a221902130b630b731b29d160951b8152600082516111b881600e8501602087016110ef565b91909101600e0192915050565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b600082516112408184602087016110ef565b9190910192915050565b6d0212aa9a2102130b630b731b29d160951b8152600082516111b881600e8501602087016110ef565b6001600160e01b03198316815281516000906112968160048501602087016110ef565b919091016004019392505050565b6000602082840312156112b657600080fd5b8151801515811461109957600080fd5b60408152600560408201526422b93937b960d91b60608201526080602082015260006110996080830184611150565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611325576113256112f5565b500290565b6000821982111561133d5761133d6112f5565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161137d5761137d6112f5565b50600019019056fe608060405234801561001057600080fd5b506103ad806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635f729dd114610030575b600080fd5b61004361003e36600461021d565b610055565b60405190815260200160405180910390f35b600080846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ba9190610298565b5050505050509050836001600160a01b031663414bf3896040518061010001604052808a6001600160a01b03168152602001896001600160a01b03168152602001610bb862ffffff168152602001336001600160a01b031681526020016305f5e0ff8152602001868152602001600a87610134919061033c565b81526001600160a01b038581166020928301526040805160e086811b6001600160e01b031916825285518416600483015293850151831660248201529084015162ffffff1660448201526060840151821660648201526080840151608482015260a084015160a482015260c084015160c482015292909101511660e4820152610104016020604051808303816000875af11580156101d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fa919061035e565b979650505050505050565b6001600160a01b038116811461021a57600080fd5b50565b600080600080600060a0868803121561023557600080fd5b853561024081610205565b9450602086013561025081610205565b9350604086013561026081610205565b9250606086013561027081610205565b949793965091946080013592915050565b805161ffff8116811461029357600080fd5b919050565b600080600080600080600060e0888a0312156102b357600080fd5b87516102be81610205565b8097505060208801518060020b81146102d657600080fd5b95506102e460408901610281565b94506102f260608901610281565b935061030060808901610281565b925060a088015160ff8116811461031657600080fd5b60c0890151909250801515811461032c57600080fd5b8091505092959891949750929550565b60008261035957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561037057600080fd5b505191905056fea2646970667358221220996783cae254e7f2e4271ae53f96ae46fdce899ac2887c9c54f30063be1240aa64736f6c634300080d003323b62ad0584d24a75f0bf3560391ef5659ec6db1269c56e11aa241d637f19b20a2646970667358221220fa11f385df8abb43f046f73c234866fab7559b2d69b12d7a7dbe98d212cc3a4b64736f6c634300080d003368747470733a2f2f646174612d736565642d7072656273632d312d73312e62696e616e63652e6f72673a3835343568747470733a2f2f6170692e617661782e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6d61696e6e65742e696e667572612e696f2f76332f363737303435346263366561343263353861616331323937383533316239336668747470733a2f2f676f65726c692e696e667572612e696f2f76332f363737303435346263366561343263353861616331323937383533316239336668747470733a2f2f676f65726c692d726f6c6c75702e617262697472756d2e696f2f72706368747470733a2f2f6170692e617661782d746573742e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6273632d6461746173656564312e62696e616e63652e6f7267",
    "sourceMap": "489:3257:22:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;650:14:4;:12;:14::i;:::-;620:44;;489:3257:22;;;;;;;;;;;;5868:2125:4;6002:46;;;;;;;;;;;;;;;-1:-1:-1;;;6002:46:4;;;;;;6017:5;6002:46;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6002:46:4;5981:18;;-1:-1:-1;;;216:20:23;;5981:9:4;252:11:23;;;5981:18:4;;;;;;;;;;;;;;:67;;;;-1:-1:-1;;5981:67:4;;:18;;:67;;;;:::i;:::-;-1:-1:-1;5981:67:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6081:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;6081:48:4;;;;;;6098:5;6081:48;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6081:48:4;6058:20;;-1:-1:-1;;;476:22:23;;6058:9:4;514:11:23;;;6058:20:4;;;;;;;;;;;;;;:71;;;;6081:48;;-1:-1:-1;6058:20:4;;:71;;:20;;:71;;;;;:::i;:::-;-1:-1:-1;6058:71:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6162:84;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6162:84:4;;;;;;;6179:1;6162:84;;;;;;;;;;;;;;;;;;;;;;;6139:20;;;-1:-1:-1;;;738:22:23;;6139:9:4;785:1:23;776:11;;6139:20:4;;;;;;;;;;;:107;;;;;;:20;;;:107;;;;;;:::i;:::-;-1:-1:-1;6139:107:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6278:82;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6278:82:4;;;;;;;6294:1;6278:82;;;;;;;;;;;;;;;;;;;;;;;6256:19;;;-1:-1:-1;;;1000:21:23;;6256:9:4;1046:1:23;1037:11;;6256:19:4;;;;;;;;;;;:104;;;;;;:19;;;:104;;;;;;:::i;:::-;-1:-1:-1;6256:104:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6393:53:4;;;;;;;;;;;;;;;-1:-1:-1;;;6393:53:4;;;;;;6410:8;6393:53;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6393:53:4;6370:20;;-1:-1:-1;;;1261:22:23;;6370:9:4;1299:11:23;;;6370:20:4;;;;;;;;;;;;;;:76;;;;6393:53;;-1:-1:-1;6370:20:4;;:76;;:20;;:76;;;;;:::i;:::-;-1:-1:-1;6370:76:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6480:52:4;;;;;;;;;;;;;;;-1:-1:-1;;;6480:52:4;;;;;;6498:2;6480:52;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6480:52:4;6456:21;;-1:-1:-1;;;1523:23:23;;6456:9:4;1562:11:23;;;6456:21:4;;;;;;;;;;;;;;:76;;;;6480:52;;-1:-1:-1;6456:21:4;;:76;;:21;;:76;;;;;:::i;:::-;-1:-1:-1;6456:76:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6573:59:4;;;;;;;;;;;;;;;-1:-1:-1;;;6573:59:4;;;;;;6598:3;6573:59;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6573:59:4;6542:28;;-1:-1:-1;;;1786:30:23;;6542:9:4;1832:12:23;;;6542:28:4;;;;;;;;;;;;;;:90;;;;6573:59;;-1:-1:-1;6542:28:4;;:90;;:28;;:90;;;;;:::i;:::-;-1:-1:-1;6542:90:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6670:60:4;;;;;;;;;;;;;;;-1:-1:-1;;;6670:60:4;;;;;;6692:5;6670:60;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6670:60:4;6642:25;;-1:-1:-1;;;2057:27:23;;6642:9:4;2100:12:23;;;6642:25:4;;;;;;;;;;;;;;:88;;;;6670:60;;-1:-1:-1;6642:25:4;;:88;;:25;;:88;;;;;:::i;:::-;-1:-1:-1;6642:88:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6775:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6804:6;6775:77;;;;;;;;;;;;;;;;;;;;;;;6740:32;;;2337:21:23;2325:34;;6740:9:4;2384:2:23;2375:12;;6740:32:4;;;;;;;;;;;:112;;;;;;:32;;;:112;;;;;;:::i;:::-;-1:-1:-1;6740:112:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6891:61:4;;;;;;;;;;;;;;;-1:-1:-1;;;6891:61:4;;;;;;6914:5;6891:61;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6891:61:4;6862:26;;-1:-1:-1;;;2600:28:23;;6862:9:4;2644:12:23;;;6862:26:4;;;;;;;;;;;;;;:90;;;;6891:61;;-1:-1:-1;6862:26:4;;:90;;:26;;:90;;;;;:::i;:::-;-1:-1:-1;6862:90:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6985:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;6985:48:4;;;;;;7002:3;6985:48;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6985:48:4;6962:20;;-1:-1:-1;;;2869:22:23;;6962:9:4;2907:11:23;;;6962:20:4;;;;;;;;;;;;;;:71;;;;6985:48;;-1:-1:-1;6962:20:4;;:71;;:20;;:71;;;;;:::i;:::-;-1:-1:-1;6962:71:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7073:64:4;;;;;;;;;;;;;;;-1:-1:-1;;;7073:64:4;;;;;;7097:5;7073:64;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7073:64:4;7043:27;;-1:-1:-1;;;3131:29:23;;7043:9:4;3176:12:23;;;7043:27:4;;;;;;;;;;;;;;:94;;;;7073:64;;-1:-1:-1;7043:27:4;;:94;;:27;;:94;;;;;:::i;:::-;-1:-1:-1;7043:94:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7172:66;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7172:66:4;;;;;;;7191:5;7172:66;;;;;;;;;;;;;;;;;;;;;;;7147:22;;;-1:-1:-1;;;3401:24:23;;7147:9:4;3441:11:23;;;7147:22:4;;;;;;;;;;;:91;;;;;;:22;;;:91;;;;;;:::i;:::-;-1:-1:-1;7147:91:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7278:76;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7278:76:4;;;;;;;7302:5;7278:76;;;;;;;;;;;;;;;;;;;;;;;7248:27;;;-1:-1:-1;;;3665:29:23;;7248:9:4;3719:2:23;3710:12;;7248:27:4;;;;;;;;;;;:106;;;;;;:27;;;:106;;;;;;:::i;:::-;-1:-1:-1;7248:106:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7395:65;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7395:65:4;;;;;;;7420:2;7395:65;;;;;;;;;;;;;;;;;;;;;;;7364:28;;;-1:-1:-1;;;3935:30:23;;7364:9:4;3990:2:23;3981:12;;7364:28:4;;;;;;;;;;;:96;;;;;;:28;;;:96;;;;;;:::i;:::-;-1:-1:-1;7364:96:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7509:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7542:2;7509:86;;;;;;;;;;;;;;;;;;;;;;;7470:36;;;4218:25:23;4206:38;;7470:9:4;4269:2:23;4260:12;;7470:36:4;;;;;;;;;;;:125;;;;;;:36;;;:125;;;;;;:::i;:::-;-1:-1:-1;7470:125:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7658:57:4;;;;;;;;;;;;;;;-1:-1:-1;;;7658:57:4;;;;;;7680:3;7658:57;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7658:57:4;7630:25;;-1:-1:-1;;;4485:27:23;;7630:9:4;4528:12:23;;;7630:25:4;;;;;;;;;;;;;;:85;;;;7658:57;;-1:-1:-1;7630:25:4;;:85;;:25;;:85;;;;;:::i;:::-;-1:-1:-1;7630:85:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7807:20;245:28;237:37;;-1:-1:-1;;;;;7830:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7830:18:4;;;;;;;;;;;;:::i;:::-;7807:41;;7863:9;7858:111;7882:4;:11;7878:1;:15;7858:111;;;7947:4;7952:1;7947:7;;;;;;;;:::i;:::-;;;;;;;:11;;;7914:9;7924:4;7929:1;7924:7;;;;;;;;:::i;:::-;;;;;;;:12;;;7914:23;;;;;;:::i;:::-;;;;;;;;;;;;;:30;;:44;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7895:3:4;;;;:::i;:::-;;;;7858:111;;;;7985:1;7978:8;;;5868:2125;:::o;489:3257:22:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;489:3257:22;;;-1:-1:-1;489:3257:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;4551:127:23;4612:10;4607:3;4603:20;4600:1;4593:31;4643:4;4640:1;4633:15;4667:4;4664:1;4657:15;4683:257;4755:4;4749:11;;;4787:17;;-1:-1:-1;;;;;4819:34:23;;4855:22;;;4816:62;4813:88;;;4881:18;;:::i;:::-;4917:4;4910:24;4683:257;:::o;4945:275::-;5016:2;5010:9;5081:2;5062:13;;-1:-1:-1;;5058:27:23;5046:40;;-1:-1:-1;;;;;5101:34:23;;5137:22;;;5098:62;5095:88;;;5163:18;;:::i;:::-;5199:2;5192:22;4945:275;;-1:-1:-1;4945:275:23:o;5225:258::-;5297:1;5307:113;5321:6;5318:1;5315:13;5307:113;;;5397:11;;;5391:18;5378:11;;;5371:39;5343:2;5336:10;5307:113;;;5438:6;5435:1;5432:13;5429:48;;;5473:1;5464:6;5459:3;5455:16;5448:27;5429:48;;5225:258;;;:::o;5488:497::-;5542:5;5595:3;5588:4;5580:6;5576:17;5572:27;5562:55;;5613:1;5610;5603:12;5562:55;5636:13;;-1:-1:-1;;;;;5661:26:23;;5658:52;;;5690:18;;:::i;:::-;5734:55;5777:2;5758:13;;-1:-1:-1;;5754:27:23;5783:4;5750:38;5734:55;:::i;:::-;5814:2;5805:7;5798:19;5860:3;5853:4;5848:2;5840:6;5836:15;5832:26;5829:35;5826:55;;;5877:1;5874;5867:12;5826:55;5890:64;5951:2;5944:4;5935:7;5931:18;5924:4;5916:6;5912:17;5890:64;:::i;:::-;5972:7;5488:497;-1:-1:-1;;;;5488:497:23:o;5990:1909::-;6106:6;6137:2;6180;6168:9;6159:7;6155:23;6151:32;6148:52;;;6196:1;6193;6186:12;6148:52;6223:16;;-1:-1:-1;;;;;6288:14:23;;;6285:34;;;6315:1;6312;6305:12;6285:34;6353:6;6342:9;6338:22;6328:32;;6398:7;6391:4;6387:2;6383:13;6379:27;6369:55;;6420:1;6417;6410:12;6369:55;6449:2;6443:9;6471:2;6467;6464:10;6461:36;;;6477:18;;:::i;:::-;6523:2;6520:1;6516:10;6546:28;6570:2;6566;6562:11;6546:28;:::i;:::-;6608:15;;;6678:11;;;6674:20;;;6639:12;;;;6706:19;;;6703:39;;;6738:1;6735;6728:12;6703:39;6770:2;6766;6762:11;6751:22;;6782:1087;6798:6;6793:3;6790:15;6782:1087;;;6877:3;6871:10;6913:2;6900:11;6897:19;6894:109;;;6957:1;6986:2;6982;6975:14;6894:109;7026:20;;7069:4;7097:16;;;-1:-1:-1;;7093:30:23;7089:39;-1:-1:-1;7086:129:23;;;7169:1;7198:2;7194;7187:14;7086:129;7241:22;;:::i;:::-;7306:2;7302;7298:11;7292:18;7339:2;7329:8;7326:16;7323:109;;;7384:1;7414:3;7409;7402:16;7323:109;7459:65;7516:7;7511:2;7500:8;7496:2;7492:17;7488:26;7459:65;:::i;:::-;7445:80;;-1:-1:-1;7560:11:23;;;7554:18;;7588:16;;;7585:109;;;7646:1;7676:3;7671;7664:16;7585:109;7730:65;7787:7;7782:2;7771:8;7767:2;7763:17;7759:26;7730:65;:::i;:::-;7714:14;;;7707:89;7809:18;;-1:-1:-1;;6815:12:23;;;;7847;;;;6782:1087;;;7888:5;5990:1909;-1:-1:-1;;;;;;;;;5990:1909:23:o;7904:127::-;7965:10;7960:3;7956:20;7953:1;7946:31;7996:4;7993:1;7986:15;8020:4;8017:1;8010:15;8036:276;8167:3;8205:6;8199:13;8221:53;8267:6;8262:3;8255:4;8247:6;8243:17;8221:53;:::i;:::-;8290:16;;;;;8036:276;-1:-1:-1;;8036:276:23:o;8317:232::-;8356:3;8377:17;;;8374:140;;8436:10;8431:3;8427:20;8424:1;8417:31;8471:4;8468:1;8461:15;8499:4;8496:1;8489:15;8374:140;-1:-1:-1;8541:1:23;8530:13;;8317:232::o;8554:380::-;8633:1;8629:12;;;;8676;;;8697:61;;8751:4;8743:6;8739:17;8729:27;;8697:61;8804:2;8796:6;8793:14;8773:18;8770:38;8767:161;;8850:10;8845:3;8841:20;8838:1;8831:31;8885:4;8882:1;8875:15;8913:4;8910:1;8903:15;8767:161;;8554:380;;;:::o;:::-;489:3257:22;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "489:3257:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1048:71;;;:::i;:::-;;1769:424;;;:::i;2315:686::-;;;:::i;1187:576::-;;;:::i;3061:683::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;179:14:23;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;1572:26;;;;;;;;;1048:71:22;1087:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1082:2:22;:30;;-1:-1:-1;;;;;;1082:30:22;-1:-1:-1;;;;;1082:30:22;;;;;;;;;;1048:71::o;1769:424::-;1848:14;;1830:58;;-1:-1:-1;;;1830:58:22;;684:42;1830:58;;;456:34:23;828:42:22;506:18:23;;;499:43;1883:4:22;558:18:23;;;551:49;1815:12:22;;-1:-1:-1;;;;;1848:14:22;;1830:41;;391:18:23;;1830:58:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1916:2;;:48;;-1:-1:-1;;;1916:48:22;;684:42;1916:48;;;1213:34:23;828:42:22;1263:18:23;;;1256:43;-1:-1:-1;;;;;1335:15:23;;;1315:18;;;1308:43;613:42:22;1960:3;1367:18:23;;;1360:43;;;;1419:19;;;1412:35;1815:73:22;;-1:-1:-1;1899:14:22;;1916:2;;;;:18;;1147:19:23;;1916:48:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1899:65;;1974:22;1994:1;1985:6;:10;1974;:22::i;:::-;-1:-1:-1;;;;;;;;;;;2051:20:22;:6;:18;:20::i;:::-;2021:51;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2021:51:22;;;;;;;;;;2011:62;;;:::i;:::-;;;;;;;;2133:37;;-1:-1:-1;;;2133:37:22;;2164:4;2133:37;;;2971:51:23;-1:-1:-1;;;;;;;;;;;2088:98:22;2133:51;;828:42;;2133:22;;2944:18:23;;2133:37:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;:51::i;:::-;2098:87;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2098:87:22;;;;;;;;;;2088:98;;;:::i;:::-;;;;;;;;1805:388;;1769:424::o;2315:686::-;2369:15;756:42;2369:9;:15::i;:::-;2521:190;;;;;;;;684:42;2521:190;;828:42;2521:190;;;;2604:4;2521:190;;;;2622:10;2521:190;;;;2646:8;2521:190;;;;2668:3;2521:190;;;;2391:9;2521:190;;;;;;;;;;;;2435:282;;2391:9;;613:42;;2435:282;;2521:190;2435:282;;;:::i;:::-;;;;-1:-1:-1;;2435:282:22;;;;;;;;;;;;;;-1:-1:-1;;;;;2435:282:22;-1:-1:-1;;;2435:282:22;;;2423:295;;;2435:282;2423:295;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2390:328;;;;2724:38;2735:4;2724:38;;;;;;;;;;;;;-1:-1:-1;;;2724:38:22;;;:10;:38::i;:::-;-1:-1:-1;;;;;;;;;;;2783:4:22;2773:15;;;;;;:::i;:::-;;;;;;;;2865:60;;2919:4;2865:60;;;2971:51:23;828:42:22;;2944:18:23;;2865:60:22;;;-1:-1:-1;;2865:60:22;;;;;;;;;;;;;;-1:-1:-1;;;;;2865:60:22;-1:-1:-1;;;2865:60:22;;;2855:71;;;2865:60;2855:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2932:36:22;;;;;;;;;;;;-1:-1:-1;;;2932:36:22;;;;2840:86;;-1:-1:-1;2840:86:22;-1:-1:-1;2932:36:22;;2840:86;;2932:10;:36::i;:::-;-1:-1:-1;;;;;;;;;;;2989:4:22;2979:15;;;;;;:::i;1187:576::-;1418:14;;1400:58;;-1:-1:-1;;;1400:58:22;;684:42;1400:58;;;456:34:23;756:42:22;506:18:23;;;499:43;1453:4:22;558:18:23;;;551:49;1385:12:22;;-1:-1:-1;;;;;1418:14:22;;1400:41;;391:18:23;;1400:58:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1486:2;;:48;;-1:-1:-1;;;1486:48:22;;684:42;1486:48;;;1213:34:23;756:42:22;1263:18:23;;;1256:43;-1:-1:-1;;;;;1335:15:23;;;1315:18;;;1308:43;613:42:22;1530:3;1367:18:23;;;1360:43;;;;1419:19;;;1412:35;1385:73:22;;-1:-1:-1;1469:14:22;;1486:2;;;;:18;;1147:19:23;;1486:48:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1469:65;;1544:22;1564:1;1555:6;:10;1544;:22::i;:::-;-1:-1:-1;;;;;;;;;;;1621:20:22;:6;:18;:20::i;:::-;1591:51;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1591:51:22;;;;;;;;;;1581:62;;;:::i;:::-;;;;;;;;1703:37;;-1:-1:-1;;;1703:37:22;;1734:4;1703:37;;;2971:51:23;-1:-1:-1;;;;;;;;;;;1658:98:22;1703:51;;756:42;;1703:22;;2944:18:23;;1703:37:22;2825:203:23;1703:51:22;1668:87;;;;;;;;:::i;3061:683::-;3115:15;756:42;3115:9;:15::i;:::-;3267:190;;;;;;;;684:42;3267:190;;756:42;3267:190;;;;3350:4;3267:190;;;;3368:10;3267:190;;;;3392:8;3267:190;;;;3414:3;3267:190;;;;3137:9;3267:190;;;;;;;;;;;;3181:282;;3137:9;;613:42;;3181:282;;3267:190;3181:282;;;:::i;:::-;;;;-1:-1:-1;;3181:282:22;;;;;;;;;;;;;;-1:-1:-1;;;;;3181:282:22;-1:-1:-1;;;3181:282:22;;;3169:295;;;3181:282;3169:295;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3136:328;;;;3470:38;3481:4;3470:38;;;;;;;;;;;;;-1:-1:-1;;;3470:38:22;;;:10;:38::i;:::-;-1:-1:-1;;;;;;;;;;;3529:4:22;3519:15;;;;;;:::i;:::-;;;;;;;;3609:60;;3663:4;3609:60;;;2971:51:23;684:42:22;;2944:18:23;;3609:60:22;;;-1:-1:-1;;3609:60:22;;;;;;;;;;;;;;-1:-1:-1;;;;;3609:60:22;-1:-1:-1;;;3609:60:22;;;3600:70;;;3609:60;3600:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3676:35:22;;;;;;;;;;;;-1:-1:-1;;;3676:35:22;;;;3585:85;;-1:-1:-1;3585:85:22;-1:-1:-1;3676:35:22;;3585:85;;3676:10;:35::i;1819:584:0:-;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;5164:51:23;;;-1:-1:-1;;;5231:18:23;;;5224:34;2196:43:0;;;;;;;;;5137:18:23;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;3255:157::-;3315:9;3310:96;;3345:30;;;;;6129:2:23;6111:21;;;6168:2;6148:18;;;6141:30;6207:25;6202:2;6187:18;;6180:53;6265:2;6250:18;;5927:347;3345:30:0;;;;;;;;3389:6;:4;:6::i;:::-;3255:157;:::o;1216:174:15:-;1275:13;1331:42;1343:5;1350:18;1362:5;1350:11;:18::i;:::-;1371:1;1350:22;1331:11;:42::i;:::-;1324:49;1216:174;-1:-1:-1;;1216:174:15:o;20479:116:4:-;20538:22;;-1:-1:-1;;;20538:22:4;;-1:-1:-1;;;;;5182:32:23;;20538:22:4;;;5164:51:23;-1:-1:-1;;;5231:18:23;;;5224:34;20538:7:4;;;;5137:18:23;;20538:22:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20570:18:4;;-1:-1:-1;;;20570:18:4;;-1:-1:-1;;;;;2989:32:23;;20570:18:4;;;2971:51:23;20570:13:4;;-1:-1:-1;20570:13:4;;-1:-1:-1;2944:18:23;;20570::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20479:116;:::o;3418:191:0:-;3497:9;3492:111;;3527:30;3553:3;3527:30;;;;;;:::i;:::-;;;;;;;;3571:21;3582:9;3571:10;:21::i;:::-;3418:191;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;7256:51:23;;;-1:-1:-1;;;7323:18:23;;;7316:34;;;;2705:4:0;7366:18:23;;;7359:34;2482:11:0;;1671:64;2579:43;;7229:18:23;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;11430:663:16:-;11484:7;;11568:3;11559:12;;;:16;11555:98;;11605:3;11595:13;;;;;11636:2;11626:12;11555:98;11679:2;11670:11;;;:15;11666:95;;11715:2;11705:12;;;;;11745:1;11735:11;11666:95;11787:2;11778:11;;;:15;11774:95;;11823:2;11813:12;;;;;11853:1;11843:11;11774:95;11895:2;11886:11;;;:15;11882:95;;11931:2;11921:12;;;;;11961:1;11951:11;11882:95;12003:1;11994:10;;;:14;11990:64;;12038:1;12028:11;12080:6;11430:663;-1:-1:-1;;11430:663:16:o;1513:437:15:-;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:15;;1613:47;;-1:-1:-1;;;1670:6:15;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:15;;;;;;;;;-1:-1:-1;;;1695:6:15;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:15;;;;;;;;-1:-1:-1;1725:9:15;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:15;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:15;;;;;;;;-1:-1:-1;1836:1:15;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:15;;1857:55;;;;-1:-1:-1;;;1857:55:15;;8449:2:23;1857:55:15;;;8431:21:23;;;8468:18;;;8461:30;8527:34;8507:18;;;8500:62;8579:18;;1857:55:15;;;;;;;;1936:6;1513:437;-1:-1:-1;;;1513:437:15:o;-1:-1:-1:-;;;;;;;;:::o;611:290:23:-;681:6;734:2;722:9;713:7;709:23;705:32;702:52;;;750:1;747;740:12;702:52;776:16;;-1:-1:-1;;;;;821:31:23;;811:42;;801:70;;867:1;864;857:12;1458:184;1528:6;1581:2;1569:9;1560:7;1556:23;1552:32;1549:52;;;1597:1;1594;1587:12;1549:52;-1:-1:-1;1620:16:23;;1458:184;-1:-1:-1;1458:184:23:o;1647:258::-;1719:1;1729:113;1743:6;1740:1;1737:13;1729:113;;;1819:11;;;1813:18;1800:11;;;1793:39;1765:2;1758:10;1729:113;;;1860:6;1857:1;1854:13;1851:48;;;1895:1;1886:6;1881:3;1877:16;1870:27;1851:48;;1647:258;;;:::o;1910:426::-;-1:-1:-1;;;2167:3:23;2160:24;2142:3;2213:6;2207:13;2229:61;2283:6;2279:1;2274:3;2270:11;2263:4;2255:6;2251:17;2229:61;:::i;:::-;2310:16;;;;2328:1;2306:24;;1910:426;-1:-1:-1;;1910:426:23:o;2341:257::-;2382:3;2420:5;2414:12;2447:6;2442:3;2435:19;2463:63;2519:6;2512:4;2507:3;2503:14;2496:4;2489:5;2485:16;2463:63;:::i;:::-;2580:2;2559:15;-1:-1:-1;;2555:29:23;2546:39;;;;2587:4;2542:50;;2341:257;-1:-1:-1;;2341:257:23:o;2603:217::-;2750:2;2739:9;2732:21;2713:4;2770:44;2810:2;2799:9;2795:18;2787:6;2770:44;:::i;3033:433::-;-1:-1:-1;;;3290:3:23;3283:29;3265:3;3341:6;3335:13;3357:62;3412:6;3407:2;3402:3;3398:12;3391:4;3383:6;3379:17;3357:62;:::i;:::-;3439:16;;;;3457:2;3435:25;;3033:433;-1:-1:-1;;3033:433:23:o;3471:797::-;3760:13;;-1:-1:-1;;;;;3756:22:23;;;3738:41;;3839:4;3827:17;;;3821:24;3817:33;;3795:20;;;3788:63;3911:4;3899:17;;;3893:24;3919:8;3889:39;3867:20;;;3860:69;3989:4;3977:17;;;3971:24;3967:33;;3945:20;;;3938:63;4057:4;4045:17;;;4039:24;4017:20;;;4010:54;3718:3;4108:17;;;4102:24;4080:20;;;4073:54;4183:4;4171:17;;;4165:24;4143:20;;;4136:54;4250:4;4238:17;;;4232:24;4228:33;4206:20;;;4199:63;;;;3687:3;3672:19;;3471:797::o;4273:274::-;4402:3;4440:6;4434:13;4456:53;4502:6;4497:3;4490:4;4482:6;4478:17;4456:53;:::i;:::-;4525:16;;;;;4273:274;-1:-1:-1;;4273:274:23:o;4552:433::-;-1:-1:-1;;;4809:3:23;4802:29;4784:3;4860:6;4854:13;4876:62;4931:6;4926:2;4921:3;4917:12;4910:4;4902:6;4898:17;4876:62;:::i;5269:371::-;-1:-1:-1;;;;;;5454:33:23;;5442:46;;5511:13;;5424:3;;5533:61;5511:13;5583:1;5574:11;;5567:4;5555:17;;5533:61;:::i;:::-;5614:16;;;;5632:1;5610:24;;5269:371;-1:-1:-1;;;5269:371:23:o;5645:277::-;5712:6;5765:2;5753:9;5744:7;5740:23;5736:32;5733:52;;;5781:1;5778;5771:12;5733:52;5813:9;5807:16;5866:5;5859:13;5852:21;5845:5;5842:32;5832:60;;5888:1;5885;5878:12;6604:445;6854:2;6843:9;6836:21;6893:1;6888:2;6877:9;6873:18;6866:29;-1:-1:-1;;;6926:2:23;6915:9;6911:18;6904:35;6977:3;6970:4;6959:9;6955:20;6948:33;6817:4;6998:45;7038:3;7027:9;7023:19;7015:6;6998:45;:::i;7404:127::-;7465:10;7460:3;7456:20;7453:1;7446:31;7496:4;7493:1;7486:15;7520:4;7517:1;7510:15;7536:168;7576:7;7642:1;7638;7634:6;7630:14;7627:1;7624:21;7619:1;7612:9;7605:17;7601:45;7598:71;;;7649:18;;:::i;:::-;-1:-1:-1;7689:9:23;;7536:168::o;7709:128::-;7749:3;7780:1;7776:6;7773:1;7770:13;7767:39;;;7786:18;;:::i;:::-;-1:-1:-1;7822:9:23;;7709:128::o;7842:127::-;7903:10;7898:3;7894:20;7891:1;7884:31;7934:4;7931:1;7924:15;7958:4;7955:1;7948:15;7974:127;8035:10;8030:3;8026:20;8023:1;8016:31;8066:4;8063:1;8056:15;8090:4;8087:1;8080:15;8106:136;8145:3;8173:5;8163:39;;8182:18;;:::i;:::-;-1:-1:-1;;;8218:18:23;;8106:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testExactInputSingleDAItoBUSD()": "7b0982f8",
    "testExactInputSingleDAItoUSDC()": "1c92c97b",
    "testMakeABUSDSwap()": "59d2a6b5",
    "testMakeAUSDCSwap()": "0c9d72a0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExactInputSingleDAItoBUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExactInputSingleDAItoUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMakeABUSDSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMakeAUSDCSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"testExactInputSingleDAItoBUSD()\":{\"details\":\"Swapping DAI to BUSD using address calls\"},\"testExactInputSingleDAItoUSDC()\":{\"details\":\"Wrote these address calls for Hw20 Swapping DAI for USDC using address calls\"},\"testMakeABUSDSwap()\":{\"details\":\"2 Unit tests for makeASingleSwap for Homework 21\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract makes calls to defined mainnet addresses and tests for 2 exactInputSingle swaps from DAI to USDC and DAI to BUSD\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BootcampHw20.t.sol\":\"UniswapTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/contracts/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/=lib/v3-core/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":v3-core/=lib/v3-core/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b\",\"dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd\",\"dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf0c5c17c4cdfd0de659cf5e58e0e1611b6ee53900d3ab8b07b871d71d0b37bc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21ffda3891e7480d5fdbf7f5e9d539f0ed76204bca69738f8ee006395ef1e23e\",\"dweb:/ipfs/Qmbhbn8zVXrCyvhvoQ5AUSj3usVGqMbMSEHYkNPdbQKBxt\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74\",\"dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf4442ded918d167635adc30ba3c451d45666c89b38e0eec2adaf0857b49a72f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4cb181bd626fe852a36f9b1cf2d79ef0fa9d2bf2cbf0ec86f33f5bf492c0b69\",\"dweb:/ipfs/QmaZKevWdZbjoTB7qtzKjP3dZhiUGymJc4Wb9qkNMewxjB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"src/BootcampHW21.sol\":{\"keccak256\":\"0x9a873521496ad84734f027dc3ffd1c16004067cfd96da42786548f15f837ded1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://265edd0fc2889b65df3493083dc1fbf94e0d1b1cac9c7109f9587b7451f1c56c\",\"dweb:/ipfs/QmVLbWgQmY3mj1mQrvnmP25kQ6opL8jV4ypWDoqweDCwoR\"]},\"src/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x65738ea30b5e97e671ac17e53e08bea37655ae80285fa51a538d1da5d705f88b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c837918e86f38c75428843d7f95077922542763702bee88a55fa6ff3bff1642a\",\"dweb:/ipfs/QmZvJ892bRwBkxdkvji9bBZk1A5A9q4vLEjwoQQerypa4E\"]},\"test/BootcampHw20.t.sol\":{\"keccak256\":\"0xcc0d9f41a16131536d02693526d8c349433f693bc49366cf93fba4ae14fc3f16\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7f96ba5d8e3f48a8cfcd94af43246621fe4d783d4232d0a5241128fb6b001e90\",\"dweb:/ipfs/QmSXMvvw2DR9BFbWcVPBZEe7QJjeenUVBNGWGMcb49TGFa\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExactInputSingleDAItoBUSD"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExactInputSingleDAItoUSDC"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMakeABUSDSwap"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMakeAUSDCSwap"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "testExactInputSingleDAItoBUSD()": {
            "details": "Swapping DAI to BUSD using address calls"
          },
          "testExactInputSingleDAItoUSDC()": {
            "details": "Wrote these address calls for Hw20 Swapping DAI for USDC using address calls"
          },
          "testMakeABUSDSwap()": {
            "details": "2 Unit tests for makeASingleSwap for Homework 21"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=lib/contracts/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@uniswap/=lib/v3-core/",
        ":base64-sol/=lib/base64/",
        ":base64/=lib/base64/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":v3-core/=lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/BootcampHw20.t.sol": "UniswapTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0",
        "urls": [
          "bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b",
          "dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149",
        "urls": [
          "bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd",
          "dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf0c5c17c4cdfd0de659cf5e58e0e1611b6ee53900d3ab8b07b871d71d0b37bc6",
        "urls": [
          "bzz-raw://21ffda3891e7480d5fdbf7f5e9d539f0ed76204bca69738f8ee006395ef1e23e",
          "dweb:/ipfs/Qmbhbn8zVXrCyvhvoQ5AUSj3usVGqMbMSEHYkNPdbQKBxt"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17",
        "urls": [
          "bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74",
          "dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xf4442ded918d167635adc30ba3c451d45666c89b38e0eec2adaf0857b49a72f7",
        "urls": [
          "bzz-raw://b4cb181bd626fe852a36f9b1cf2d79ef0fa9d2bf2cbf0ec86f33f5bf492c0b69",
          "dweb:/ipfs/QmaZKevWdZbjoTB7qtzKjP3dZhiUGymJc4Wb9qkNMewxjB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/BootcampHW21.sol": {
        "keccak256": "0x9a873521496ad84734f027dc3ffd1c16004067cfd96da42786548f15f837ded1",
        "urls": [
          "bzz-raw://265edd0fc2889b65df3493083dc1fbf94e0d1b1cac9c7109f9587b7451f1c56c",
          "dweb:/ipfs/QmVLbWgQmY3mj1mQrvnmP25kQ6opL8jV4ypWDoqweDCwoR"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISwapRouter.sol": {
        "keccak256": "0x65738ea30b5e97e671ac17e53e08bea37655ae80285fa51a538d1da5d705f88b",
        "urls": [
          "bzz-raw://c837918e86f38c75428843d7f95077922542763702bee88a55fa6ff3bff1642a",
          "dweb:/ipfs/QmZvJ892bRwBkxdkvji9bBZk1A5A9q4vLEjwoQQerypa4E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/BootcampHw20.t.sol": {
        "keccak256": "0xcc0d9f41a16131536d02693526d8c349433f693bc49366cf93fba4ae14fc3f16",
        "urls": [
          "bzz-raw://7f96ba5d8e3f48a8cfcd94af43246621fe4d783d4232d0a5241128fb6b001e90",
          "dweb:/ipfs/QmSXMvvw2DR9BFbWcVPBZEe7QJjeenUVBNGWGMcb49TGFa"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/BootcampHw20.t.sol",
    "id": 26434,
    "exportedSymbols": {
      "CommonBase": [
        1818
      ],
      "DSTest": [
        1786
      ],
      "IERC20": [
        24737
      ],
      "ISwapRouter": [
        26131
      ],
      "IUniswapV3Factory": [
        25860
      ],
      "IUniswapV3PoolState": [
        25982
      ],
      "IUniswapV3SwapCallback": [
        25874
      ],
      "InteractWithUniswap": [
        26031
      ],
      "Math": [
        25777
      ],
      "StdAssertions": [
        2644
      ],
      "StdCheats": [
        4757
      ],
      "StdStorage": [
        5662
      ],
      "StdUtils": [
        7525
      ],
      "Strings": [
        24912
      ],
      "Test": [
        7556
      ],
      "TestBase": [
        7545
      ],
      "UniswapTest": [
        26433
      ],
      "Vm": [
        8530
      ],
      "console": [
        16594
      ],
      "console2": [
        24659
      ],
      "stdError": [
        4823
      ],
      "stdJson": [
        5489
      ],
      "stdMath": [
        5631
      ],
      "stdStorage": [
        7096
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3707:22",
    "nodes": [
      {
        "id": 26133,
        "nodeType": "PragmaDirective",
        "src": "39:23:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 26134,
        "nodeType": "ImportDirective",
        "src": "64:28:22",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26434,
        "sourceUnit": 7557,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26135,
        "nodeType": "ImportDirective",
        "src": "93:51:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26434,
        "sourceUnit": 24913,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26136,
        "nodeType": "ImportDirective",
        "src": "145:40:22",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapRouter.sol",
        "file": "src/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26434,
        "sourceUnit": 26132,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26137,
        "nodeType": "ImportDirective",
        "src": "186:30:22",
        "nodes": [],
        "absolutePath": "src/BootcampHW21.sol",
        "file": "src/BootcampHW21.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26434,
        "sourceUnit": 26032,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26138,
        "nodeType": "ImportDirective",
        "src": "217:56:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26434,
        "sourceUnit": 24738,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26139,
        "nodeType": "ImportDirective",
        "src": "274:61:22",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "file": "@uniswap/contracts/interfaces/IUniswapV3Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26434,
        "sourceUnit": 25861,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26433,
        "nodeType": "ContractDefinition",
        "src": "489:3257:22",
        "nodes": [
          {
            "id": 26145,
            "nodeType": "UsingForDirective",
            "src": "524:26:22",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 26143,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24912,
              "src": "530:7:22"
            },
            "typeName": {
              "id": 26144,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "542:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 26148,
            "nodeType": "UsingForDirective",
            "src": "555:26:22",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 26146,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24912,
              "src": "561:7:22"
            },
            "typeName": {
              "id": 26147,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "573:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 26151,
            "nodeType": "VariableDeclaration",
            "src": "587:68:22",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "router",
            "nameLocation": "604:6:22",
            "scope": 26433,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26149,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "587:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
              "id": 26150,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "613:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
            },
            "visibility": "internal"
          },
          {
            "id": 26154,
            "nodeType": "VariableDeclaration",
            "src": "661:65:22",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "dai",
            "nameLocation": "678:3:22",
            "scope": 26433,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26152,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "661:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 26153,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "684:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "internal"
          },
          {
            "id": 26157,
            "nodeType": "VariableDeclaration",
            "src": "732:66:22",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "busd",
            "nameLocation": "749:4:22",
            "scope": 26433,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26155,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "732:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844466435323933443865333437644665353945393065466435356232393536613133343339363364",
              "id": 26156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "756:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xDFd5293D8e347dFe59E90eFd55b2956a1343963d"
            },
            "visibility": "internal"
          },
          {
            "id": 26160,
            "nodeType": "VariableDeclaration",
            "src": "804:66:22",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "usdc",
            "nameLocation": "821:4:22",
            "scope": 26433,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "804:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
              "id": 26159,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "828:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
            },
            "visibility": "internal"
          },
          {
            "id": 26162,
            "nodeType": "VariableDeclaration",
            "src": "877:22:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "UniswapFactory",
            "nameLocation": "885:14:22",
            "scope": 26433,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26161,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "877:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26165,
            "nodeType": "VariableDeclaration",
            "src": "928:22:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "eg",
            "nameLocation": "948:2:22",
            "scope": 26433,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InteractWithUniswap_$26031",
              "typeString": "contract InteractWithUniswap"
            },
            "typeName": {
              "id": 26164,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26163,
                "name": "InteractWithUniswap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26031,
                "src": "928:19:22"
              },
              "referencedDeclaration": 26031,
              "src": "928:19:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InteractWithUniswap_$26031",
                "typeString": "contract InteractWithUniswap"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26176,
            "nodeType": "FunctionDefinition",
            "src": "1048:71:22",
            "nodes": [],
            "body": {
              "id": 26175,
              "nodeType": "Block",
              "src": "1072:47:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26168,
                      "name": "eg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26165,
                      "src": "1082:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InteractWithUniswap_$26031",
                        "typeString": "contract InteractWithUniswap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1087:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_InteractWithUniswap_$26031_$",
                          "typeString": "function () returns (contract InteractWithUniswap)"
                        },
                        "typeName": {
                          "id": 26170,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 26169,
                            "name": "InteractWithUniswap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 26031,
                            "src": "1091:19:22"
                          },
                          "referencedDeclaration": 26031,
                          "src": "1091:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_InteractWithUniswap_$26031",
                            "typeString": "contract InteractWithUniswap"
                          }
                        }
                      },
                      "id": 26172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1087:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InteractWithUniswap_$26031",
                        "typeString": "contract InteractWithUniswap"
                      }
                    },
                    "src": "1082:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InteractWithUniswap_$26031",
                      "typeString": "contract InteractWithUniswap"
                    }
                  },
                  "id": 26174,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:30:22"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1057:5:22",
            "parameters": {
              "id": 26166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1062:2:22"
            },
            "returnParameters": {
              "id": 26167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1072:0:22"
            },
            "scope": 26433,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26238,
            "nodeType": "FunctionDefinition",
            "src": "1187:576:22",
            "nodes": [],
            "body": {
              "id": 26237,
              "nodeType": "Block",
              "src": "1223:540:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    26182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26182,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "1393:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26237,
                      "src": "1385:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 26181,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1385:7:22",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip",
                  "id": 26191,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26187,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26154,
                        "src": "1442:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26188,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26157,
                        "src": "1447:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 26189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1453:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 26184,
                            "name": "UniswapFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26162,
                            "src": "1418:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26183,
                          "name": "IUniswapV3Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25860,
                          "src": "1400:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$25860_$",
                            "typeString": "type(contract IUniswapV3Factory)"
                          }
                        },
                        "id": 26185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1400:33:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$25860",
                          "typeString": "contract IUniswapV3Factory"
                        }
                      },
                      "id": 26186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25833,
                      "src": "1400:41:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                        "typeString": "function (address,address,uint24) view external returns (address)"
                      }
                    },
                    "id": 26190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1385:73:22"
                },
                {
                  "assignments": [
                    26193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26193,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1477:6:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26237,
                      "src": "1469:14:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1469:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26202,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26196,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26154,
                        "src": "1505:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26197,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26157,
                        "src": "1510:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26198,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26182,
                        "src": "1516:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26199,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26151,
                        "src": "1522:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 26200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1530:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 26194,
                        "name": "eg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26165,
                        "src": "1486:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InteractWithUniswap_$26031",
                          "typeString": "contract InteractWithUniswap"
                        }
                      },
                      "id": 26195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeASingleSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26030,
                      "src": "1486:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 26201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1486:48:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1469:65:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26204,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26193,
                          "src": "1555:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 26205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1564:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1555:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26203,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "1544:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 26207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1544:22:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26208,
                  "nodeType": "ExpressionStatement",
                  "src": "1544:22:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "537761707065643a20",
                            "id": 26212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1608:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            "value": "Swapped: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 26213,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26193,
                                "src": "1621:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 26214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24815,
                              "src": "1621:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 26215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1621:20:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 26210,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1591:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1591:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1591:51:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26209,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1581:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:62:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26218,
                  "nodeType": "EmitStatement",
                  "src": "1576:67:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "425553442042616c616e63653a20",
                            "id": 26222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1685:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0ef62b24d079e79cd2d1cf3f058dce5defca186937fa9868302f9bbc150bf6ee",
                              "typeString": "literal_string \"BUSD Balance: \""
                            },
                            "value": "BUSD Balance: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 26229,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1734:4:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniswapTest_$26433",
                                          "typeString": "contract UniswapTest"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniswapTest_$26433",
                                          "typeString": "contract UniswapTest"
                                        }
                                      ],
                                      "id": 26228,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1726:7:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 26227,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1726:7:22",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 26230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1726:13:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 26224,
                                        "name": "busd",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26157,
                                        "src": "1710:4:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 26223,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24737,
                                      "src": "1703:6:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$24737_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 26225,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1703:12:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$24737",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 26226,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24694,
                                  "src": "1703:22:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 26231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1703:37:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 26232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24815,
                              "src": "1703:49:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 26233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1703:51:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_0ef62b24d079e79cd2d1cf3f058dce5defca186937fa9868302f9bbc150bf6ee",
                              "typeString": "literal_string \"BUSD Balance: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 26220,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1668:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1668:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1668:87:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26219,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1658:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1658:98:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26236,
                  "nodeType": "EmitStatement",
                  "src": "1653:103:22"
                }
              ]
            },
            "documentation": {
              "id": 26177,
              "nodeType": "StructuredDocumentation",
              "src": "1125:57:22",
              "text": "@dev 2 Unit tests for makeASingleSwap for Homework 21"
            },
            "functionSelector": "59d2a6b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMakeABUSDSwap",
            "nameLocation": "1196:17:22",
            "parameters": {
              "id": 26178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1213:2:22"
            },
            "returnParameters": {
              "id": 26179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1223:0:22"
            },
            "scope": 26433,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26298,
            "nodeType": "FunctionDefinition",
            "src": "1769:424:22",
            "nodes": [],
            "body": {
              "id": 26297,
              "nodeType": "Block",
              "src": "1805:388:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    26242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26242,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "1823:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26297,
                      "src": "1815:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 26241,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1815:7:22",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26251,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26247,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26154,
                        "src": "1872:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26248,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26160,
                        "src": "1877:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 26249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1883:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 26244,
                            "name": "UniswapFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26162,
                            "src": "1848:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26243,
                          "name": "IUniswapV3Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25860,
                          "src": "1830:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$25860_$",
                            "typeString": "type(contract IUniswapV3Factory)"
                          }
                        },
                        "id": 26245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1830:33:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$25860",
                          "typeString": "contract IUniswapV3Factory"
                        }
                      },
                      "id": 26246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25833,
                      "src": "1830:41:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                        "typeString": "function (address,address,uint24) view external returns (address)"
                      }
                    },
                    "id": 26250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1815:73:22"
                },
                {
                  "assignments": [
                    26253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26253,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1907:6:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26297,
                      "src": "1899:14:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26252,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1899:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26262,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26256,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26154,
                        "src": "1935:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26257,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26160,
                        "src": "1940:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26258,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26242,
                        "src": "1946:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26259,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26151,
                        "src": "1952:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 26260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1960:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 26254,
                        "name": "eg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26165,
                        "src": "1916:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InteractWithUniswap_$26031",
                          "typeString": "contract InteractWithUniswap"
                        }
                      },
                      "id": 26255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeASingleSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26030,
                      "src": "1916:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 26261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1916:48:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1899:65:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26264,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26253,
                          "src": "1985:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 26265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1994:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1985:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26263,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "1974:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 26267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1974:22:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26268,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:22:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "537761707065643a20",
                            "id": 26272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2038:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            "value": "Swapped: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 26273,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26253,
                                "src": "2051:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 26274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24815,
                              "src": "2051:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 26275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2051:20:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 26270,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2021:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2021:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2021:51:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26269,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2011:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2011:62:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26278,
                  "nodeType": "EmitStatement",
                  "src": "2006:67:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "555344432042616c616e63653a20",
                            "id": 26282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2115:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ba25de04d244f3e3b2fe19081c1648b2196f33b8baf206b2cac6419b6dbe7d4",
                              "typeString": "literal_string \"USDC Balance: \""
                            },
                            "value": "USDC Balance: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 26289,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "2164:4:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniswapTest_$26433",
                                          "typeString": "contract UniswapTest"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniswapTest_$26433",
                                          "typeString": "contract UniswapTest"
                                        }
                                      ],
                                      "id": 26288,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2156:7:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 26287,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2156:7:22",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 26290,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2156:13:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 26284,
                                        "name": "usdc",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26160,
                                        "src": "2140:4:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 26283,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24737,
                                      "src": "2133:6:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$24737_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 26285,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2133:12:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$24737",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 26286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24694,
                                  "src": "2133:22:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 26291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2133:37:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 26292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24815,
                              "src": "2133:49:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 26293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2133:51:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ba25de04d244f3e3b2fe19081c1648b2196f33b8baf206b2cac6419b6dbe7d4",
                              "typeString": "literal_string \"USDC Balance: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 26280,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2098:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2098:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2098:87:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26279,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2088:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:98:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26296,
                  "nodeType": "EmitStatement",
                  "src": "2083:103:22"
                }
              ]
            },
            "functionSelector": "0c9d72a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMakeAUSDCSwap",
            "nameLocation": "1778:17:22",
            "parameters": {
              "id": 26239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1795:2:22"
            },
            "returnParameters": {
              "id": 26240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1805:0:22"
            },
            "scope": 26433,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26365,
            "nodeType": "FunctionDefinition",
            "src": "2315:686:22",
            "nodes": [],
            "body": {
              "id": 26364,
              "nodeType": "Block",
              "src": "2363:638:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26303,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26157,
                        "src": "2379:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26302,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4535,
                        4556,
                        4580,
                        4604
                      ],
                      "referencedDeclaration": 4535,
                      "src": "2369:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2369:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26305,
                  "nodeType": "ExpressionStatement",
                  "src": "2369:15:22"
                },
                {
                  "assignments": [
                    26307,
                    26309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26307,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "2396:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26364,
                      "src": "2391:9:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 26306,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2391:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 26309,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2415:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26364,
                      "src": "2402:17:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26308,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2402:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26329,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6578616374496e70757453696e676c65284578616374496e70757453696e676c65506172616d7329",
                            "id": 26314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2468:42:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_94b7ad44d74d57dcd93c08cbe95801d27b70d685104a25c3f9704aaac2570ea4",
                              "typeString": "literal_string \"exactInputSingle(ExactInputSingleParams)\""
                            },
                            "value": "exactInputSingle(ExactInputSingleParams)"
                          },
                          {
                            "arguments": [
                              {
                                "id": 26317,
                                "name": "dai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26154,
                                "src": "2569:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 26318,
                                "name": "usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26160,
                                "src": "2586:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "33303030",
                                "id": 26319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2604:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                "value": "3000"
                              },
                              {
                                "expression": {
                                  "id": 26320,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2622:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 26321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2622:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "3939393939393939",
                                "id": 26322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2646:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_99999999_by_1",
                                  "typeString": "int_const 99999999"
                                },
                                "value": "99999999"
                              },
                              {
                                "hexValue": "313030",
                                "id": 26323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2668:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              {
                                "hexValue": "30",
                                "id": 26324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2685:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 26325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2700:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_99999999_by_1",
                                  "typeString": "int_const 99999999"
                                },
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 26315,
                                "name": "ISwapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26131,
                                "src": "2521:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$26131_$",
                                  "typeString": "type(contract ISwapRouter)"
                                }
                              },
                              "id": 26316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ExactInputSingleParams",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26055,
                              "src": "2521:34:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$26055_storage_ptr_$",
                                "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                              }
                            },
                            "id": 26326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2521:190:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$26055_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_94b7ad44d74d57dcd93c08cbe95801d27b70d685104a25c3f9704aaac2570ea4",
                              "typeString": "literal_string \"exactInputSingle(ExactInputSingleParams)\""
                            },
                            {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$26055_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          ],
                          "expression": {
                            "id": 26312,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2435:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "2435:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 26327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2435:282:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 26310,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26151,
                        "src": "2423:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 26311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "2423:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 26328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2423:295:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2390:328:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26331,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26307,
                        "src": "2735:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465722063616c6c206661696c6564",
                        "id": 26332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2741:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        },
                        "value": "Router call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        }
                      ],
                      "id": 26330,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "2724:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26334,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:38:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26336,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26309,
                        "src": "2783:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26335,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2773:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2773:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26338,
                  "nodeType": "EmitStatement",
                  "src": "2768:20:22"
                },
                {
                  "documentation": "@dev Checking USDC balance post swap",
                  "expression": {
                    "id": 26353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 26339,
                          "name": "temp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26307,
                          "src": "2841:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 26340,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26309,
                          "src": "2847:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 26341,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2840:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 26346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2889:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 26349,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2919:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapTest_$26433",
                                    "typeString": "contract UniswapTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapTest_$26433",
                                    "typeString": "contract UniswapTest"
                                  }
                                ],
                                "id": 26348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2911:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 26347,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2911:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 26350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2911:13:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 26344,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2865:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 26345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "2865:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 26351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2865:60:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 26342,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26160,
                          "src": "2855:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 26343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2855:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 26352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2855:71:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "2840:86:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26354,
                  "nodeType": "ExpressionStatement",
                  "src": "2840:86:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26356,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26307,
                        "src": "2943:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "555344432063616c6c206661696c6564",
                        "id": 26357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2949:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcb10c0b735db8c592069a8f3844a3f037d90797cf4fadaf219d497a74e4a814",
                          "typeString": "literal_string \"USDC call failed\""
                        },
                        "value": "USDC call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcb10c0b735db8c592069a8f3844a3f037d90797cf4fadaf219d497a74e4a814",
                          "typeString": "literal_string \"USDC call failed\""
                        }
                      ],
                      "id": 26355,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "2932:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2932:36:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26359,
                  "nodeType": "ExpressionStatement",
                  "src": "2932:36:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26361,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26309,
                        "src": "2989:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26360,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2979:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2979:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26363,
                  "nodeType": "EmitStatement",
                  "src": "2974:20:22"
                }
              ]
            },
            "documentation": {
              "id": 26299,
              "nodeType": "StructuredDocumentation",
              "src": "2199:111:22",
              "text": "@dev Wrote these address calls for Hw20\nSwapping DAI for USDC using address calls"
            },
            "functionSelector": "1c92c97b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExactInputSingleDAItoUSDC",
            "nameLocation": "2324:29:22",
            "parameters": {
              "id": 26300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2353:2:22"
            },
            "returnParameters": {
              "id": 26301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2363:0:22"
            },
            "scope": 26433,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26432,
            "nodeType": "FunctionDefinition",
            "src": "3061:683:22",
            "nodes": [],
            "body": {
              "id": 26431,
              "nodeType": "Block",
              "src": "3109:635:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26370,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26157,
                        "src": "3125:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26369,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4535,
                        4556,
                        4580,
                        4604
                      ],
                      "referencedDeclaration": 4535,
                      "src": "3115:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3115:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26372,
                  "nodeType": "ExpressionStatement",
                  "src": "3115:15:22"
                },
                {
                  "assignments": [
                    26374,
                    26376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26374,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "3142:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26431,
                      "src": "3137:9:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 26373,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3137:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 26376,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3161:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26431,
                      "src": "3148:17:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26375,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3148:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26396,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6578616374496e70757453696e676c65284578616374496e70757453696e676c65506172616d7329",
                            "id": 26381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3214:42:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_94b7ad44d74d57dcd93c08cbe95801d27b70d685104a25c3f9704aaac2570ea4",
                              "typeString": "literal_string \"exactInputSingle(ExactInputSingleParams)\""
                            },
                            "value": "exactInputSingle(ExactInputSingleParams)"
                          },
                          {
                            "arguments": [
                              {
                                "id": 26384,
                                "name": "dai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26154,
                                "src": "3315:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 26385,
                                "name": "busd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26157,
                                "src": "3332:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "33303030",
                                "id": 26386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3350:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                "value": "3000"
                              },
                              {
                                "expression": {
                                  "id": 26387,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3368:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 26388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3368:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "3939393939393939",
                                "id": 26389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3392:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_99999999_by_1",
                                  "typeString": "int_const 99999999"
                                },
                                "value": "99999999"
                              },
                              {
                                "hexValue": "313030",
                                "id": 26390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3414:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              {
                                "hexValue": "30",
                                "id": 26391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3431:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 26392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3446:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_99999999_by_1",
                                  "typeString": "int_const 99999999"
                                },
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 26382,
                                "name": "ISwapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26131,
                                "src": "3267:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$26131_$",
                                  "typeString": "type(contract ISwapRouter)"
                                }
                              },
                              "id": 26383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ExactInputSingleParams",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26055,
                              "src": "3267:34:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$26055_storage_ptr_$",
                                "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                              }
                            },
                            "id": 26393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3267:190:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$26055_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_94b7ad44d74d57dcd93c08cbe95801d27b70d685104a25c3f9704aaac2570ea4",
                              "typeString": "literal_string \"exactInputSingle(ExactInputSingleParams)\""
                            },
                            {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$26055_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          ],
                          "expression": {
                            "id": 26379,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3181:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "3181:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 26394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3181:282:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 26377,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26151,
                        "src": "3169:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 26378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "3169:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 26395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3169:295:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3136:328:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26398,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26374,
                        "src": "3481:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465722063616c6c206661696c6564",
                        "id": 26399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3487:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        },
                        "value": "Router call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        }
                      ],
                      "id": 26397,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "3470:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3470:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26401,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:38:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26403,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26376,
                        "src": "3529:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26402,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3519:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3519:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26405,
                  "nodeType": "EmitStatement",
                  "src": "3514:20:22"
                },
                {
                  "documentation": "@dev Checking DAI balance post swap",
                  "expression": {
                    "id": 26420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 26406,
                          "name": "temp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26374,
                          "src": "3586:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 26407,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26376,
                          "src": "3592:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 26408,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3585:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 26413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3633:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 26416,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3663:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapTest_$26433",
                                    "typeString": "contract UniswapTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapTest_$26433",
                                    "typeString": "contract UniswapTest"
                                  }
                                ],
                                "id": 26415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3655:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 26414,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3655:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 26417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3655:13:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 26411,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3609:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 26412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "3609:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 26418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3609:60:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 26409,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26154,
                          "src": "3600:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 26410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3600:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 26419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3600:70:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "3585:85:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26421,
                  "nodeType": "ExpressionStatement",
                  "src": "3585:85:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26423,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26374,
                        "src": "3687:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4441492063616c6c206661696c6564",
                        "id": 26424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3693:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c57fc6f596d8ddac4cfe230803c1f31f4c9530280f40f3e0bbec208fb29c3308",
                          "typeString": "literal_string \"DAI call failed\""
                        },
                        "value": "DAI call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c57fc6f596d8ddac4cfe230803c1f31f4c9530280f40f3e0bbec208fb29c3308",
                          "typeString": "literal_string \"DAI call failed\""
                        }
                      ],
                      "id": 26422,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "3676:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3676:35:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26426,
                  "nodeType": "ExpressionStatement",
                  "src": "3676:35:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26428,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26376,
                        "src": "3732:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26427,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3722:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3722:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26430,
                  "nodeType": "EmitStatement",
                  "src": "3717:20:22"
                }
              ]
            },
            "documentation": {
              "id": 26366,
              "nodeType": "StructuredDocumentation",
              "src": "3007:49:22",
              "text": "@dev Swapping DAI to BUSD using address calls"
            },
            "functionSelector": "7b0982f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExactInputSingleDAItoBUSD",
            "nameLocation": "3070:29:22",
            "parameters": {
              "id": 26367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3099:2:22"
            },
            "returnParameters": {
              "id": 26368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3109:0:22"
            },
            "scope": 26433,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26141,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7556,
              "src": "513:4:22"
            },
            "id": 26142,
            "nodeType": "InheritanceSpecifier",
            "src": "513:4:22"
          }
        ],
        "canonicalName": "UniswapTest",
        "contractDependencies": [
          26031
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 26140,
          "nodeType": "StructuredDocumentation",
          "src": "337:150:22",
          "text": "@notice This contract makes calls to defined mainnet addresses and tests\nfor 2 exactInputSingle swaps from DAI to USDC and DAI to BUSD"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          26433,
          7556,
          7525,
          4757,
          4368,
          2644,
          1786,
          7545,
          1818
        ],
        "name": "UniswapTest",
        "nameLocation": "498:11:22",
        "scope": 26434,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}