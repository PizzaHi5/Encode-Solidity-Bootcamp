{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxUint256",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExactInputSingleDAItoBUSD",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExactInputSingleDAItoUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMakeABusdSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMakeAUSDCSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526007805460ff191660011790556200001b62000032565b6008553480156200002b57600080fd5b506200124a565b6040805160a08101825260056060820181815264105b9d9a5b60da1b60808401528252617a6960208084019190915283518085018552601581527f687474703a2f2f3132372e302e302e313a3835343500000000000000000000009181019190915282840152915164185b9d9a5b60da1b81526000926009910190815260405190819003602001902081518190620000cb908262000ef8565b506020820151600182015560408201516002820190620000ec908262000ef8565b50506040805160a0810182526007606082018181526612185c991a185d60ca1b60808401528252617a6960208084019190915283518085018552601581527f687474703a2f2f3132372e302e302e313a38353435000000000000000000000091810191909152828401529151661a185c991a185d60ca1b815290925060099101908152604051908190036020019020815181906200018b908262000ef8565b506020820151600182015560408201516002820190620001ac908262000ef8565b5090505060405180606001604052806040518060400160405280600781526020016613585a5b9b995d60ca1b8152508152602001600181526020016040518060600160405280603d8152602001620027d4603d91399052604051661b585a5b9b995d60ca1b81526009906007019081526040519081900360200190208151819062000238908262000ef8565b50602082015160018201556040820151600282019062000259908262000ef8565b50905050604051806060016040528060405180604001604052806006815260200165476f65726c6960d01b8152508152602001600581526020016040518060600160405280603c815260200162002811603c9139905260405165676f65726c6960d01b815260099060060190815260405190819003602001902081518190620002e3908262000ef8565b50602082015160018201556040820151600282019062000304908262000ef8565b50506040805160a081018252600760608201818152665365706f6c696160c81b6080840152825262aa36a760208084019190915283518085018552601781527f68747470733a2f2f7270632e7365706f6c69612e64657600000000000000000091810191909152828401529151667365706f6c696160c81b81529092506009910190815260405190819003602001902081518190620003a4908262000ef8565b506020820151600182015560408201516002820190620003c5908262000ef8565b50506040805160a081018252600860608201818152674f7074696d69736d60c01b60808401528252600a60208084019190915283518085018552601b81527f68747470733a2f2f6d61696e6e65742e6f7074696d69736d2e696f000000000091810191909152828401529151676f7074696d69736d60c01b8152909250600991019081526040519081900360200190208151819062000465908262000ef8565b50602082015160018201556040820151600282019062000486908262000ef8565b50506040805160a081018252600f606082018181526e4f7074696d69736d20476f65726c6960881b608084015282526101a460208084019190915283518085018552601a81527f68747470733a2f2f676f65726c692e6f7074696d69736d2e696f000000000000918101919091528284015291516e6f7074696d69736d5f676f65726c6960881b8152909250600991019081526040519081900360200190208151819062000535908262000ef8565b50602082015160018201556040820151600282019062000556908262000ef8565b50506040805160a081018252600c606082018181526b417262697472756d204f6e6560a01b6080840152825261a4b160208084019190915283518085018552601c81527f68747470733a2f2f617262312e617262697472756d2e696f2f72706300000000918101919091528284015291516b617262697472756d5f6f6e6560a01b81529092506009910190815260405190819003602001902081518190620005ff908262000ef8565b50602082015160018201556040820151600282019062000620908262000ef8565b5090505060405180606001604052806040518060400160405280601381526020017f417262697472756d204f6e6520476f65726c6900000000000000000000000000815250815260200162066eed81526020016040518060600160405280602581526020016200284d6025913990526040517f617262697472756d5f6f6e655f676f65726c6900000000000000000000000000815260099060130190815260405190819003602001902081518190620006da908262000ef8565b506020820151600182015560408201516002820190620006fb908262000ef8565b50506040805160a081018252600d606082018181526c417262697472756d204e6f766160981b6080840152825261a4ba60208084019190915283518085018552601c81527f68747470733a2f2f6e6f76612e617262697472756d2e696f2f72706300000000918101919091528284015291516c617262697472756d5f6e6f766160981b81529092506009910190815260405190819003602001902081518190620007a6908262000ef8565b506020820151600182015560408201516002820190620007c7908262000ef8565b50506040805160a081018252600760608201818152662837b63cb3b7b760c91b60808401528252608960208084019190915283518085018552601781527f68747470733a2f2f706f6c79676f6e2d7270632e636f6d00000000000000000091810191909152828401529151663837b63cb3b7b760c91b8152909250600991019081526040519081900360200190208151819062000865908262000ef8565b50602082015160018201556040820151600282019062000886908262000ef8565b50506040805160a081018252600e606082018181526d506f6c79676f6e204d756d62616960901b608084015282526201388160208084019190915283518085018552601e81527f68747470733a2f2f7270632d6d756d6261692e6d617469632e746f6461790000918101919091528284015291516d706f6c79676f6e5f6d756d62616960901b8152909250600991019081526040519081900360200190208151819062000934908262000ef8565b50602082015160018201556040820151600282019062000955908262000ef8565b509050506040518060600160405280604051806040016040528060098152602001684176616c616e63686560b81b815250815260200161a86a8152602001604051806060016040528060258152602001620027af602591399052604051686176616c616e63686560b81b8152600990810190815260405190819003602001902081518190620009e5908262000ef8565b50602082015160018201556040820151600282019062000a06908262000ef8565b5090505060405180606001604052806040518060400160405280600e81526020016d4176616c616e6368652046756a6960901b815250815260200161a86981526020016040518060600160405280602a815260200162002872602a913990526040516d6176616c616e6368655f66756a6960901b8152600990600e019081526040519081900360200190208151819062000aa1908262000ef8565b50602082015160018201556040820151600282019062000ac2908262000ef8565b5090505060405180606001604052806040518060400160405280600f81526020016e2127211029b6b0b93a1021b430b4b760891b8152508152602001603881526020016040518060600160405280602181526020016200289c6021913990526040516e3137312fb9b6b0b93a2fb1b430b4b760891b8152600990600f019081526040519081900360200190208151819062000b5e908262000ef8565b50602082015160018201556040820151600282019062000b7f908262000ef8565b5090505060405180606001604052806040518060400160405280601781526020017f424e4220536d61727420436861696e20546573746e65740000000000000000008152508152602001606181526020016040518060600160405280602e815260200162002781602e913990526040517f626e625f736d6172745f636861696e5f746573746e657400000000000000000081526009906017019081526040519081900360200190208151819062000c37908262000ef8565b50602082015160018201556040820151600282019062000c58908262000ef8565b50506040805160a081018252600c606082018181526b23b737b9b4b99021b430b4b760a11b60808401528252606460208084019190915283518085018552601b81527f68747470733a2f2f7270632e676e6f736973636861696e2e636f6d0000000000918101919091528284015291516b33b737b9b4b9afb1b430b4b760a11b8152909250600991019081526040519081900360200190208151819062000d00908262000ef8565b50602082015160018201556040820151600282019062000d21908262000ef8565b5090505060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316639d2ad72a6040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000d89573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000db39190810190620010bc565b905060005b815181101562000e4a5781818151811062000dd75762000dd7620011ee565b602002602001015160200151600983838151811062000dfa5762000dfa620011ee565b60200260200101516000015160405162000e15919062001204565b9081526020016040518091039020600201908162000e34919062000ef8565b508062000e418162001222565b91505062000db8565b50600091505090565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168062000e7e57607f821691505b60208210810362000e9f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000ef357600081815260208120601f850160051c8101602086101562000ece5750805b601f850160051c820191505b8181101562000eef5782815560010162000eda565b5050505b505050565b81516001600160401b0381111562000f145762000f1462000e53565b62000f2c8162000f25845462000e69565b8462000ea5565b602080601f83116001811462000f64576000841562000f4b5750858301515b600019600386901b1c1916600185901b17855562000eef565b600085815260208120601f198616915b8281101562000f955788860151825594840194600190910190840162000f74565b508582101562000fb45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604080519081016001600160401b038111828210171562000fe95762000fe962000e53565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200101a576200101a62000e53565b604052919050565b60005b838110156200103f57818101518382015260200162001025565b50506000910152565b600082601f8301126200105a57600080fd5b81516001600160401b0381111562001076576200107662000e53565b6200108b601f8201601f191660200162000fef565b818152846020838601011115620010a157600080fd5b620010b482602083016020870162001022565b949350505050565b60006020808385031215620010d057600080fd5b82516001600160401b0380821115620010e857600080fd5b818501915085601f830112620010fd57600080fd5b81518181111562001112576200111262000e53565b8060051b6200112385820162000fef565b91825283810185019185810190898411156200113e57600080fd5b86860192505b83831015620011e1578251858111156200115e5760008081fd5b86016040818c03601f1901811315620011775760008081fd5b6200118162000fc4565b8983015188811115620011945760008081fd5b620011a48e8c8387010162001048565b825250908201519087821115620011bb5760008081fd5b620011cb8d8b8486010162001048565b818b015284525050918601919086019062001144565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600082516200121881846020870162001022565b9190910192915050565b6000600182016200124357634e487b7160e01b600052601160045260246000fd5b5060010190565b611527806200125a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637b0982f81161005b5780637b0982f8146100af578063ba414fa6146100b7578063d3c60c7a146100d4578063fa7626d4146100e457600080fd5b80630a9254e41461008d5780630c9d72a0146100975780631c92c97b1461009f5780632ec204cc146100a7575b600080fd5b6100956100f1565b005b610095610159565b610095610333565b61009561058e565b6100956106fe565b6100bf61093b565b60405190151581526020015b60405180910390f35b60405160001981526020016100cb565b6007546100bf9060ff1681565b6040516100fd90610f49565b604051809103906000f080158015610119573d6000803e3d6000fd5b50601180546001600160a01b0319166001600160a01b039290921691909117905561015773dfd5293d8e347dfe59e90efd55b2956a1343963d610a68565b565b601154604051635655761d60e11b8152610bb8916000916001600160a01b039091169063acaaec3a906101d590736b175474e89094c44da98b954eedeac495271d0f90734fabb145d64652a948d72533023f6e7a623c7c539073e592427a0aece92de3edee1f18e0157c0586156490600a908990600401610f56565b6020604051808303816000875af11580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102189190610f8e565b905061022660008211610b4f565b6000805160206114d283398151915261023e82610bc6565b60405160200161024e9190610fcb565b60408051601f198184030181529082905261026891611028565b60405180910390a16040516370a0823160e01b81523060048201526000805160206114d2833981519152906102fd9073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48906370a08231906024015b602060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610f8e565b610bc6565b60405160200161030d919061103b565b60408051601f198184030181529082905261032791611028565b60405180910390a15050565b6040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486020820152610bb8818301523360608201526000196080820152600a60a0820152600060c0820181905260e082018190529151829173e592427a0aece92de3edee1f18e0157c058615649163414bf389916103c791602401611071565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161040091906110da565b6000604051808303816000865af19150503d806000811461043d576040519150601f19603f3d011682016040523d82523d6000602084013e610442565b606091505b509150915061047b8260405180604001604052806012815260200171149bdd5d195c8818d85b1b0819985a5b195960721b815250610be3565b6000805160206114d2833981519152816040516104989190611028565b60405180910390a160405130602482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb489060440160408051601f198184030181529181526020820180516001600160e01b03166370a0823160e01b179052516104f791906110da565b6000604051808303816000865af19150503d8060008114610534576040519150601f19603f3d011682016040523d82523d6000602084013e610539565b606091505b5060408051808201909152601081526f1554d110c818d85b1b0819985a5b195960821b60208201529193509150610571908390610be3565b6000805160206114d2833981519152816040516103279190611028565b601154604051635655761d60e11b815261012c916000916001600160a01b039091169063acaaec3a9061060a90736b175474e89094c44da98b954eedeac495271d0f90734fabb145d64652a948d72533023f6e7a623c7c539073e592427a0aece92de3edee1f18e0157c0586156490600a908990600401610f56565b6020604051808303816000875af1158015610629573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064d9190610f8e565b90506106596001610b4f565b6000805160206114d283398151915261067182610bc6565b6040516020016106819190610fcb565b60408051601f198184030181529082905261069b91611028565b60405180910390a16040516370a0823160e01b81523060048201526000805160206114d2833981519152906106ee9073dfd5293d8e347dfe59e90efd55b2956a1343963d906370a08231906024016102b7565b60405160200161030d91906110f6565b6040805161010081018252736b175474e89094c44da98b954eedeac495271d0f8152734fabb145d64652a948d72533023f6e7a623c7c53602082015261012c818301523360608201526000196080820152600a60a0820152600060c0820181905260e082018190529151829173e592427a0aece92de3edee1f18e0157c058615649163414bf3899161079291602401611071565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516107cb91906110da565b6000604051808303816000865af19150503d8060008114610808576040519150601f19603f3d011682016040523d82523d6000602084013e61080d565b606091505b50915091506108468260405180604001604052806012815260200171149bdd5d195c8818d85b1b0819985a5b195960721b815250610be3565b6000805160206114d2833981519152816040516108639190611028565b60405180910390a1604051306024820152736b175474e89094c44da98b954eedeac495271d0f9060440160408051601f198184030181529181526020820180516001600160e01b03166370a0823160e01b179052516108c291906110da565b6000604051808303816000865af19150503d80600081146108ff576040519150601f19603f3d011682016040523d82523d6000602084013e610904565b606091505b5060408051808201909152600f81526e1110524818d85b1b0819985a5b1959608a1b60208201529193509150610571908390610be3565b600754600090610100900460ff161561095d5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610a635760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916109eb917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161112f565b60408051601f1981840301815290829052610a05916110da565b6000604051808303816000865af19150503d8060008114610a42576040519150601f19603f3d011682016040523d82523d6000602084013e610a47565b606091505b5091505080806020019051810190610a5f9190611160565b9150505b919050565b60405163c88a5e6d60e01b81526001600160a01b0382166004820152600160801b6024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610ac757600080fd5b505af1158015610adb573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b5050505050565b80610bc3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610bb39060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1610bc3610c2c565b50565b6060610bdd82610bd584610d38565b600101610da2565b92915050565b81610c28577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610c179190611182565b60405180910390a1610c2882610b4f565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610d275760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610cc6929160200161112f565b60408051601f1981840301815290829052610ce0916110da565b6000604051808303816000865af19150503d8060008114610d1d576040519150601f19603f3d011682016040523d82523d6000602084013e610d22565b606091505b505050505b6007805461ff001916610100179055565b600080608083901c15610d505760809290921c916010015b604083901c15610d655760409290921c916008015b602083901c15610d7a5760209290921c916004015b601083901c15610d8f5760109290921c916002015b600883901c15610bdd5760010192915050565b60606000610db18360026111c7565b610dbc9060026111de565b67ffffffffffffffff811115610dd457610dd46111f1565b6040519080825280601f01601f191660200182016040528015610dfe576020820181803683370190505b509050600360fc1b81600081518110610e1957610e19611207565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e4857610e48611207565b60200101906001600160f81b031916908160001a9053506000610e6c8460026111c7565b610e779060016111de565b90505b6001811115610eef576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610eab57610eab611207565b1a60f81b828281518110610ec157610ec1611207565b60200101906001600160f81b031916908160001a90535060049490941c93610ee88161121d565b9050610e7a565b508315610f425760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b61029d8061123583390190565b6001600160a01b0395861681529385166020850152919093166040830152606082019290925262ffffff909116608082015260a00190565b600060208284031215610fa057600080fd5b5051919050565b60005b83811015610fc2578181015183820152602001610faa565b50506000910152565b68029bbb0b83832b21d160bd1b815260008251610fef816009850160208701610fa7565b9190910160090192915050565b60008151808452611014816020860160208601610fa7565b601f01601f19169290920160200192915050565b602081526000610f426020830184610ffc565b6d02aa9a221902130b630b731b29d160951b81526000825161106481600e850160208701610fa7565b91909101600e0192915050565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b600082516110ec818460208701610fa7565b9190910192915050565b7003134b730b731b2902130b630b731b29d1607d1b815260008251611122816011850160208701610fa7565b9190910160110192915050565b6001600160e01b0319831681528151600090611152816004850160208701610fa7565b919091016004019392505050565b60006020828403121561117257600080fd5b81518015158114610f4257600080fd5b60408152600560408201526422b93937b960d91b6060820152608060208201526000610f426080830184610ffc565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610bdd57610bdd6111b1565b80820180821115610bdd57610bdd6111b1565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161122c5761122c6111b1565b50600019019056fe608060405234801561001057600080fd5b5061027d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063acaaec3a1461003b578063d3c60c7a14610060575b600080fd5b61004e6100493660046101c4565b610068565b60405190815260200160405180910390f35b60001961004e565b6000836001600160a01b031663414bf389604051806101000160405280896001600160a01b03168152602001886001600160a01b031681526020018562ffffff168152602001336001600160a01b031681526020016100c660001990565b8152602080820188905260006040808401829052606093840191909152805160e086811b6001600160e01b031916825285516001600160a01b03908116600484015293860151841660248301529185015162ffffff16604482015292840151821660648401526080840151608484015260a084015160a484015260c084015160c4840152929092015190911660e4820152610104016020604051808303816000875af115801561017a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019e919061022e565b9695505050505050565b80356001600160a01b03811681146101bf57600080fd5b919050565b600080600080600060a086880312156101dc57600080fd5b6101e5866101a8565b94506101f3602087016101a8565b9350610201604087016101a8565b925060608601359150608086013562ffffff8116811461022057600080fd5b809150509295509295909350565b60006020828403121561024057600080fd5b505191905056fea26469706673582212202d4e1f45d001a3062220bcf9120f40a141bc3dc170edc5fe40f9a477d11e562164736f6c6343000811003323b62ad0584d24a75f0bf3560391ef5659ec6db1269c56e11aa241d637f19b20a2646970667358221220dd49291aa84f21a9143b1214114f655d43034ac40a6d2e1817a16751098858ad64736f6c6343000811003368747470733a2f2f646174612d736565642d7072656273632d312d73312e62696e616e63652e6f72673a3835343568747470733a2f2f6170692e617661782e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6d61696e6e65742e696e667572612e696f2f76332f363737303435346263366561343263353861616331323937383533316239336668747470733a2f2f676f65726c692e696e667572612e696f2f76332f363737303435346263366561343263353861616331323937383533316239336668747470733a2f2f676f65726c692d726f6c6c75702e617262697472756d2e696f2f72706368747470733a2f2f6170692e617661782d746573742e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6273632d6461746173656564312e62696e616e63652e6f7267",
    "sourceMap": "492:3584:57:-:0;;;1572:26:1;;;-1:-1:-1;;1572:26:1;1594:4;1572:26;;;650:14:5;:12;:14::i;:::-;620:44;;492:3584:57;;;;;;;;;;;;5868:2125:5;6002:46;;;;;;;;;;;;;;;-1:-1:-1;;;6002:46:5;;;;;;6017:5;6002:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5981:18;;-1:-1:-1;;;216:20:59;;5909:7:5;;5981:9;;252:11:59;5981:18:5;;;;;;;;;;;;;:67;;:18;;:67;;:18;:67;:::i;:::-;-1:-1:-1;5981:67:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6081:48:5;;;;;;;;;;;;;;;-1:-1:-1;;;6081:48:5;;;;;;6098:5;6081:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6058:20;;-1:-1:-1;;;3197:22:59;;6081:48:5;;-1:-1:-1;6058:9:5;;3235:11:59;6058:20:5;;;;;;;;;;;;;:71;;:20;;:71;;:20;:71;:::i;:::-;-1:-1:-1;6058:71:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6162:84;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6162:84:5;;;;;;;6179:1;6162:84;;;;;;;;;;;;;;;;;;;;;;;6139:20;;-1:-1:-1;;;3459:22:59;;6139:9:5;;3506:1:59;3497:11;6139:20:5;;;;;;;;;;;;;:107;;:20;;:107;;:20;:107;:::i;:::-;-1:-1:-1;6139:107:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6278:82;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6278:82:5;;;;;;;6294:1;6278:82;;;;;;;;;;;;;;;;;;;;;;;6256:19;;-1:-1:-1;;;3721:21:59;;6256:9:5;;3767:1:59;3758:11;6256:19:5;;;;;;;;;;;;;:104;;:19;;:104;;:19;:104;:::i;:::-;-1:-1:-1;6256:104:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6393:53:5;;;;;;;;;;;;;;;-1:-1:-1;;;6393:53:5;;;;;;6410:8;6393:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6370:20;;-1:-1:-1;;;3982:22:59;;6393:53:5;;-1:-1:-1;6370:9:5;;4020:11:59;6370:20:5;;;;;;;;;;;;;:76;;:20;;:76;;:20;:76;:::i;:::-;-1:-1:-1;6370:76:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6480:52:5;;;;;;;;;;;;;;;-1:-1:-1;;;6480:52:5;;;;;;6498:2;6480:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6456:21;;-1:-1:-1;;;4244:23:59;;6480:52:5;;-1:-1:-1;6456:9:5;;4283:11:59;6456:21:5;;;;;;;;;;;;;:76;;:21;;:76;;:21;:76;:::i;:::-;-1:-1:-1;6456:76:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6573:59:5;;;;;;;;;;;;;;;-1:-1:-1;;;6573:59:5;;;;;;6598:3;6573:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6542:28;;-1:-1:-1;;;4507:30:59;;6573:59:5;;-1:-1:-1;6542:9:5;;4553:12:59;6542:28:5;;;;;;;;;;;;;:90;;:28;;:90;;:28;:90;:::i;:::-;-1:-1:-1;6542:90:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6670:60:5;;;;;;;;;;;;;;;-1:-1:-1;;;6670:60:5;;;;;;6692:5;6670:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6642:25;;-1:-1:-1;;;4778:27:59;;6670:60:5;;-1:-1:-1;6642:9:5;;4821:12:59;6642:25:5;;;;;;;;;;;;;:88;;:25;;:88;;:25;:88;:::i;:::-;-1:-1:-1;6642:88:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6775:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6804:6;6775:77;;;;;;;;;;;;;;;;;;;;;;;6740:32;;5058:21:59;5046:34;;6740:9:5;;5105:2:59;5096:12;6740:32:5;;;;;;;;;;;;;:112;;:32;;:112;;:32;:112;:::i;:::-;-1:-1:-1;6740:112:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6891:61:5;;;;;;;;;;;;;;;-1:-1:-1;;;6891:61:5;;;;;;6914:5;6891:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6862:26;;-1:-1:-1;;;5321:28:59;;6891:61:5;;-1:-1:-1;6862:9:5;;5365:12:59;6862:26:5;;;;;;;;;;;;;:90;;:26;;:90;;:26;:90;:::i;:::-;-1:-1:-1;6862:90:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6985:48:5;;;;;;;;;;;;;;;-1:-1:-1;;;6985:48:5;;;;;;7002:3;6985:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6962:20;;-1:-1:-1;;;5590:22:59;;6985:48:5;;-1:-1:-1;6962:9:5;;5628:11:59;6962:20:5;;;;;;;;;;;;;:71;;:20;;:71;;:20;:71;:::i;:::-;-1:-1:-1;6962:71:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7073:64:5;;;;;;;;;;;;;;;-1:-1:-1;;;7073:64:5;;;;;;7097:5;7073:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7043:27;;-1:-1:-1;;;5852:29:59;;7073:64:5;;-1:-1:-1;7043:9:5;;5897:12:59;7043:27:5;;;;;;;;;;;;;:94;;:27;;:94;;:27;:94;:::i;:::-;-1:-1:-1;7043:94:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7172:66;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7172:66:5;;;;;;;7191:5;7172:66;;;;;;;;;;;;;;;;;;;;;;;7147:22;;-1:-1:-1;;;6122:24:59;;7147:9:5;;6162:11:59;;7147:22:5;;;;;;;;;;;;;:91;;:22;;:91;;:22;:91;:::i;:::-;-1:-1:-1;7147:91:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7278:76;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7278:76:5;;;;;;;7302:5;7278:76;;;;;;;;;;;;;;;;;;;;;;;7248:27;;-1:-1:-1;;;6386:29:59;;7248:9:5;;6440:2:59;6431:12;7248:27:5;;;;;;;;;;;;;:106;;:27;;:106;;:27;:106;:::i;:::-;-1:-1:-1;7248:106:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7395:65;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7395:65:5;;;;;;;7420:2;7395:65;;;;;;;;;;;;;;;;;;;;;;;7364:28;;-1:-1:-1;;;6656:30:59;;7364:9:5;;6711:2:59;6702:12;7364:28:5;;;;;;;;;;;;;:96;;:28;;:96;;:28;:96;:::i;:::-;-1:-1:-1;7364:96:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7509:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7542:2;7509:86;;;;;;;;;;;;;;;;;;;;;;;7470:36;;6939:25:59;6927:38;;7470:9:5;;6990:2:59;6981:12;7470:36:5;;;;;;;;;;;;;:125;;:36;;:125;;:36;:125;:::i;:::-;-1:-1:-1;7470:125:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7658:57:5;;;;;;;;;;;;;;;-1:-1:-1;;;7658:57:5;;;;;;7680:3;7658:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7630:25;;-1:-1:-1;;;7206:27:59;;7658:57:5;;-1:-1:-1;7630:9:5;;7249:12:59;7630:25:5;;;;;;;;;;;;;:85;;:25;;:85;;:25;:85;:::i;:::-;-1:-1:-1;7630:85:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7807:20;245:28;237:37;;-1:-1:-1;;;;;7830:16:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7830:18:5;;;;;;;;;;;;:::i;:::-;7807:41;;7863:9;7858:111;7882:4;:11;7878:1;:15;7858:111;;;7947:4;7952:1;7947:7;;;;;;;;:::i;:::-;;;;;;;:11;;;7914:9;7924:4;7929:1;7924:7;;;;;;;;:::i;:::-;;;;;;;:12;;;7914:23;;;;;;:::i;:::-;;;;;;;;;;;;;:30;;:44;;;;;;:::i;:::-;-1:-1:-1;7895:3:5;;;;:::i;:::-;;;;7858:111;;;;7985:1;7978:8;;;5868:2125;:::o;274:127:59:-;335:10;330:3;326:20;323:1;316:31;366:4;363:1;356:15;390:4;387:1;380:15;406:380;485:1;481:12;;;;528;;;549:61;;603:4;595:6;591:17;581:27;;549:61;656:2;648:6;645:14;625:18;622:38;619:161;;702:10;697:3;693:20;690:1;683:31;737:4;734:1;727:15;765:4;762:1;755:15;619:161;;406:380;;;:::o;917:545::-;1019:2;1014:3;1011:11;1008:448;;;1055:1;1080:5;1076:2;1069:17;1125:4;1121:2;1111:19;1195:2;1183:10;1179:19;1176:1;1172:27;1166:4;1162:38;1231:4;1219:10;1216:20;1213:47;;;-1:-1:-1;1254:4:59;1213:47;1309:2;1304:3;1300:12;1297:1;1293:20;1287:4;1283:31;1273:41;;1364:82;1382:2;1375:5;1372:13;1364:82;;;1427:17;;;1408:1;1397:13;1364:82;;;1368:3;;;1008:448;917:545;;;:::o;1638:1352::-;1758:10;;-1:-1:-1;;;;;1780:30:59;;1777:56;;;1813:18;;:::i;:::-;1842:97;1932:6;1892:38;1924:4;1918:11;1892:38;:::i;:::-;1886:4;1842:97;:::i;:::-;1994:4;;2058:2;2047:14;;2075:1;2070:663;;;;2777:1;2794:6;2791:89;;;-1:-1:-1;2846:19:59;;;2840:26;2791:89;-1:-1:-1;;1595:1:59;1591:11;;;1587:24;1583:29;1573:40;1619:1;1615:11;;;1570:57;2893:81;;2040:944;;2070:663;864:1;857:14;;;901:4;888:18;;-1:-1:-1;;2106:20:59;;;2224:236;2238:7;2235:1;2232:14;2224:236;;;2327:19;;;2321:26;2306:42;;2419:27;;;;2387:1;2375:14;;;;2254:19;;2224:236;;;2228:3;2488:6;2479:7;2476:19;2473:201;;;2549:19;;;2543:26;-1:-1:-1;;2632:1:59;2628:14;;;2644:3;2624:24;2620:37;2616:42;2601:58;2586:74;;2473:201;-1:-1:-1;;;;;2720:1:59;2704:14;;;2700:22;2687:36;;-1:-1:-1;1638:1352:59:o;7272:257::-;7344:4;7338:11;;;7376:17;;-1:-1:-1;;;;;7408:34:59;;7444:22;;;7405:62;7402:88;;;7470:18;;:::i;:::-;7506:4;7499:24;7272:257;:::o;7534:275::-;7605:2;7599:9;7670:2;7651:13;;-1:-1:-1;;7647:27:59;7635:40;;-1:-1:-1;;;;;7690:34:59;;7726:22;;;7687:62;7684:88;;;7752:18;;:::i;:::-;7788:2;7781:22;7534:275;;-1:-1:-1;7534:275:59:o;7814:250::-;7899:1;7909:113;7923:6;7920:1;7917:13;7909:113;;;7999:11;;;7993:18;7980:11;;;7973:39;7945:2;7938:10;7909:113;;;-1:-1:-1;;8056:1:59;8038:16;;8031:27;7814:250::o;8069:510::-;8123:5;8176:3;8169:4;8161:6;8157:17;8153:27;8143:55;;8194:1;8191;8184:12;8143:55;8217:13;;-1:-1:-1;;;;;8242:26:59;;8239:52;;;8271:18;;:::i;:::-;8315:55;8358:2;8339:13;;-1:-1:-1;;8335:27:59;8364:4;8331:38;8315:55;:::i;:::-;8395:2;8386:7;8379:19;8441:3;8434:4;8429:2;8421:6;8417:15;8413:26;8410:35;8407:55;;;8458:1;8455;8448:12;8407:55;8471:77;8545:2;8538:4;8529:7;8525:18;8518:4;8510:6;8506:17;8471:77;:::i;:::-;8566:7;8069:510;-1:-1:-1;;;;8069:510:59:o;8584:1909::-;8700:6;8731:2;8774;8762:9;8753:7;8749:23;8745:32;8742:52;;;8790:1;8787;8780:12;8742:52;8817:16;;-1:-1:-1;;;;;8882:14:59;;;8879:34;;;8909:1;8906;8899:12;8879:34;8947:6;8936:9;8932:22;8922:32;;8992:7;8985:4;8981:2;8977:13;8973:27;8963:55;;9014:1;9011;9004:12;8963:55;9043:2;9037:9;9065:2;9061;9058:10;9055:36;;;9071:18;;:::i;:::-;9117:2;9114:1;9110:10;9140:28;9164:2;9160;9156:11;9140:28;:::i;:::-;9202:15;;;9272:11;;;9268:20;;;9233:12;;;;9300:19;;;9297:39;;;9332:1;9329;9322:12;9297:39;9364:2;9360;9356:11;9345:22;;9376:1087;9392:6;9387:3;9384:15;9376:1087;;;9471:3;9465:10;9507:2;9494:11;9491:19;9488:109;;;9551:1;9580:2;9576;9569:14;9488:109;9620:20;;9663:4;9691:16;;;-1:-1:-1;;9687:30:59;9683:39;-1:-1:-1;9680:129:59;;;9763:1;9792:2;9788;9781:14;9680:129;9835:22;;:::i;:::-;9900:2;9896;9892:11;9886:18;9933:2;9923:8;9920:16;9917:109;;;9978:1;10008:3;10003;9996:16;9917:109;10053:65;10110:7;10105:2;10094:8;10090:2;10086:17;10082:26;10053:65;:::i;:::-;10039:80;;-1:-1:-1;10154:11:59;;;10148:18;;10182:16;;;10179:109;;;10240:1;10270:3;10265;10258:16;10179:109;10324:65;10381:7;10376:2;10365:8;10361:2;10357:17;10353:26;10324:65;:::i;:::-;10308:14;;;10301:89;10403:18;;-1:-1:-1;;9409:12:59;;;;10441;;;;9376:1087;;;10482:5;8584:1909;-1:-1:-1;;;;;;;;;8584:1909:59:o;10498:127::-;10559:10;10554:3;10550:20;10547:1;10540:31;10590:4;10587:1;10580:15;10614:4;10611:1;10604:15;10630:289;10761:3;10799:6;10793:13;10815:66;10874:6;10869:3;10862:4;10854:6;10850:17;10815:66;:::i;:::-;10897:16;;;;;10630:289;-1:-1:-1;;10630:289:59:o;10924:232::-;10963:3;10984:17;;;10981:140;;11043:10;11038:3;11034:20;11031:1;11024:31;11078:4;11075:1;11068:15;11106:4;11103:1;11096:15;10981:140;-1:-1:-1;11148:1:59;11137:13;;10924:232::o;:::-;492:3584:57;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "492:3584:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:99;;;:::i;:::-;;1864:446;;;:::i;2432:717::-;;;:::i;1275:583::-;;;:::i;3209:732::-;;;:::i;1819:584:1:-;;;:::i;:::-;;;179:14:59;;172:22;154:41;;142:2;127:18;1819:584:1;;;;;;;;3947:127:57;;;-1:-1:-1;;352:25:59;;340:2;325:18;3947:127:57;206:177:59;1572:26:1;;;;;;;;;1108:99:57;1147:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1142:2:57;:30;;-1:-1:-1;;;;;;1142:30:57;-1:-1:-1;;;;;1142:30:57;;;;;;;;;;1182:18;880:42;1182:9;:18::i;:::-;1108:99::o;1864:446::-;2035:2;;:46;;-1:-1:-1;;;2035:46:57;;2004:4;;1991:10;;-1:-1:-1;;;;;2035:2:57;;;;:18;;:46;;687:42;;759;;616;;2073:2;;2004:4;;2035:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2018:63;;2091:22;2111:1;2102:6;:10;2091;:22::i;:::-;-1:-1:-1;;;;;;;;;;;2168:20:57;:6;:18;:20::i;:::-;2138:51;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2138:51:57;;;;;;;;;;2128:62;;;:::i;:::-;;;;;;;;2250:37;;-1:-1:-1;;;2250:37:57;;2281:4;2250:37;;;2474:51:59;-1:-1:-1;;;;;;;;;;;2205:98:57;2250:51;;952:42;;2250:22;;2447:18:59;;2250:37:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;:51::i;:::-;2215:87;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2215:87:57;;;;;;;;;;2205:98;;;:::i;:::-;;;;;;;;1900:410;;1864:446::o;2432:717::-;2630:229;;;;;;;;687:42;2630:229;;952:42;2630:229;;;;2713:4;2630:229;;;;2764:10;2630:229;;;;-1:-1:-1;;2630:229:57;;;;2817:2;2630:229;;;;-1:-1:-1;2630:229:57;;;;;;;;;;;;2531:334;;-1:-1:-1;;616:42:57;;2563:10;;2531:334;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2531:334:57;;;;;;;;;;;2519:347;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2486:380;;;;2872:38;2883:4;2872:38;;;;;;;;;;;;;-1:-1:-1;;;2872:38:57;;;:10;:38::i;:::-;-1:-1:-1;;;;;;;;;;;2931:4:57;2921:15;;;;;;:::i;:::-;;;;;;;;3013:60;;3067:4;3013:60;;;2474:51:59;952:42:57;;2447:18:59;;3013:60:57;;;-1:-1:-1;;3013:60:57;;;;;;;;;;;;;;-1:-1:-1;;;;;3013:60:57;-1:-1:-1;;;3013:60:57;;;3003:71;;;3013:60;3003:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3080:36:57;;;;;;;;;;;;-1:-1:-1;;;3080:36:57;;;;2988:86;;-1:-1:-1;2988:86:57;-1:-1:-1;3080:36:57;;2988:86;;3080:10;:36::i;:::-;-1:-1:-1;;;;;;;;;;;3137:4:57;3127:15;;;;;;:::i;1275:583::-;1576:2;;:46;;-1:-1:-1;;;1576:46:57;;1546:3;;1533:10;;-1:-1:-1;;;;;1576:2:57;;;;:18;;:46;;687:42;;759;;616;;1614:2;;1546:3;;1576:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1559:63;-1:-1:-1;1632:23:57;1643:11;1632:10;:23::i;:::-;-1:-1:-1;;;;;;;;;;;1710:20:57;:6;:18;:20::i;:::-;1680:51;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1680:51:57;;;;;;;;;;1670:62;;;:::i;:::-;;;;;;;;1795:40;;-1:-1:-1;;;1795:40:57;;1829:4;1795:40;;;2474:51:59;-1:-1:-1;;;;;;;;;;;1747:104:57;1795:54;;880:42;;1795:25;;2447:18:59;;1795:40:57;2328:203:59;1795:54:57;1757:93;;;;;;;;:::i;3209:732::-;3407:247;;;;;;;;687:42;3407:247;;759:42;3407:247;;;;3490:3;3407:247;;;;3559:10;3407:247;;;;-1:-1:-1;;3407:247:57;;;;3612:2;3407:247;;;;-1:-1:-1;3407:247:57;;;;;;;;;;;;3308:352;;-1:-1:-1;;616:42:57;;3340:10;;3308:352;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3308:352:57;;;;;;;;;;;3296:365;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3263:398;;;;3667:38;3678:4;3667:38;;;;;;;;;;;;;-1:-1:-1;;;3667:38:57;;;:10;:38::i;:::-;-1:-1:-1;;;;;;;;;;;3726:4:57;3716:15;;;;;;:::i;:::-;;;;;;;;3806:60;;3860:4;3806:60;;;2474:51:59;687:42:57;;2447:18:59;;3806:60:57;;;-1:-1:-1;;3806:60:57;;;;;;;;;;;;;;-1:-1:-1;;;;;3806:60:57;-1:-1:-1;;;3806:60:57;;;3797:70;;;3806:60;3797:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3873:35:57;;;;;;;;;;;;-1:-1:-1;;;3873:35:57;;;;3782:85;;-1:-1:-1;3782:85:57;-1:-1:-1;3873:35:57;;3782:85;;3873:10;:35::i;1819:584:1:-;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;4709:51:59;;;-1:-1:-1;;;4776:18:59;;;4769:34;2196:43:1;;;;;;;;;4682:18:59;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;20479:116:5:-;20538:22;;-1:-1:-1;;;20538:22:5;;-1:-1:-1;;;;;4727:32:59;;20538:22:5;;;4709:51:59;-1:-1:-1;;;4776:18:59;;;4769:34;20538:7:5;;;;4682:18:59;;20538:22:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20570:18:5;;-1:-1:-1;;;20570:18:5;;-1:-1:-1;;;;;2492:32:59;;20570:18:5;;;2474:51:59;20570:13:5;;-1:-1:-1;20570:13:5;;-1:-1:-1;2447:18:59;;20570::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20479:116;:::o;3255:157:1:-;3315:9;3310:96;;3345:30;;;;;6012:2:59;5994:21;;;6051:2;6031:18;;;6024:30;6090:25;6085:2;6070:18;;6063:53;6148:2;6133:18;;5810:347;3345:30:1;;;;;;;;3389:6;:4;:6::i;:::-;3255:157;:::o;1216:174:27:-;1275:13;1331:42;1343:5;1350:18;1362:5;1350:11;:18::i;:::-;1371:1;1350:22;1331:11;:42::i;:::-;1324:49;1216:174;-1:-1:-1;;1216:174:27:o;3418:191:1:-;3497:9;3492:111;;3527:30;3553:3;3527:30;;;;;;:::i;:::-;;;;;;;;3571:21;3582:9;3571:10;:21::i;:::-;3418:191;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;6814:51:59;;;-1:-1:-1;;;6881:18:59;;;6874:34;;;;2705:4:1;6924:18:59;;;6917:34;2482:11:1;;1671:64;2579:43;;6787:18:59;;2645:67:1;;;-1:-1:-1;;2645:67:1;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:1;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:1;2813:7;:14;;-1:-1:-1;;2813:14:1;;;;;2410:424::o;11430:663:30:-;11484:7;;11568:3;11559:12;;;:16;11555:98;;11605:3;11595:13;;;;;11636:2;11626:12;11555:98;11679:2;11670:11;;;:15;11666:95;;11715:2;11705:12;;;;;11745:1;11735:11;11666:95;11787:2;11778:11;;;:15;11774:95;;11823:2;11813:12;;;;;11853:1;11843:11;11774:95;11895:2;11886:11;;;:15;11882:95;;11931:2;11921:12;;;;;11961:1;11951:11;11882:95;12003:1;11994:10;;;:14;11990:64;;12038:1;12028:11;12080:6;11430:663;-1:-1:-1;;11430:663:30:o;1513:437:27:-;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:27;;1613:47;;-1:-1:-1;;;1670:6:27;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:27;;;;;;;;;-1:-1:-1;;;1695:6:27;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:27;;;;;;;;-1:-1:-1;1725:9:27;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:27;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:27;;;;;;;;-1:-1:-1;1836:1:27;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:27;;1857:55;;;;-1:-1:-1;;;1857:55:27;;8004:2:59;1857:55:27;;;7986:21:59;;;8023:18;;;8016:30;8082:34;8062:18;;;8055:62;8134:18;;1857:55:27;;;;;;;;1936:6;1513:437;-1:-1:-1;;;1513:437:27:o;-1:-1:-1:-;;;;;;;;:::o;388:550:59:-;-1:-1:-1;;;;;710:15:59;;;692:34;;762:15;;;757:2;742:18;;735:43;814:15;;;;809:2;794:18;;787:43;861:2;846:18;;839:34;;;;922:8;910:21;;;904:3;889:19;;882:50;641:3;626:19;;388:550::o;943:184::-;1013:6;1066:2;1054:9;1045:7;1041:23;1037:32;1034:52;;;1082:1;1079;1072:12;1034:52;-1:-1:-1;1105:16:59;;943:184;-1:-1:-1;943:184:59:o;1132:250::-;1217:1;1227:113;1241:6;1238:1;1235:13;1227:113;;;1317:11;;;1311:18;1298:11;;;1291:39;1263:2;1256:10;1227:113;;;-1:-1:-1;;1374:1:59;1356:16;;1349:27;1132:250::o;1387:439::-;-1:-1:-1;;;1644:3:59;1637:24;1619:3;1690:6;1684:13;1706:74;1773:6;1769:1;1764:3;1760:11;1753:4;1745:6;1741:17;1706:74;:::i;:::-;1800:16;;;;1818:1;1796:24;;1387:439;-1:-1:-1;;1387:439:59:o;1831:270::-;1872:3;1910:5;1904:12;1937:6;1932:3;1925:19;1953:76;2022:6;2015:4;2010:3;2006:14;1999:4;1992:5;1988:16;1953:76;:::i;:::-;2083:2;2062:15;-1:-1:-1;;2058:29:59;2049:39;;;;2090:4;2045:50;;1831:270;-1:-1:-1;;1831:270:59:o;2106:217::-;2253:2;2242:9;2235:21;2216:4;2273:44;2313:2;2302:9;2298:18;2290:6;2273:44;:::i;2536:446::-;-1:-1:-1;;;2793:3:59;2786:29;2768:3;2844:6;2838:13;2860:75;2928:6;2923:2;2918:3;2914:12;2907:4;2899:6;2895:17;2860:75;:::i;:::-;2955:16;;;;2973:2;2951:25;;2536:446;-1:-1:-1;;2536:446:59:o;2987:797::-;3276:13;;-1:-1:-1;;;;;3272:22:59;;;3254:41;;3355:4;3343:17;;;3337:24;3333:33;;3311:20;;;3304:63;3427:4;3415:17;;;3409:24;3435:8;3405:39;3383:20;;;3376:69;3505:4;3493:17;;;3487:24;3483:33;;3461:20;;;3454:63;3573:4;3561:17;;;3555:24;3533:20;;;3526:54;3234:3;3624:17;;;3618:24;3596:20;;;3589:54;3699:4;3687:17;;;3681:24;3659:20;;;3652:54;3766:4;3754:17;;;3748:24;3744:33;3722:20;;;3715:63;;;;3203:3;3188:19;;2987:797::o;3789:287::-;3918:3;3956:6;3950:13;3972:66;4031:6;4026:3;4019:4;4011:6;4007:17;3972:66;:::i;:::-;4054:16;;;;;3789:287;-1:-1:-1;;3789:287:59:o;4081:449::-;-1:-1:-1;;;4338:3:59;4331:32;4313:3;4392:6;4386:13;4408:75;4476:6;4471:2;4466:3;4462:12;4455:4;4447:6;4443:17;4408:75;:::i;:::-;4503:16;;;;4521:2;4499:25;;4081:449;-1:-1:-1;;4081:449:59:o;4814:384::-;-1:-1:-1;;;;;;4999:33:59;;4987:46;;5056:13;;4969:3;;5078:74;5056:13;5141:1;5132:11;;5125:4;5113:17;;5078:74;:::i;:::-;5172:16;;;;5190:1;5168:24;;4814:384;-1:-1:-1;;;4814:384:59:o;5203:277::-;5270:6;5323:2;5311:9;5302:7;5298:23;5294:32;5291:52;;;5339:1;5336;5329:12;5291:52;5371:9;5365:16;5424:5;5417:13;5410:21;5403:5;5400:32;5390:60;;5446:1;5443;5436:12;6162:445;6412:2;6401:9;6394:21;6451:1;6446:2;6435:9;6431:18;6424:29;-1:-1:-1;;;6484:2:59;6473:9;6469:18;6462:35;6535:3;6528:4;6517:9;6513:20;6506:33;6375:4;6556:45;6596:3;6585:9;6581:19;6573:6;6556:45;:::i;6962:127::-;7023:10;7018:3;7014:20;7011:1;7004:31;7054:4;7051:1;7044:15;7078:4;7075:1;7068:15;7094:168;7167:9;;;7198;;7215:15;;;7209:22;;7195:37;7185:71;;7236:18;;:::i;7267:125::-;7332:9;;;7353:10;;;7350:36;;;7366:18;;:::i;7397:127::-;7458:10;7453:3;7449:20;7446:1;7439:31;7489:4;7486:1;7479:15;7513:4;7510:1;7503:15;7529:127;7590:10;7585:3;7581:20;7578:1;7571:31;7621:4;7618:1;7611:15;7645:4;7642:1;7635:15;7661:136;7700:3;7728:5;7718:39;;7737:18;;:::i;:::-;-1:-1:-1;;;7773:18:59;;7661:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "getMaxUint256()": "d3c60c7a",
    "setUp()": "0a9254e4",
    "testExactInputSingleDAItoBUSD()": "7b0982f8",
    "testExactInputSingleDAItoUSDC()": "1c92c97b",
    "testMakeABusdSwap()": "2ec204cc",
    "testMakeAUSDCSwap()": "0c9d72a0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExactInputSingleDAItoBUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExactInputSingleDAItoUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMakeABusdSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMakeAUSDCSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"testExactInputSingleDAItoBUSD()\":{\"details\":\"Swapping DAI to busd using address calls\"},\"testExactInputSingleDAItoUSDC()\":{\"details\":\"Wrote these address calls for Hw20 Swapping DAI for USDC using address calls\"},\"testMakeABusdSwap()\":{\"details\":\"2 Unit tests for makeASingleSwap for Homework 21\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract makes calls to defined mainnet addresses and tests for 2 exactInputSingle swaps from DAI to USDC and DAI to binance\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BootcampHw20.t.sol\":\"UniswapTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/contracts/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/=lib/v3-core/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b\",\"dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd\",\"dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf0c5c17c4cdfd0de659cf5e58e0e1611b6ee53900d3ab8b07b871d71d0b37bc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21ffda3891e7480d5fdbf7f5e9d539f0ed76204bca69738f8ee006395ef1e23e\",\"dweb:/ipfs/Qmbhbn8zVXrCyvhvoQ5AUSj3usVGqMbMSEHYkNPdbQKBxt\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74\",\"dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf4442ded918d167635adc30ba3c451d45666c89b38e0eec2adaf0857b49a72f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4cb181bd626fe852a36f9b1cf2d79ef0fa9d2bf2cbf0ec86f33f5bf492c0b69\",\"dweb:/ipfs/QmaZKevWdZbjoTB7qtzKjP3dZhiUGymJc4Wb9qkNMewxjB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"src/BootcampHW21.sol\":{\"keccak256\":\"0xc0b8448a455243acabbaefb84da50c9a4ce062462c7ceee427f15be5b0576804\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e365b0f5e6e51840c76cf55413e68a93856ab1a2c450068c1071743c719b5041\",\"dweb:/ipfs/QmYbwMJVZSdACeyrCgEyJr6Yx5tMTCoxQKTsEtQD6F8Ycf\"]},\"src/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x65738ea30b5e97e671ac17e53e08bea37655ae80285fa51a538d1da5d705f88b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c837918e86f38c75428843d7f95077922542763702bee88a55fa6ff3bff1642a\",\"dweb:/ipfs/QmZvJ892bRwBkxdkvji9bBZk1A5A9q4vLEjwoQQerypa4E\"]},\"test/BootcampHw20.t.sol\":{\"keccak256\":\"0xbcd83b736a1dfa50338dc4c3ee7cf7498eb36920b352e859d19c848feb34ecf8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://83a2c4b4e3c6b807513645962b0577a849d1b4b04bd621b154d107b500761691\",\"dweb:/ipfs/QmUDZfHE23AhPdfTAgJN5M9wN4U1u99BwNuaT9TBpTsjRV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getMaxUint256",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExactInputSingleDAItoBUSD"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExactInputSingleDAItoUSDC"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMakeABusdSwap"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMakeAUSDCSwap"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "testExactInputSingleDAItoBUSD()": {
            "details": "Swapping DAI to busd using address calls"
          },
          "testExactInputSingleDAItoUSDC()": {
            "details": "Wrote these address calls for Hw20 Swapping DAI for USDC using address calls"
          },
          "testMakeABusdSwap()": {
            "details": "2 Unit tests for makeASingleSwap for Homework 21"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=lib/contracts/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/=lib/v3-core/",
        ":base64-sol/=lib/base64/",
        ":base64/=lib/base64/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/BootcampHw20.t.sol": "UniswapTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0",
        "urls": [
          "bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b",
          "dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149",
        "urls": [
          "bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd",
          "dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf0c5c17c4cdfd0de659cf5e58e0e1611b6ee53900d3ab8b07b871d71d0b37bc6",
        "urls": [
          "bzz-raw://21ffda3891e7480d5fdbf7f5e9d539f0ed76204bca69738f8ee006395ef1e23e",
          "dweb:/ipfs/Qmbhbn8zVXrCyvhvoQ5AUSj3usVGqMbMSEHYkNPdbQKBxt"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17",
        "urls": [
          "bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74",
          "dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xf4442ded918d167635adc30ba3c451d45666c89b38e0eec2adaf0857b49a72f7",
        "urls": [
          "bzz-raw://b4cb181bd626fe852a36f9b1cf2d79ef0fa9d2bf2cbf0ec86f33f5bf492c0b69",
          "dweb:/ipfs/QmaZKevWdZbjoTB7qtzKjP3dZhiUGymJc4Wb9qkNMewxjB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/BootcampHW21.sol": {
        "keccak256": "0xc0b8448a455243acabbaefb84da50c9a4ce062462c7ceee427f15be5b0576804",
        "urls": [
          "bzz-raw://e365b0f5e6e51840c76cf55413e68a93856ab1a2c450068c1071743c719b5041",
          "dweb:/ipfs/QmYbwMJVZSdACeyrCgEyJr6Yx5tMTCoxQKTsEtQD6F8Ycf"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISwapRouter.sol": {
        "keccak256": "0x65738ea30b5e97e671ac17e53e08bea37655ae80285fa51a538d1da5d705f88b",
        "urls": [
          "bzz-raw://c837918e86f38c75428843d7f95077922542763702bee88a55fa6ff3bff1642a",
          "dweb:/ipfs/QmZvJ892bRwBkxdkvji9bBZk1A5A9q4vLEjwoQQerypa4E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/BootcampHw20.t.sol": {
        "keccak256": "0xbcd83b736a1dfa50338dc4c3ee7cf7498eb36920b352e859d19c848feb34ecf8",
        "urls": [
          "bzz-raw://83a2c4b4e3c6b807513645962b0577a849d1b4b04bd621b154d107b500761691",
          "dweb:/ipfs/QmUDZfHE23AhPdfTAgJN5M9wN4U1u99BwNuaT9TBpTsjRV"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/BootcampHw20.t.sol",
    "id": 33463,
    "exportedSymbols": {
      "CommonBase": [
        1933
      ],
      "DSTest": [
        1901
      ],
      "IERC20": [
        25552
      ],
      "ISwapRouter": [
        32673
      ],
      "IUniswapV3Factory": [
        29030
      ],
      "IUniswapV3PoolState": [
        29152
      ],
      "IUniswapV3SwapCallback": [
        29044
      ],
      "InteractWithUniswap": [
        29684
      ],
      "Math": [
        28310
      ],
      "StdAssertions": [
        2759
      ],
      "StdCheats": [
        4872
      ],
      "StdStorage": [
        5777
      ],
      "StdUtils": [
        7640
      ],
      "Strings": [
        27409
      ],
      "Test": [
        7671
      ],
      "TestBase": [
        7660
      ],
      "UniswapTest": [
        33462
      ],
      "Vm": [
        8645
      ],
      "console": [
        16709
      ],
      "console2": [
        24774
      ],
      "stdError": [
        4938
      ],
      "stdJson": [
        5604
      ],
      "stdMath": [
        5746
      ],
      "stdStorage": [
        7211
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4037:57",
    "nodes": [
      {
        "id": 33160,
        "nodeType": "PragmaDirective",
        "src": "39:23:57",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 33161,
        "nodeType": "ImportDirective",
        "src": "64:28:57",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33463,
        "sourceUnit": 7672,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33162,
        "nodeType": "ImportDirective",
        "src": "93:51:57",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33463,
        "sourceUnit": 27410,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33163,
        "nodeType": "ImportDirective",
        "src": "145:40:57",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapRouter.sol",
        "file": "src/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33463,
        "sourceUnit": 32674,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33164,
        "nodeType": "ImportDirective",
        "src": "186:30:57",
        "nodes": [],
        "absolutePath": "src/BootcampHW21.sol",
        "file": "src/BootcampHW21.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33463,
        "sourceUnit": 29685,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33165,
        "nodeType": "ImportDirective",
        "src": "217:56:57",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33463,
        "sourceUnit": 25553,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33166,
        "nodeType": "ImportDirective",
        "src": "274:61:57",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "file": "@uniswap/contracts/interfaces/IUniswapV3Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33463,
        "sourceUnit": 29031,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33462,
        "nodeType": "ContractDefinition",
        "src": "492:3584:57",
        "nodes": [
          {
            "id": 33172,
            "nodeType": "UsingForDirective",
            "src": "527:26:57",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 33170,
              "name": "Strings",
              "nameLocations": [
                "533:7:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27409,
              "src": "533:7:57"
            },
            "typeName": {
              "id": 33171,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "545:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 33175,
            "nodeType": "UsingForDirective",
            "src": "558:26:57",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 33173,
              "name": "Strings",
              "nameLocations": [
                "564:7:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27409,
              "src": "564:7:57"
            },
            "typeName": {
              "id": 33174,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "576:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 33178,
            "nodeType": "VariableDeclaration",
            "src": "590:68:57",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "router",
            "nameLocation": "607:6:57",
            "scope": 33462,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33176,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "590:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
              "id": 33177,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "616:42:57",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
            },
            "visibility": "internal"
          },
          {
            "id": 33181,
            "nodeType": "VariableDeclaration",
            "src": "664:65:57",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "dai",
            "nameLocation": "681:3:57",
            "scope": 33462,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33179,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "664:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 33180,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "687:42:57",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "internal"
          },
          {
            "id": 33184,
            "nodeType": "VariableDeclaration",
            "src": "735:66:57",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "busd",
            "nameLocation": "752:4:57",
            "scope": 33462,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33182,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "735:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834466162623134356436343635326139343864373235333330323366364537413632334337433533",
              "id": 33183,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "759:42:57",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x4Fabb145d64652a948d72533023f6E7A623C7C53"
            },
            "visibility": "internal"
          },
          {
            "id": 33187,
            "nodeType": "VariableDeclaration",
            "src": "853:69:57",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "binance",
            "nameLocation": "870:7:57",
            "scope": 33462,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33185,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "853:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844466435323933443865333437644665353945393065466435356232393536613133343339363364",
              "id": 33186,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "880:42:57",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xDFd5293D8e347dFe59E90eFd55b2956a1343963d"
            },
            "visibility": "internal"
          },
          {
            "id": 33190,
            "nodeType": "VariableDeclaration",
            "src": "928:66:57",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "usdc",
            "nameLocation": "945:4:57",
            "scope": 33462,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33188,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "928:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
              "id": 33189,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "952:42:57",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
            },
            "visibility": "internal"
          },
          {
            "id": 33193,
            "nodeType": "VariableDeclaration",
            "src": "1001:72:57",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "uniFactory",
            "nameLocation": "1018:10:57",
            "scope": 33462,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33191,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1001:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
              "id": 33192,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1031:42:57",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
            },
            "visibility": "internal"
          },
          {
            "id": 33196,
            "nodeType": "VariableDeclaration",
            "src": "1079:22:57",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "eg",
            "nameLocation": "1099:2:57",
            "scope": 33462,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InteractWithUniswap_$29684",
              "typeString": "contract InteractWithUniswap"
            },
            "typeName": {
              "id": 33195,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33194,
                "name": "InteractWithUniswap",
                "nameLocations": [
                  "1079:19:57"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29684,
                "src": "1079:19:57"
              },
              "referencedDeclaration": 29684,
              "src": "1079:19:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InteractWithUniswap_$29684",
                "typeString": "contract InteractWithUniswap"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 33211,
            "nodeType": "FunctionDefinition",
            "src": "1108:99:57",
            "nodes": [],
            "body": {
              "id": 33210,
              "nodeType": "Block",
              "src": "1132:75:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33199,
                      "name": "eg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33196,
                      "src": "1142:2:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InteractWithUniswap_$29684",
                        "typeString": "contract InteractWithUniswap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1147:23:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_InteractWithUniswap_$29684_$",
                          "typeString": "function () returns (contract InteractWithUniswap)"
                        },
                        "typeName": {
                          "id": 33201,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33200,
                            "name": "InteractWithUniswap",
                            "nameLocations": [
                              "1151:19:57"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 29684,
                            "src": "1151:19:57"
                          },
                          "referencedDeclaration": 29684,
                          "src": "1151:19:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_InteractWithUniswap_$29684",
                            "typeString": "contract InteractWithUniswap"
                          }
                        }
                      },
                      "id": 33203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1147:25:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InteractWithUniswap_$29684",
                        "typeString": "contract InteractWithUniswap"
                      }
                    },
                    "src": "1142:30:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InteractWithUniswap_$29684",
                      "typeString": "contract InteractWithUniswap"
                    }
                  },
                  "id": 33205,
                  "nodeType": "ExpressionStatement",
                  "src": "1142:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33207,
                        "name": "binance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33187,
                        "src": "1192:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33206,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4650,
                        4671,
                        4695,
                        4719
                      ],
                      "referencedDeclaration": 4650,
                      "src": "1182:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1182:18:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33209,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:18:57"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1117:5:57",
            "parameters": {
              "id": 33197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:2:57"
            },
            "returnParameters": {
              "id": 33198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:0:57"
            },
            "scope": 33462,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33266,
            "nodeType": "FunctionDefinition",
            "src": "1275:583:57",
            "nodes": [],
            "body": {
              "id": 33265,
              "nodeType": "Block",
              "src": "1311:547:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33217,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "1540:3:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 33265,
                      "src": "1533:10:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 33216,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1533:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip",
                  "id": 33219,
                  "initialValue": {
                    "hexValue": "333030",
                    "id": 33218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1546:3:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_300_by_1",
                      "typeString": "int_const 300"
                    },
                    "value": "300"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1533:16:57"
                },
                {
                  "assignments": [
                    33221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33221,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1567:6:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 33265,
                      "src": "1559:14:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1559:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33230,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33224,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33181,
                        "src": "1595:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33225,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33184,
                        "src": "1600:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33226,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33178,
                        "src": "1606:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 33227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1614:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "id": 33228,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33217,
                        "src": "1618:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 33222,
                        "name": "eg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33196,
                        "src": "1576:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InteractWithUniswap_$29684",
                          "typeString": "contract InteractWithUniswap"
                        }
                      },
                      "id": 33223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1579:15:57",
                      "memberName": "makeASingleSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29669,
                      "src": "1576:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint24_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256,uint24) external returns (uint256)"
                      }
                    },
                    "id": 33229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:46:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1559:63:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33232,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33221,
                          "src": "1643:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 33233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1653:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1643:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33231,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        384,
                        405
                      ],
                      "referencedDeclaration": 384,
                      "src": "1632:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 33235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:23:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33236,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:23:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "537761707065643a20",
                            "id": 33240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1697:11:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            "value": "Swapped: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33241,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33221,
                                "src": "1710:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1717:11:57",
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27312,
                              "src": "1710:18:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 33243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1710:20:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 33238,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1680:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1684:12:57",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1680:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 33244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1680:51:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33237,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1670:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1670:62:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33246,
                  "nodeType": "EmitStatement",
                  "src": "1665:67:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "62696e616e63652042616c616e63653a20",
                            "id": 33250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1774:19:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a60847c7aaa0e9315e4d1e092cef699861ba5a144d49284e0789d5ce9aa53458",
                              "typeString": "literal_string \"binance Balance: \""
                            },
                            "value": "binance Balance: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 33257,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1829:4:57",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniswapTest_$33462",
                                          "typeString": "contract UniswapTest"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniswapTest_$33462",
                                          "typeString": "contract UniswapTest"
                                        }
                                      ],
                                      "id": 33256,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1821:7:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 33255,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1821:7:57",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 33258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1821:13:57",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 33252,
                                        "name": "binance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33187,
                                        "src": "1802:7:57",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 33251,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25552,
                                      "src": "1795:6:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$25552_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 33253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1795:15:57",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$25552",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 33254,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1811:9:57",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25509,
                                  "src": "1795:25:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 33259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1795:40:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1836:11:57",
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27312,
                              "src": "1795:52:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 33261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1795:54:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a60847c7aaa0e9315e4d1e092cef699861ba5a144d49284e0789d5ce9aa53458",
                              "typeString": "literal_string \"binance Balance: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 33248,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1757:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1761:12:57",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1757:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 33262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1757:93:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33247,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1747:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:104:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33264,
                  "nodeType": "EmitStatement",
                  "src": "1742:109:57"
                }
              ]
            },
            "documentation": {
              "id": 33212,
              "nodeType": "StructuredDocumentation",
              "src": "1213:57:57",
              "text": "@dev 2 Unit tests for makeASingleSwap for Homework 21"
            },
            "functionSelector": "2ec204cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMakeABusdSwap",
            "nameLocation": "1284:17:57",
            "parameters": {
              "id": 33213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:2:57"
            },
            "returnParameters": {
              "id": 33214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:0:57"
            },
            "scope": 33462,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33319,
            "nodeType": "FunctionDefinition",
            "src": "1864:446:57",
            "nodes": [],
            "body": {
              "id": 33318,
              "nodeType": "Block",
              "src": "1900:410:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33270,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "1998:3:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 33318,
                      "src": "1991:10:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 33269,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1991:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33272,
                  "initialValue": {
                    "hexValue": "33303030",
                    "id": 33271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2004:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3000_by_1",
                      "typeString": "int_const 3000"
                    },
                    "value": "3000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1991:17:57"
                },
                {
                  "assignments": [
                    33274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33274,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2026:6:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 33318,
                      "src": "2018:14:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33273,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2018:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33283,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33277,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33181,
                        "src": "2054:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33278,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33184,
                        "src": "2059:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33279,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33178,
                        "src": "2065:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 33280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2073:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "id": 33281,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33270,
                        "src": "2077:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 33275,
                        "name": "eg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33196,
                        "src": "2035:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InteractWithUniswap_$29684",
                          "typeString": "contract InteractWithUniswap"
                        }
                      },
                      "id": 33276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2038:15:57",
                      "memberName": "makeASingleSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29669,
                      "src": "2035:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint24_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256,uint24) external returns (uint256)"
                      }
                    },
                    "id": 33282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:46:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2018:63:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33285,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33274,
                          "src": "2102:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 33286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2111:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2102:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33284,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        384,
                        405
                      ],
                      "referencedDeclaration": 384,
                      "src": "2091:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 33288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2091:22:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33289,
                  "nodeType": "ExpressionStatement",
                  "src": "2091:22:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "537761707065643a20",
                            "id": 33293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2155:11:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            "value": "Swapped: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33294,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33274,
                                "src": "2168:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2175:11:57",
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27312,
                              "src": "2168:18:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 33296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2168:20:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_3887a5dd009236e17a56ffcdfc7091bf4f89733481c02a71d7ead5b9c8948044",
                              "typeString": "literal_string \"Swapped: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 33291,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2138:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2142:12:57",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2138:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 33297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2138:51:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33290,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "2128:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:62:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33299,
                  "nodeType": "EmitStatement",
                  "src": "2123:67:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "555344432042616c616e63653a20",
                            "id": 33303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2232:16:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ba25de04d244f3e3b2fe19081c1648b2196f33b8baf206b2cac6419b6dbe7d4",
                              "typeString": "literal_string \"USDC Balance: \""
                            },
                            "value": "USDC Balance: "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 33310,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "2281:4:57",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniswapTest_$33462",
                                          "typeString": "contract UniswapTest"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniswapTest_$33462",
                                          "typeString": "contract UniswapTest"
                                        }
                                      ],
                                      "id": 33309,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2273:7:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 33308,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2273:7:57",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 33311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2273:13:57",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 33305,
                                        "name": "usdc",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33190,
                                        "src": "2257:4:57",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 33304,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25552,
                                      "src": "2250:6:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$25552_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 33306,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2250:12:57",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$25552",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 33307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2263:9:57",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25509,
                                  "src": "2250:22:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 33312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2250:37:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2288:11:57",
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27312,
                              "src": "2250:49:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 33314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2250:51:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ba25de04d244f3e3b2fe19081c1648b2196f33b8baf206b2cac6419b6dbe7d4",
                              "typeString": "literal_string \"USDC Balance: \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 33301,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2215:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2219:12:57",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2215:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 33315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2215:87:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33300,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "2205:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:98:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33317,
                  "nodeType": "EmitStatement",
                  "src": "2200:103:57"
                }
              ]
            },
            "functionSelector": "0c9d72a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMakeAUSDCSwap",
            "nameLocation": "1873:17:57",
            "parameters": {
              "id": 33267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:2:57"
            },
            "returnParameters": {
              "id": 33268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1900:0:57"
            },
            "scope": 33462,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33383,
            "nodeType": "FunctionDefinition",
            "src": "2432:717:57",
            "nodes": [],
            "body": {
              "id": 33382,
              "nodeType": "Block",
              "src": "2480:669:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33324,
                    33326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33324,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "2492:4:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 33382,
                      "src": "2487:9:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 33323,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2487:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33326,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2511:4:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 33382,
                      "src": "2498:17:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 33325,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2498:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33347,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783431346266333839",
                            "id": 33331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2563:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1095496585_by_1",
                              "typeString": "int_const 1095496585"
                            },
                            "value": "0x414bf389"
                          },
                          {
                            "arguments": [
                              {
                                "id": 33334,
                                "name": "dai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33181,
                                "src": "2678:3:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 33335,
                                "name": "usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33190,
                                "src": "2695:4:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "33303030",
                                "id": 33336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2713:4:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                "value": "3000"
                              },
                              {
                                "expression": {
                                  "id": 33337,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2764:3:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 33338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2768:6:57",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2764:10:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 33339,
                                  "name": "getMaxUint256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33461,
                                  "src": "2788:13:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 33340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2788:15:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "3130",
                                "id": 33341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2817:2:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              {
                                "hexValue": "30",
                                "id": 33342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2833:1:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 33343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2848:1:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 33332,
                                "name": "ISwapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32673,
                                "src": "2630:11:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$32673_$",
                                  "typeString": "type(contract ISwapRouter)"
                                }
                              },
                              "id": 33333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2642:22:57",
                              "memberName": "ExactInputSingleParams",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32597,
                              "src": "2630:34:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$32597_storage_ptr_$",
                                "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                              }
                            },
                            "id": 33344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2630:229:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$32597_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1095496585_by_1",
                              "typeString": "int_const 1095496585"
                            },
                            {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$32597_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          ],
                          "expression": {
                            "id": 33329,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2531:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2535:18:57",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2531:22:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 33345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2531:334:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 33327,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33178,
                        "src": "2519:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 33328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2526:4:57",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "2519:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 33346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2519:347:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2486:380:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33349,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33324,
                        "src": "2883:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465722063616c6c206661696c6564",
                        "id": 33350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2889:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        },
                        "value": "Router call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        }
                      ],
                      "id": 33348,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        384,
                        405
                      ],
                      "referencedDeclaration": 405,
                      "src": "2872:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 33351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2872:38:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33352,
                  "nodeType": "ExpressionStatement",
                  "src": "2872:38:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33354,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33326,
                        "src": "2931:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33353,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "2921:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2921:15:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33356,
                  "nodeType": "EmitStatement",
                  "src": "2916:20:57"
                },
                {
                  "documentation": "@dev Checking USDC balance post swap",
                  "expression": {
                    "id": 33371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 33357,
                          "name": "temp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33324,
                          "src": "2989:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 33358,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33326,
                          "src": "2995:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 33359,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2988:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 33364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3037:20:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 33367,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3067:4:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapTest_$33462",
                                    "typeString": "contract UniswapTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapTest_$33462",
                                    "typeString": "contract UniswapTest"
                                  }
                                ],
                                "id": 33366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3059:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33365,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3059:7:57",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3059:13:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 33362,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3013:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 33363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3017:19:57",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "3013:23:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 33369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3013:60:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 33360,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33190,
                          "src": "3003:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3008:4:57",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3003:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 33370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3003:71:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "2988:86:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33372,
                  "nodeType": "ExpressionStatement",
                  "src": "2988:86:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33374,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33324,
                        "src": "3091:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "555344432063616c6c206661696c6564",
                        "id": 33375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3097:18:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcb10c0b735db8c592069a8f3844a3f037d90797cf4fadaf219d497a74e4a814",
                          "typeString": "literal_string \"USDC call failed\""
                        },
                        "value": "USDC call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcb10c0b735db8c592069a8f3844a3f037d90797cf4fadaf219d497a74e4a814",
                          "typeString": "literal_string \"USDC call failed\""
                        }
                      ],
                      "id": 33373,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        384,
                        405
                      ],
                      "referencedDeclaration": 405,
                      "src": "3080:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 33376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3080:36:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33377,
                  "nodeType": "ExpressionStatement",
                  "src": "3080:36:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33379,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33326,
                        "src": "3137:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33378,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "3127:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3127:15:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33381,
                  "nodeType": "EmitStatement",
                  "src": "3122:20:57"
                }
              ]
            },
            "documentation": {
              "id": 33320,
              "nodeType": "StructuredDocumentation",
              "src": "2316:111:57",
              "text": "@dev Wrote these address calls for Hw20\nSwapping DAI for USDC using address calls"
            },
            "functionSelector": "1c92c97b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExactInputSingleDAItoUSDC",
            "nameLocation": "2441:29:57",
            "parameters": {
              "id": 33321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2470:2:57"
            },
            "returnParameters": {
              "id": 33322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2480:0:57"
            },
            "scope": 33462,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33447,
            "nodeType": "FunctionDefinition",
            "src": "3209:732:57",
            "nodes": [],
            "body": {
              "id": 33446,
              "nodeType": "Block",
              "src": "3257:684:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33388,
                    33390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33388,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "3269:4:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 33446,
                      "src": "3264:9:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 33387,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3264:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33390,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3288:4:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 33446,
                      "src": "3275:17:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 33389,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3275:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33411,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783431346266333839",
                            "id": 33395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3340:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1095496585_by_1",
                              "typeString": "int_const 1095496585"
                            },
                            "value": "0x414bf389"
                          },
                          {
                            "arguments": [
                              {
                                "id": 33398,
                                "name": "dai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33181,
                                "src": "3455:3:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 33399,
                                "name": "busd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33184,
                                "src": "3472:4:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "333030",
                                "id": 33400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3490:3:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300_by_1",
                                  "typeString": "int_const 300"
                                },
                                "value": "300"
                              },
                              {
                                "expression": {
                                  "id": 33401,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3559:3:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 33402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3563:6:57",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3559:10:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 33403,
                                  "name": "getMaxUint256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33461,
                                  "src": "3583:13:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 33404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3583:15:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "3130",
                                "id": 33405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3612:2:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              {
                                "hexValue": "30",
                                "id": 33406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3628:1:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 33407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3643:1:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_300_by_1",
                                  "typeString": "int_const 300"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 33396,
                                "name": "ISwapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32673,
                                "src": "3407:11:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$32673_$",
                                  "typeString": "type(contract ISwapRouter)"
                                }
                              },
                              "id": 33397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3419:22:57",
                              "memberName": "ExactInputSingleParams",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32597,
                              "src": "3407:34:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$32597_storage_ptr_$",
                                "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                              }
                            },
                            "id": 33408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3407:247:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$32597_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1095496585_by_1",
                              "typeString": "int_const 1095496585"
                            },
                            {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$32597_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          ],
                          "expression": {
                            "id": 33393,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3308:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3312:18:57",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3308:22:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 33409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3308:352:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 33391,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33178,
                        "src": "3296:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 33392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3303:4:57",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "3296:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 33410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3296:365:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3263:398:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33413,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33388,
                        "src": "3678:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465722063616c6c206661696c6564",
                        "id": 33414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3684:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        },
                        "value": "Router call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afd43a11d7760cdb21e8f0bbed561c41998fb473f512569b6ef3cbf8b700d8fc",
                          "typeString": "literal_string \"Router call failed\""
                        }
                      ],
                      "id": 33412,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        384,
                        405
                      ],
                      "referencedDeclaration": 405,
                      "src": "3667:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 33415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:38:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33416,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:38:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33418,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33390,
                        "src": "3726:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33417,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "3716:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3716:15:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33420,
                  "nodeType": "EmitStatement",
                  "src": "3711:20:57"
                },
                {
                  "documentation": "@dev Checking DAI balance post swap",
                  "expression": {
                    "id": 33435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 33421,
                          "name": "temp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33388,
                          "src": "3783:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 33422,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33390,
                          "src": "3789:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 33423,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3782:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 33428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3830:20:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 33431,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3860:4:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapTest_$33462",
                                    "typeString": "contract UniswapTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapTest_$33462",
                                    "typeString": "contract UniswapTest"
                                  }
                                ],
                                "id": 33430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3852:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33429,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3852:7:57",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3852:13:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 33426,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3806:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 33427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3810:19:57",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "3806:23:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 33433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3806:60:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 33424,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33181,
                          "src": "3797:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3801:4:57",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3797:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 33434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3797:70:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "3782:85:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33436,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:85:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33438,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33388,
                        "src": "3884:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4441492063616c6c206661696c6564",
                        "id": 33439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3890:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c57fc6f596d8ddac4cfe230803c1f31f4c9530280f40f3e0bbec208fb29c3308",
                          "typeString": "literal_string \"DAI call failed\""
                        },
                        "value": "DAI call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c57fc6f596d8ddac4cfe230803c1f31f4c9530280f40f3e0bbec208fb29c3308",
                          "typeString": "literal_string \"DAI call failed\""
                        }
                      ],
                      "id": 33437,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        384,
                        405
                      ],
                      "referencedDeclaration": 405,
                      "src": "3873:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 33440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3873:35:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33441,
                  "nodeType": "ExpressionStatement",
                  "src": "3873:35:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33443,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33390,
                        "src": "3929:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33442,
                      "name": "log_bytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "3919:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3919:15:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33445,
                  "nodeType": "EmitStatement",
                  "src": "3914:20:57"
                }
              ]
            },
            "documentation": {
              "id": 33384,
              "nodeType": "StructuredDocumentation",
              "src": "3155:49:57",
              "text": "@dev Swapping DAI to busd using address calls"
            },
            "functionSelector": "7b0982f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExactInputSingleDAItoBUSD",
            "nameLocation": "3218:29:57",
            "parameters": {
              "id": 33385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3247:2:57"
            },
            "returnParameters": {
              "id": 33386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3257:0:57"
            },
            "scope": 33462,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33461,
            "nodeType": "FunctionDefinition",
            "src": "3947:127:57",
            "nodes": [],
            "body": {
              "id": 33460,
              "nodeType": "Block",
              "src": "4002:72:57",
              "nodes": [],
              "statements": [
                {
                  "id": 33459,
                  "nodeType": "UncheckedBlock",
                  "src": "4012:56:57",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4051:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4043:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 33452,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4043:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4043:10:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 33456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4056:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4043:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 33451,
                      "id": 33458,
                      "nodeType": "Return",
                      "src": "4036:21:57"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "d3c60c7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaxUint256",
            "nameLocation": "3956:13:57",
            "parameters": {
              "id": 33448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3969:2:57"
            },
            "returnParameters": {
              "id": 33451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33461,
                  "src": "3993:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3993:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3992:9:57"
            },
            "scope": 33462,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33168,
              "name": "Test",
              "nameLocations": [
                "516:4:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7671,
              "src": "516:4:57"
            },
            "id": 33169,
            "nodeType": "InheritanceSpecifier",
            "src": "516:4:57"
          }
        ],
        "canonicalName": "UniswapTest",
        "contractDependencies": [
          29684
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 33167,
          "nodeType": "StructuredDocumentation",
          "src": "337:153:57",
          "text": "@notice This contract makes calls to defined mainnet addresses and tests\nfor 2 exactInputSingle swaps from DAI to USDC and DAI to binance"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33462,
          7671,
          7640,
          4872,
          4483,
          2759,
          1901,
          7660,
          1933
        ],
        "name": "UniswapTest",
        "nameLocation": "501:11:57",
        "scope": 33463,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 57
}