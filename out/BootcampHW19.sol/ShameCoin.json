{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "allowAdminBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "canAdminBurn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "canAdminTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isMinting",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "413:2256:21:-:0;;;700:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:13:15;;796:5:21;;803:7;;2042:13:15;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2065:17:15;;;;:7;;:17;;;;;:::i;:::-;;1976:113;;936:32:14;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;822:25:21::1;840:6:::0;822:17:::1;:25::i;:::-;700:154:::0;;;413:2256;;640:96:18;719:10;;640:96::o;2433:187:14:-;2525:6;;;-1:-1:-1;;;;;2541:17:14;;;-1:-1:-1;;;;;;2541:17:14;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:14;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:14;;1972:2:23;2161:73:14::1;::::0;::::1;1954:21:23::0;2011:2;1991:18;;;1984:30;2050:34;2030:18;;;2023:62;-1:-1:-1;;;2101:18:23;;;2094:36;2147:19;;2161:73:14::1;;;;;;;;;2244:28;2263:8:::0;2244:18:::1;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1273:6;;-1:-1:-1;;;;;1273:6:14;719:10:18;1422:23:14;1414:68;;;;-1:-1:-1;;;1414:68:14;;2379:2:23;1414:68:14;;;2361:21:23;;;2398:18;;;2391:30;2457:34;2437:18;;;2430:62;2509:18;;1414:68:14;2177:356:23;1414:68:14;1359:130::o;413:2256:21:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;413:2256:21;;;-1:-1:-1;413:2256:21;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:23;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:23:o;1036:729::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1256:16;;-1:-1:-1;;;;;1321:14:23;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1652:2;1637:18;;1631:25;1536:73;;-1:-1:-1;1631:25:23;-1:-1:-1;;;;;;1685:31:23;;1675:42;;1665:70;;1731:1;1728;1721:12;1665:70;1754:5;1744:15;;;1036:729;;;;;:::o;2538:380::-;2617:1;2613:12;;;;2660;;;2681:61;;2735:4;2727:6;2723:17;2713:27;;2681:61;2788:2;2780:6;2777:14;2757:18;2754:38;2751:161;;2834:10;2829:3;2825:20;2822:1;2815:31;2869:4;2866:1;2859:15;2897:4;2894:1;2887:15;2751:161;;2538:380;;;:::o;:::-;413:2256:21;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806389afcb44116100b8578063bb6648f51161007c578063bb6648f514610285578063c2302e5e146102a8578063cbd9574e146102cb578063d6374101146102ea578063dd62ed3e1461030d578063f2fde38b1461032057600080fd5b806389afcb44146102295780638da5cb5b1461023c57806395d89b4114610257578063a457c2d71461025f578063a9059cbb1461027257600080fd5b806339509351116100ff57806339509351146101b15780633e38eeaf146101c45780636a627842146101e557806370a08231146101f8578063715018a61461022157600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b610144610333565b6040516101519190610db0565b60405180910390f35b61016d610168366004610e21565b6103c5565b6040519015158152602001610151565b6002545b604051908152602001610151565b61016d61019d366004610e4b565b6103dd565b60405160008152602001610151565b61016d6101bf366004610e21565b61048b565b6101e3336000908152600660205260409020805460ff19166001179055565b005b6101e36101f3366004610e87565b6104ad565b610181610206366004610e87565b6001600160a01b031660009081526020819052604090205490565b6101e36104e9565b6101e3610237366004610e87565b6104fd565b6005546040516001600160a01b039091168152602001610151565b61014461058e565b61016d61026d366004610e21565b61059d565b61016d610280366004610e21565b610623565b61016d610293366004610e87565b60066020526000908152604090205460ff1681565b61016d6102b6366004610e87565b60086020526000908152604090205460ff1681565b6101e3336000908152600760205260409020805460ff19166001179055565b61016d6102f8366004610e87565b60076020526000908152604090205460ff1681565b61018161031b366004610ea9565b61064f565b6101e361032e366004610e87565b61067a565b60606003805461034290610edc565b80601f016020809104026020016040519081016040528092919081815260200182805461036e90610edc565b80156103bb5780601f10610390576101008083540402835291602001916103bb565b820191906000526020600020905b81548152906001019060200180831161039e57829003601f168201915b5050505050905090565b6000336103d38185856106f0565b5060019392505050565b60006103e7610815565b6001600160a01b03841660009081526006602052604090205460ff166104545760405162461bcd60e51b815260206004820152601760248201527f4e6f7420616c6c6f77656420746f207472616e7366657200000000000000000060448201526064015b60405180910390fd5b6001600160a01b0384166000908152600660205260409020805460ff191690556001915061048384848461086f565b949350505050565b6000336103d381858561049e838361064f565b6104a89190610f16565b6106f0565b6104b5610815565b6001600160a01b0381166000908152600860205260409020805460ff191660019081179091556104e6908290610888565b50565b6104f1610815565b6104fb6000610953565b565b610505610815565b6001600160a01b03811660009081526007602052604090205460ff166105635760405162461bcd60e51b81526020600482015260136024820152722737ba1030b63637bbb2b2103a3790313ab93760691b604482015260640161044b565b6001600160a01b0381166000908152600760205260409020805460ff191690556104e68160016109a5565b60606004805461034290610edc565b600033816105ab828661064f565b90508381101561060b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161044b565b61061882868684036106f0565b506001949350505050565b50600160003361063281610ae0565b610645576106408184610b1c565b610483565b6104838484610b1c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610682610815565b6001600160a01b0381166106e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161044b565b6104e681610953565b6001600160a01b0383166107525760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161044b565b6001600160a01b0382166107b35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161044b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6005546001600160a01b031633146104fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161044b565b60003361087d858285610b2a565b610618858585610ba4565b6001600160a01b0382166108de5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161044b565b6108ea60008383610d53565b80600260008282546108fc9190610f16565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610a055760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161044b565b610a1182600083610d53565b6001600160a01b03821660009081526020819052604090205481811015610a855760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161044b565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610808565b505050565b6000610af46005546001600160a01b031690565b6001600160a01b0316826001600160a01b031614610b13576000610b16565b60015b92915050565b6000336103d3818585610ba4565b6000610b36848461064f565b90506000198114610b9e5781811015610b915760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161044b565b610b9e84848484036106f0565b50505050565b6001600160a01b038316610c085760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161044b565b6001600160a01b038216610c6a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161044b565b610c75838383610d53565b6001600160a01b03831660009081526020819052604090205481811015610ced5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161044b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610b9e565b610d5c33610ae0565b158015610d8157506001600160a01b03821660009081526008602052604090205460ff165b15610adb576001600160a01b0382166000908152600860205260409020805460ff19169055610adb8282610888565b600060208083528351808285015260005b81811015610ddd57858101830151858201604001528201610dc1565b81811115610def576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e1c57600080fd5b919050565b60008060408385031215610e3457600080fd5b610e3d83610e05565b946020939093013593505050565b600080600060608486031215610e6057600080fd5b610e6984610e05565b9250610e7760208501610e05565b9150604084013590509250925092565b600060208284031215610e9957600080fd5b610ea282610e05565b9392505050565b60008060408385031215610ebc57600080fd5b610ec583610e05565b9150610ed360208401610e05565b90509250929050565b600181811c90821680610ef057607f821691505b602082108103610f1057634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610f3757634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220084082b7995f85c52c4101dd99111e0aeef442cc1692543026219815e18e010064736f6c634300080d0033",
    "sourceMap": "413:2256:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:23;;1211:22;1193:41;;1181:2;1166:18;4431:197:15;1053:187:23;3242:106:15;3329:12;;3242:106;;;1391:25:23;;;1379:2;1364:18;3242:106:15;1245:177:23;1951:301:21;;;;;;:::i;:::-;;:::i;860:89::-;;;917:5;1902:36:23;;1890:2;1875:18;860:89:21;1760:184:23;5871:234:15;;;;;;:::i;:::-;;:::i;955:89:21:-;;1019:10;1002:28;;;;:16;:28;;;;;:35;;-1:-1:-1;;1002:35:21;1033:4;1002:35;;;955:89;;;1189:114;;;;;;:::i;:::-;;:::i;3406:125:15:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:15;3480:7;3506:18;;;;;;;;;;;;3406:125;1831:101:14;;;:::i;1391:180:21:-;;;;;;:::i;:::-;;:::i;1201:85:14:-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:14;;;2286:51:23;;2274:2;2259:18;1201:85:14;2140:203:23;2365:102:15;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;1634:250:21:-;;;;;;:::i;:::-;;:::i;548:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;652:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1050:81;;1106:10;1093:24;;;;:12;:24;;;;;:31;;-1:-1:-1;;1093:31:21;1120:4;1093:31;;;1050:81;602:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3974:149:15;;;;;;:::i;:::-;;:::i;2081:198:14:-;;;;;;:::i;:::-;;:::i;2154:98:15:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:18;4568:32:15;719:10:18;4584:7:15;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:15;;4431:197;-1:-1:-1;;;4431:197:15:o;1951:301:21:-;2058:4;1094:13:14;:11;:13::i;:::-;-1:-1:-1;;;;;2082:22:21;::::1;;::::0;;;:16:::1;:22;::::0;;;;;::::1;;2074:58;;;::::0;-1:-1:-1;;;2074:58:21;;3200:2:23;2074:58:21::1;::::0;::::1;3182:21:23::0;3239:2;3219:18;;;3212:30;3278:25;3258:18;;;3251:53;3321:18;;2074:58:21::1;;;;;;;;;-1:-1:-1::0;;;;;2142:22:21;::::1;2167:5;2142:22:::0;;;:16:::1;:22;::::0;;;;:30;;-1:-1:-1;;2142:30:21::1;::::0;;;;-1:-1:-1;2209:36:21::1;2159:4:::0;2234:2;2142:30;2209:18:::1;:36::i;:::-;2202:43:::0;1951:301;-1:-1:-1;;;;1951:301:21:o;5871:234:15:-;5959:4;719:10:18;6013:64:15;719:10:18;6029:7:15;6066:10;6038:25;719:10:18;6029:7:15;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1189:114:21:-;1094:13:14;:11;:13::i;:::-;-1:-1:-1;;;;;1246:17:21;::::1;;::::0;;;:9:::1;:17;::::0;;;;:24;;-1:-1:-1;;1246:24:21::1;1266:4;1246:24:::0;;::::1;::::0;;;1280:16:::1;::::0;1256:6;;1280:5:::1;:16::i;:::-;1189:114:::0;:::o;1831:101:14:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1391:180:21:-;1094:13:14;:11;:13::i;:::-;-1:-1:-1;;;;;1456:20:21;::::1;;::::0;;;:12:::1;:20;::::0;;;;;::::1;;1448:52;;;::::0;-1:-1:-1;;;1448:52:21;;3782:2:23;1448:52:21::1;::::0;::::1;3764:21:23::0;3821:2;3801:18;;;3794:30;-1:-1:-1;;;3840:18:23;;;3833:49;3899:18;;1448:52:21::1;3580:343:23::0;1448:52:21::1;-1:-1:-1::0;;;;;1510:20:21;::::1;1533:5;1510:20:::0;;;:12:::1;:20;::::0;;;;:28;;-1:-1:-1;;1510:28:21::1;::::0;;1548:16:::1;1523:6:::0;1510:28;1548:5:::1;:16::i;2365:102:15:-:0;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:18;6685:4:15;6766:25;719:10:18;6783:7:15;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:15;;4130:2:23;6801:85:15;;;4112:21:23;4169:2;4149:18;;;4142:30;4208:34;4188:18;;;4181:62;-1:-1:-1;;;4259:18:23;;;4252:35;4304:19;;6801:85:15;3928:401:23;6801:85:15;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;-1:-1:-1;7008:4:15;;6592:427;-1:-1:-1;;;;6592:427:15:o;1634:250:21:-;-1:-1:-1;1738:1:21;1713:4;719:10:18;1795:20:21;719:10:18;1795:12:21;:20::i;:::-;:82;;1847:30;1862:6;1870;1847:14;:30::i;:::-;1795:82;;;1818:26;1833:2;1837:6;1818:14;:26::i;3974:149:15:-;-1:-1:-1;;;;;4089:18:15;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;2081:198:14:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:14;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:14;;4536:2:23;2161:73:14::1;::::0;::::1;4518:21:23::0;4575:2;4555:18;;;4548:30;4614:34;4594:18;;;4587:62;-1:-1:-1;;;4665:18:23;;;4658:36;4711:19;;2161:73:14::1;4334:402:23::0;2161:73:14::1;2244:28;2263:8;2244:18;:28::i;10504:370:15:-:0;-1:-1:-1;;;;;10635:19:15;;10627:68;;;;-1:-1:-1;;;10627:68:15;;4943:2:23;10627:68:15;;;4925:21:23;4982:2;4962:18;;;4955:30;5021:34;5001:18;;;4994:62;-1:-1:-1;;;5072:18:23;;;5065:34;5116:19;;10627:68:15;4741:400:23;10627:68:15;-1:-1:-1;;;;;10713:21:15;;10705:68;;;;-1:-1:-1;;;10705:68:15;;5348:2:23;10705:68:15;;;5330:21:23;5387:2;5367:18;;;5360:30;5426:34;5406:18;;;5399:62;-1:-1:-1;;;5477:18:23;;;5470:32;5519:19;;10705:68:15;5146:398:23;10705:68:15;-1:-1:-1;;;;;10784:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1391:25:23;;;10835:32:15;;1364:18:23;10835:32:15;;;;;;;;10504:370;;;:::o;1359:130:14:-;1273:6;;-1:-1:-1;;;;;1273:6:14;719:10:18;1422:23:14;1414:68;;;;-1:-1:-1;;;1414:68:14;;5751:2:23;1414:68:14;;;5733:21:23;;;5770:18;;;5763:30;5829:34;5809:18;;;5802:62;5881:18;;1414:68:14;5549:356:23;5190:286:15;5317:4;719:10:18;5373:38:15;5389:4;719:10:18;5404:6:15;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;8567:535::-;-1:-1:-1;;;;;8650:21:15;;8642:65;;;;-1:-1:-1;;;8642:65:15;;6112:2:23;8642:65:15;;;6094:21:23;6151:2;6131:18;;;6124:30;6190:33;6170:18;;;6163:61;6241:18;;8642:65:15;5910:355:23;8642:65:15;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:15;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1391:25:23;;;8999:37:15;;1364:18:23;8999:37:15;;;;;;;8567:535;;:::o;2433:187:14:-;2525:6;;;-1:-1:-1;;;;;2541:17:14;;;-1:-1:-1;;;;;;2541:17:14;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;9422:659:15:-;-1:-1:-1;;;;;9505:21:15;;9497:67;;;;-1:-1:-1;;;9497:67:15;;6472:2:23;9497:67:15;;;6454:21:23;6511:2;6491:18;;;6484:30;6550:34;6530:18;;;6523:62;-1:-1:-1;;;6601:18:23;;;6594:31;6642:19;;9497:67:15;6270:397:23;9497:67:15;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;-1:-1:-1;;;;;9660:18:15;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:15;;6874:2:23;9688:71:15;;;6856:21:23;6913:2;6893:18;;;6886:30;6952:34;6932:18;;;6925:62;-1:-1:-1;;;7003:18:23;;;6996:32;7045:19;;9688:71:15;6672:398:23;9688:71:15;-1:-1:-1;;;;;9793:18:15;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1391:25:23;;;9793:9:15;;:18;9978:37;;1364:18:23;9978:37:15;1245:177:23;10026:48:15;9487:594;9422:659;;:::o;2544:123:21:-;2605:4;2638:7;1273:6:14;;-1:-1:-1;;;;;1273:6:14;;1201:85;2638:7:21;-1:-1:-1;;;;;2628:17:21;:6;-1:-1:-1;;;;;2628:17:21;;:32;;2655:5;2628:32;;;2648:4;2628:32;2621:39;2544:123;-1:-1:-1;;2544:123:21:o;3727:189:15:-;3806:4;719:10:18;3860:28:15;719:10:18;3877:2:15;3881:6;3860:9;:28::i;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:15;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:15;;7277:2:23;11404:68:15;;;7259:21:23;7316:2;7296:18;;;7289:30;7355:31;7335:18;;;7328:59;7404:18;;11404:68:15;7075:353:23;11404:68:15;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:15;;7591:68;;;;-1:-1:-1;;;7591:68:15;;7635:2:23;7591:68:15;;;7617:21:23;7674:2;7654:18;;;7647:30;7713:34;7693:18;;;7686:62;-1:-1:-1;;;7764:18:23;;;7757:35;7809:19;;7591:68:15;7433:401:23;7591:68:15;-1:-1:-1;;;;;7677:16:15;;7669:64;;;;-1:-1:-1;;;7669:64:15;;8041:2:23;7669:64:15;;;8023:21:23;8080:2;8060:18;;;8053:30;8119:34;8099:18;;;8092:62;-1:-1:-1;;;8170:18:23;;;8163:33;8213:19;;7669:64:15;7839:399:23;7669:64:15;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;-1:-1:-1;;;;;7815:15:15;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:15;;8445:2:23;7840:72:15;;;8427:21:23;8484:2;8464:18;;;8457:30;8523:34;8503:18;;;8496:62;-1:-1:-1;;;8574:18:23;;;8567:36;8620:19;;7840:72:15;8243:402:23;7840:72:15;-1:-1:-1;;;;;7946:15:15;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1391:25:23;;;8161:13:15;;8210:26;;1364:18:23;8210:26:15;;;;;;;8247:37;9422:659;2308:230:21;2412:24;2425:10;2412:12;:24::i;:::-;2411:25;:42;;;;-1:-1:-1;;;;;;2440:13:21;;;;;;:9;:13;;;;;;;;2411:42;2408:124;;;-1:-1:-1;;;;;2469:13:21;;2485:5;2469:13;;;:9;:13;;;;;:21;;-1:-1:-1;;2469:21:21;;;2504:17;2479:2;2514:6;2504:5;:17::i;14:597:23:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:23;574:15;-1:-1:-1;;570:29:23;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:23:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:23;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:23:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:23:o;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:380::-;2692:1;2688:12;;;;2735;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:161;;2909:10;2904:3;2900:20;2897:1;2890:31;2944:4;2941:1;2934:15;2972:4;2969:1;2962:15;2826:161;;2613:380;;;:::o;3350:225::-;3390:3;3421:1;3417:6;3414:1;3411:13;3408:136;;;3466:10;3461:3;3457:20;3454:1;3447:31;3501:4;3498:1;3491:15;3529:4;3526:1;3519:15;3408:136;-1:-1:-1;3560:9:23;;3350:225::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowAdminBurn()": "cbd9574e",
    "allowAdminTransfer()": "3e38eeaf",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address)": "89afcb44",
    "canAdminBurn(address)": "d6374101",
    "canAdminTransfer(address)": "bb6648f5",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "isMinting(address)": "c2302e5e",
    "mint(address)": "6a627842",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowAdminBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canAdminBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canAdminTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMinting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:experimental\":\"This is an experimental contract\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"returns\":{\"_0\":\"bool: returns true if transfer succeeded\"}},\"transferFrom(address,address,uint256)\":{\"returns\":{\"_0\":\"bool: returns true if transferFrom succeeded\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"canAdminTransfer\":{\"details\":\"These are boolean conditions for restricting control of the admin and minting\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address)\":{\"notice\":\"Allows owner to burn to any address if that address owner permits\"},\"mint(address)\":{\"notice\":\"Allows owner to mint to any address\"}},\"notice\":\"Give admin control to a trusted entity for distributing shame coins\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BootcampHW19.sol\":\"ShameCoin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/BootcampHW19.sol\":{\"keccak256\":\"0xf6b99e436eecba76110965fbf8c5b7e8807caaa5fb3418911288d825eff0162f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a506db2ea92d842faacb1a7d619f25c37b1f1edf4eb3e81d666d58b7bd3c4e02\",\"dweb:/ipfs/QmPkqN9T5EJvnXwo3sqtRqi5pMtEbHaCqRcPVTmKqaQtah\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allowAdminBurn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allowAdminTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canAdminBurn",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canAdminTransfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMinting",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "returns": {
              "_0": "bool: returns true if transfer succeeded"
            }
          },
          "transferFrom(address,address,uint256)": {
            "returns": {
              "_0": "bool: returns true if transferFrom succeeded"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(address)": {
            "notice": "Allows owner to burn to any address if that address owner permits"
          },
          "mint(address)": {
            "notice": "Allows owner to mint to any address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":base64-sol/=lib/base64/",
        ":base64/=lib/base64/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BootcampHW19.sol": "ShameCoin"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/BootcampHW19.sol": {
        "keccak256": "0xf6b99e436eecba76110965fbf8c5b7e8807caaa5fb3418911288d825eff0162f",
        "urls": [
          "bzz-raw://a506db2ea92d842faacb1a7d619f25c37b1f1edf4eb3e81d666d58b7bd3c4e02",
          "dweb:/ipfs/QmPkqN9T5EJvnXwo3sqtRqi5pMtEbHaCqRcPVTmKqaQtah"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BootcampHW19.sol",
    "id": 26770,
    "exportedSymbols": {
      "Context": [
        25484
      ],
      "ERC20": [
        25359
      ],
      "IERC20": [
        25437
      ],
      "IERC20Metadata": [
        25462
      ],
      "Ownable": [
        24772
      ],
      "ShameCoin": [
        26769
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2630:21",
    "nodes": [
      {
        "id": 26526,
        "nodeType": "PragmaDirective",
        "src": "39:23:21",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 26527,
        "nodeType": "ImportDirective",
        "src": "64:52:21",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26770,
        "sourceUnit": 24773,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26528,
        "nodeType": "ImportDirective",
        "src": "117:55:21",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26770,
        "sourceUnit": 25360,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26769,
        "nodeType": "ContractDefinition",
        "src": "413:2256:21",
        "nodes": [
          {
            "id": 26538,
            "nodeType": "VariableDeclaration",
            "src": "548:48:21",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26534,
              "nodeType": "StructuredDocumentation",
              "src": "457:86:21",
              "text": "@dev These are boolean conditions for restricting control of the admin and minting"
            },
            "functionSelector": "bb6648f5",
            "mutability": "mutable",
            "name": "canAdminTransfer",
            "nameLocation": "580:16:21",
            "scope": 26769,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 26537,
              "keyType": {
                "id": 26535,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "556:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "548:24:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 26536,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "567:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 26542,
            "nodeType": "VariableDeclaration",
            "src": "602:44:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "d6374101",
            "mutability": "mutable",
            "name": "canAdminBurn",
            "nameLocation": "634:12:21",
            "scope": 26769,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 26541,
              "keyType": {
                "id": 26539,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "610:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "602:24:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 26540,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "621:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 26546,
            "nodeType": "VariableDeclaration",
            "src": "652:41:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "c2302e5e",
            "mutability": "mutable",
            "name": "isMinting",
            "nameLocation": "684:9:21",
            "scope": 26769,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 26545,
              "keyType": {
                "id": 26543,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "660:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "652:24:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 26544,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "671:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 26564,
            "nodeType": "FunctionDefinition",
            "src": "700:154:21",
            "nodes": [],
            "body": {
              "id": 26563,
              "nodeType": "Block",
              "src": "812:42:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26560,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26552,
                        "src": "840:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26559,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24751,
                      "src": "822:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:25:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26562,
                  "nodeType": "ExpressionStatement",
                  "src": "822:25:21"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 26555,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26548,
                    "src": "796:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 26556,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26550,
                    "src": "803:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 26557,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 26554,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25359,
                  "src": "790:5:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "790:21:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 26553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26548,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "731:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26564,
                  "src": "717:19:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26550,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "757:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26564,
                  "src": "743:21:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26552,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "778:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26564,
                  "src": "770:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:74:21"
            },
            "returnParameters": {
              "id": 26558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "812:0:21"
            },
            "scope": 26769,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26573,
            "nodeType": "FunctionDefinition",
            "src": "860:89:21",
            "nodes": [],
            "body": {
              "id": 26572,
              "nodeType": "Block",
              "src": "924:25:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 26570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "941:1:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 26569,
                  "id": 26571,
                  "nodeType": "Return",
                  "src": "934:8:21"
                }
              ]
            },
            "baseFunctions": [
              24847
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "869:8:21",
            "overrides": {
              "id": 26566,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "900:8:21"
            },
            "parameters": {
              "id": 26565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "877:2:21"
            },
            "returnParameters": {
              "id": 26569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26573,
                  "src": "917:5:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 26567,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "916:7:21"
            },
            "scope": 26769,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 26584,
            "nodeType": "FunctionDefinition",
            "src": "955:89:21",
            "nodes": [],
            "body": {
              "id": 26583,
              "nodeType": "Block",
              "src": "992:52:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26576,
                        "name": "canAdminTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26538,
                        "src": "1002:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 26579,
                      "indexExpression": {
                        "expression": {
                          "id": 26577,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1019:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 26578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1019:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1002:28:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 26580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1002:35:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26582,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:35:21"
                }
              ]
            },
            "functionSelector": "3e38eeaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowAdminTransfer",
            "nameLocation": "964:18:21",
            "parameters": {
              "id": 26574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:2:21"
            },
            "returnParameters": {
              "id": 26575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "992:0:21"
            },
            "scope": 26769,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26595,
            "nodeType": "FunctionDefinition",
            "src": "1050:81:21",
            "nodes": [],
            "body": {
              "id": 26594,
              "nodeType": "Block",
              "src": "1083:48:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26587,
                        "name": "canAdminBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26542,
                        "src": "1093:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 26590,
                      "indexExpression": {
                        "expression": {
                          "id": 26588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1106:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 26589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1106:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1093:24:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 26591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1120:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1093:31:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26593,
                  "nodeType": "ExpressionStatement",
                  "src": "1093:31:21"
                }
              ]
            },
            "functionSelector": "cbd9574e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowAdminBurn",
            "nameLocation": "1059:14:21",
            "parameters": {
              "id": 26585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:2:21"
            },
            "returnParameters": {
              "id": 26586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1083:0:21"
            },
            "scope": 26769,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26615,
            "nodeType": "FunctionDefinition",
            "src": "1189:114:21",
            "nodes": [],
            "body": {
              "id": 26614,
              "nodeType": "Block",
              "src": "1236:67:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26603,
                        "name": "isMinting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26546,
                        "src": "1246:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 26605,
                      "indexExpression": {
                        "id": 26604,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26598,
                        "src": "1256:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1246:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 26606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1266:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1246:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26608,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:24:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26610,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26598,
                        "src": "1286:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1294:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26609,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25176,
                      "src": "1280:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:16:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26613,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:16:21"
                }
              ]
            },
            "documentation": {
              "id": 26596,
              "nodeType": "StructuredDocumentation",
              "src": "1137:47:21",
              "text": "@notice Allows owner to mint to any address"
            },
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26601,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26600,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24691,
                  "src": "1226:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1226:9:21"
              }
            ],
            "name": "mint",
            "nameLocation": "1198:4:21",
            "parameters": {
              "id": 26599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26598,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1211:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26615,
                  "src": "1203:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:16:21"
            },
            "returnParameters": {
              "id": 26602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1236:0:21"
            },
            "scope": 26769,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26642,
            "nodeType": "FunctionDefinition",
            "src": "1391:180:21",
            "nodes": [],
            "body": {
              "id": 26641,
              "nodeType": "Block",
              "src": "1438:133:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 26624,
                          "name": "canAdminBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26542,
                          "src": "1456:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 26626,
                        "indexExpression": {
                          "id": 26625,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26618,
                          "src": "1469:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1456:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f206275726e",
                        "id": 26627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1478:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9",
                          "typeString": "literal_string \"Not allowed to burn\""
                        },
                        "value": "Not allowed to burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9",
                          "typeString": "literal_string \"Not allowed to burn\""
                        }
                      ],
                      "id": 26623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1448:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1448:52:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26629,
                  "nodeType": "ExpressionStatement",
                  "src": "1448:52:21"
                },
                {
                  "expression": {
                    "id": 26634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26630,
                        "name": "canAdminBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26542,
                        "src": "1510:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 26632,
                      "indexExpression": {
                        "id": 26631,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26618,
                        "src": "1523:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1510:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 26633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1533:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1510:28:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26635,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:28:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26637,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26618,
                        "src": "1554:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1562:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26636,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25248,
                      "src": "1548:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:16:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26640,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:16:21"
                }
              ]
            },
            "documentation": {
              "id": 26616,
              "nodeType": "StructuredDocumentation",
              "src": "1309:77:21",
              "text": "@notice Allows owner to burn to any address if that address owner permits"
            },
            "functionSelector": "89afcb44",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26621,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26620,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24691,
                  "src": "1428:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1428:9:21"
              }
            ],
            "name": "burn",
            "nameLocation": "1400:4:21",
            "parameters": {
              "id": 26619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26618,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1413:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26642,
                  "src": "1405:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1404:16:21"
            },
            "returnParameters": {
              "id": 26622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1438:0:21"
            },
            "scope": 26769,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26678,
            "nodeType": "FunctionDefinition",
            "src": "1634:250:21",
            "nodes": [],
            "body": {
              "id": 26677,
              "nodeType": "Block",
              "src": "1719:165:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26653,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26647,
                      "src": "1729:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 26654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1738:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1729:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26656,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:10:21"
                },
                {
                  "assignments": [
                    26658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26658,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1757:6:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 26677,
                      "src": "1749:14:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 26657,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1749:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26661,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26659,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25474,
                      "src": "1766:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 26660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:12:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1749:29:21"
                },
                {
                  "expression": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 26663,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26658,
                          "src": "1808:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 26662,
                        "name": "checkIfOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26768,
                        "src": "1795:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 26664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1795:20:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 26672,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26658,
                          "src": "1862:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 26673,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26647,
                          "src": "1870:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 26670,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1847:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ShameCoin_$26769_$",
                            "typeString": "type(contract super ShameCoin)"
                          }
                        },
                        "id": 26671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24896,
                        "src": "1847:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 26674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1847:30:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 26675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1795:82:21",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 26667,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26645,
                          "src": "1833:2:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 26668,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26647,
                          "src": "1837:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 26665,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1818:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ShameCoin_$26769_$",
                            "typeString": "type(contract super ShameCoin)"
                          }
                        },
                        "id": 26666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24896,
                        "src": "1818:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 26669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1818:26:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 26652,
                  "id": 26676,
                  "nodeType": "Return",
                  "src": "1788:89:21"
                }
              ]
            },
            "baseFunctions": [
              24896
            ],
            "documentation": {
              "id": 26643,
              "nodeType": "StructuredDocumentation",
              "src": "1577:52:21",
              "text": "@return bool: returns true if transfer succeeded"
            },
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1643:8:21",
            "overrides": {
              "id": 26649,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1695:8:21"
            },
            "parameters": {
              "id": 26648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26645,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1660:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26678,
                  "src": "1652:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26647,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1672:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26678,
                  "src": "1664:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1651:28:21"
            },
            "returnParameters": {
              "id": 26652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26651,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26678,
                  "src": "1713:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26650,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1713:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1712:6:21"
            },
            "scope": 26769,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 26718,
            "nodeType": "FunctionDefinition",
            "src": "1951:301:21",
            "nodes": [],
            "body": {
              "id": 26717,
              "nodeType": "Block",
              "src": "2064:188:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 26694,
                          "name": "canAdminTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26538,
                          "src": "2082:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 26696,
                        "indexExpression": {
                          "id": 26695,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26681,
                          "src": "2099:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2082:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f207472616e73666572",
                        "id": 26697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2106:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6ef91d4bafb6dac40ae21192116bd096db67fc6e8cbd65f96aa6b6436096f2b",
                          "typeString": "literal_string \"Not allowed to transfer\""
                        },
                        "value": "Not allowed to transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6ef91d4bafb6dac40ae21192116bd096db67fc6e8cbd65f96aa6b6436096f2b",
                          "typeString": "literal_string \"Not allowed to transfer\""
                        }
                      ],
                      "id": 26693,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2074:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2074:58:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26699,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:58:21"
                },
                {
                  "expression": {
                    "id": 26704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26700,
                        "name": "canAdminTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26538,
                        "src": "2142:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 26702,
                      "indexExpression": {
                        "id": 26701,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26681,
                        "src": "2159:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2142:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 26703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2167:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2142:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26705,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:30:21"
                },
                {
                  "expression": {
                    "id": 26708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26706,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26685,
                      "src": "2182:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 26707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2191:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2182:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26709,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:10:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26712,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26681,
                        "src": "2228:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26713,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26683,
                        "src": "2234:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26714,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26685,
                        "src": "2238:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26710,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2209:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ShameCoin_$26769_$",
                          "typeString": "type(contract super ShameCoin)"
                        }
                      },
                      "id": 26711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24972,
                      "src": "2209:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 26715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2209:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 26692,
                  "id": 26716,
                  "nodeType": "Return",
                  "src": "2202:43:21"
                }
              ]
            },
            "baseFunctions": [
              24972
            ],
            "documentation": {
              "id": 26679,
              "nodeType": "StructuredDocumentation",
              "src": "1890:56:21",
              "text": "@return bool: returns true if transferFrom succeeded"
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26689,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26688,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24691,
                  "src": "2039:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2039:9:21"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "1960:12:21",
            "overrides": {
              "id": 26687,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2030:8:21"
            },
            "parameters": {
              "id": 26686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26681,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1981:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26718,
                  "src": "1973:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1973:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26683,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1995:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26718,
                  "src": "1987:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26685,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2007:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26718,
                  "src": "1999:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1999:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1972:42:21"
            },
            "returnParameters": {
              "id": 26692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26691,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26718,
                  "src": "2058:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26690,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2057:6:21"
            },
            "scope": 26769,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 26752,
            "nodeType": "FunctionDefinition",
            "src": "2308:230:21",
            "nodes": [],
            "body": {
              "id": 26751,
              "nodeType": "Block",
              "src": "2398:140:21",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 26737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2411:25:21",
                      "subExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26730,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2425:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 26731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2425:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26729,
                          "name": "checkIfOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26768,
                          "src": "2412:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 26732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2412:24:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 26734,
                        "name": "isMinting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26546,
                        "src": "2440:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 26736,
                      "indexExpression": {
                        "id": 26735,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26723,
                        "src": "2450:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2440:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2411:42:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26750,
                  "nodeType": "IfStatement",
                  "src": "2408:124:21",
                  "trueBody": {
                    "id": 26749,
                    "nodeType": "Block",
                    "src": "2455:77:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 26742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 26738,
                              "name": "isMinting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26546,
                              "src": "2469:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 26740,
                            "indexExpression": {
                              "id": 26739,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26723,
                              "src": "2479:2:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2469:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 26741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2485:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2469:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 26743,
                        "nodeType": "ExpressionStatement",
                        "src": "2469:21:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 26745,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26723,
                              "src": "2510:2:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 26746,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26725,
                              "src": "2514:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 26744,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25176,
                            "src": "2504:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 26747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2504:17:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26748,
                        "nodeType": "ExpressionStatement",
                        "src": "2504:17:21"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              25347
            ],
            "documentation": {
              "id": 26719,
              "nodeType": "StructuredDocumentation",
              "src": "2258:45:21",
              "text": "@dev Mints a token to non-owner transfers"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2317:20:21",
            "overrides": {
              "id": 26727,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2389:8:21"
            },
            "parameters": {
              "id": 26726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26721,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2346:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26752,
                  "src": "2338:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26723,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2360:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26752,
                  "src": "2352:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26725,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2372:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26752,
                  "src": "2364:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2364:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2337:42:21"
            },
            "returnParameters": {
              "id": 26728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2398:0:21"
            },
            "scope": 26769,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 26768,
            "nodeType": "FunctionDefinition",
            "src": "2544:123:21",
            "nodes": [],
            "body": {
              "id": 26767,
              "nodeType": "Block",
              "src": "2611:56:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 26762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 26759,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26754,
                        "src": "2628:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 26760,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24700,
                          "src": "2638:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 26761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2638:7:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2628:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "66616c7365",
                      "id": 26764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2655:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "id": 26765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2628:32:21",
                    "trueExpression": {
                      "hexValue": "74727565",
                      "id": 26763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2648:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 26758,
                  "id": 26766,
                  "nodeType": "Return",
                  "src": "2621:39:21"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfOwner",
            "nameLocation": "2553:12:21",
            "parameters": {
              "id": 26755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26754,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2574:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26768,
                  "src": "2566:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2565:16:21"
            },
            "returnParameters": {
              "id": 26758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26768,
                  "src": "2605:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26756,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2605:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2604:6:21"
            },
            "scope": 26769,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26530,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25359,
              "src": "435:5:21"
            },
            "id": 26531,
            "nodeType": "InheritanceSpecifier",
            "src": "435:5:21"
          },
          {
            "baseName": {
              "id": 26532,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24772,
              "src": "442:7:21"
            },
            "id": 26533,
            "nodeType": "InheritanceSpecifier",
            "src": "442:7:21"
          }
        ],
        "canonicalName": "ShameCoin",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 26529,
          "nodeType": "StructuredDocumentation",
          "src": "274:138:21",
          "text": "@notice Give admin control to a trusted entity for distributing shame coins\n @custom:experimental This is an experimental contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          26769,
          24772,
          25359,
          25462,
          25437,
          25484
        ],
        "name": "ShameCoin",
        "nameLocation": "422:9:21",
        "scope": 26770,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 21
}